{"version":3,"file":"MyComponent.js","sourceRoot":"","sources":["../MyComponent.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAyF,eAAe,EAAE,aAAa,EAAE,OAAO,EAAE,YAAY,EAAwB,MAAM,qBAAqB,CAAC;AACxO,OAAO,oBAAoB,CAAC;AAM5B,MAAM,OAAO,WAAY,SAAQ,gBAAqB;IAAtD;QACE,2BAA2B;QAC3B,aAAa;QACb,SAAS;QACT,oEAAoE;QACpE,mEAAmE;QACnE,UAAU;QACV,OAAO;QACP,IAAI;;QAEI,iBAAY,GAAG,WAAW,CAAC,SAAS,EAAkB,CAAC;QAEvD,iBAAY,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC5C,eAAU,GAAG,OAAO,CAAC,MAAM,CAAuB,IAAI,CAAC,YAAY,CAAC,CAAC;IAwD/E,CAAC;IAtDS,oBAAoB;QAC1B,OAAO,aAAa,CAAC,sBAAsB,CAAC,SAAS,EAAE;YACrD;gBACE,IAAI,EAAE,CAAC;gBACP,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,IAAI;gBACV,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,KAAK,EAAE,SAAS;aACjB;SACF,CAAC,CAAC;IACL,CAAC;IAEM,MAAM;QACX,OAAO,CACL,oCAAK,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,IAAI,CAAC,YAAY;YAClD,2BAAC,eAAe,IACd,MAAM,EAAE,QAAQ,EAChB,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,WAAW,EAAE,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAC7D,QAAQ,EAAE,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,GAChE,CAEE,CACP,CAAC;IACJ,CAAC;CACF","sourcesContent":["import { FSComponent, DisplayComponent, VNode, MapSystemBuilder, ComponentProps, MapComponentProps, SynVisProps, Subscribable, SynVisComponent, BingComponent, Subject, ArraySubject, ReadonlyFloat64Array } from '@microsoft/msfs-sdk';\r\nimport './MyInstrument.css';\r\n\r\ninterface MyComponentProps extends ComponentProps {\r\n  text: Subscribable<string>;\r\n}\r\n\r\nexport class MyComponent extends DisplayComponent<any> {\r\n  // public render(): VNode {\r\n  //   return (\r\n  //     <>\r\n  //       <div class='my-component'>Synthetic vision goes here.</div>\r\n  //       <div class='my-component2'>Navigation map goes here.</div>\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  private containerRef = FSComponent.createRef<HTMLDivElement>();\r\n\r\n  private float64Array = new Float64Array([800, 800]);\r\n  private resolution = Subject.create<ReadonlyFloat64Array>(this.float64Array);\r\n\r\n  private createSVTEarthColors(): number[] {\r\n    return BingComponent.createEarthColorsArray('#000049', [\r\n      {\r\n        elev: 0,\r\n        color: '#0c2e04'\r\n      },\r\n      {\r\n        elev: 500,\r\n        color: '#113300'\r\n      },\r\n      {\r\n        elev: 2000,\r\n        color: '#463507'\r\n      },\r\n      {\r\n        elev: 3000,\r\n        color: '#5c421f'\r\n      },\r\n      {\r\n        elev: 6000,\r\n        color: '#50331b'\r\n      },\r\n      {\r\n        elev: 8000,\r\n        color: '#512d15'\r\n      },\r\n      {\r\n        elev: 10500,\r\n        color: '#673118'\r\n      },\r\n      {\r\n        elev: 27000,\r\n        color: '#4d4d4d'\r\n      },\r\n      {\r\n        elev: 29000,\r\n        color: '#666666'\r\n      }\r\n    ]);\r\n  }\r\n\r\n  public render(): VNode {\r\n    return (\r\n      <div class=\"synthetic-vision\" ref={this.containerRef}>\r\n        <SynVisComponent\r\n          bingId={\"EEE145\"}\r\n          resolution={this.resolution}\r\n          earthColors={ArraySubject.create(this.createSVTEarthColors())}\r\n          skyColor={Subject.create(BingComponent.hexaToRGBColor('0033E6'))}\r\n        />\r\n        {/* <HorizonCompass ref={this.horizonRef} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n"]}