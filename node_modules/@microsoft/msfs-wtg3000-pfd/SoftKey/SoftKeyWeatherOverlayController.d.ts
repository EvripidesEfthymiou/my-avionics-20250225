import { UserSettingManager } from '@microsoft/msfs-sdk';
import { MapUserSettingTypes, SoftKeyMenu, SoftKeyMenuItem } from '@microsoft/msfs-garminsdk';
/**
 * Inset/HSI map weather overlay mode.
 */
export declare enum WeatherOverlayMode {
    Off = "Off",
    Radar = "Radar",
    Datalink = "Datalink"
}
/**
 * A controller which binds a softkey to a state which can take one of several enumerated values. Once bound, the
 * softkey will display the bound state and each press of the softkey will cycle the state through possible values.
 */
export declare class SoftKeyWeatherOverlayController {
    private readonly softkeyMenu;
    private readonly softkeyIndex;
    private readonly softkeyLabel;
    private readonly mapSettingManager;
    private item?;
    private readonly weatherOverlayMode;
    private statePipe?;
    private isAlive;
    private isInit;
    /**
     * Constructor.
     * @param softkeyMenu The softkey menu to which this controller's softkey belongs.
     * @param softkeyIndex The index in the softkey menu at which this controller's softkey is located.
     * @param softkeyLabel The text label of this controller's softkey.
     * @param mapSettingManager A manager for map user settings.
     */
    constructor(softkeyMenu: SoftKeyMenu, softkeyIndex: number, softkeyLabel: string, mapSettingManager: UserSettingManager<MapUserSettingTypes>);
    /**
     * Initializes this controller. This will create a softkey menu item and bind it to this controller's state.
     * @returns The softkey menu item bound to this controller's state.
     * @throws Error if this controller has been destroyed.
     */
    init(): SoftKeyMenuItem;
    /**
     * Destroys this controller. This will remove the softkey menu item bound to this controller's state.
     */
    destroy(): void;
}
//# sourceMappingURL=SoftKeyWeatherOverlayController.d.ts.map