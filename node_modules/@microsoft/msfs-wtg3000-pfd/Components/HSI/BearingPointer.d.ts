import { ComponentProps, DisplayComponent, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { G3000NavIndicator } from '@microsoft/msfs-wtg3000-common';
import './BearingPointer.css';
/**
 * Component props for BearingPointer.
 */
export interface BearingPointerProps extends ComponentProps {
    /** Whether the bearing pointer should use the HSI map style. */
    hsiMap: boolean;
    /** The index of the bearing pointer. */
    index: 1 | 2;
    /** The nav indicator to use. */
    navIndicator: G3000NavIndicator;
    /** The magnetic variation correction to apply to the needle's magnetic course, in degrees. */
    magVarCorrection: Subscribable<number>;
    /** Whether heading data is in a failure state. */
    isHeadingDataFailed: Subscribable<boolean>;
    /** Whether the bearing pointer should actively update. */
    isActive: Subscribable<boolean>;
}
/**
 * A bearing pointer for an HSI.
 */
export declare class BearingPointer extends DisplayComponent<BearingPointerProps> {
    private static readonly ANIMATION_RATE;
    private readonly rootStyle;
    private readonly nominalBearing;
    private readonly targetRotation;
    private readonly isVisible;
    private readonly animator;
    private isActiveSub?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders a needle for an HSI rose.
     * @returns A needle for an HSI rose, as a VNode.
     */
    private renderRoseNeedle;
    /**
     * Renders a needle for an HSI map.
     * @returns A needle for an HSI map, as a VNode.
     */
    private renderMapNeedle;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=BearingPointer.d.ts.map