import { ComponentProps, DisplayComponent, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { SpeedInfoDataProvider } from './SpeedInfoDataProvider';
import './SpeedInfo.css';
/**
 * Component props for SpeedInfo.
 */
export interface SpeedInfoProps extends ComponentProps {
    /** A data provider for the display. */
    dataProvider: SpeedInfoDataProvider;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
    /** Whether the display should be decluttered. */
    declutter: Subscribable<boolean>;
}
/**
 * A G3000 speed information display. Displays true airspeed and ground speed.
 */
export declare class SpeedInfo extends DisplayComponent<SpeedInfoProps> {
    private static readonly FORMATTER;
    private readonly tasRef;
    private readonly gsRef;
    private readonly rootCssClass;
    private readonly precision;
    private readonly tas;
    private readonly gs;
    private tasPipe?;
    private gsPipe?;
    private isAirDataFailedSub?;
    private isGpsDataFailedSub?;
    private isGpsDeadReckoningSub?;
    private declutterSub?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=SpeedInfo.d.ts.map