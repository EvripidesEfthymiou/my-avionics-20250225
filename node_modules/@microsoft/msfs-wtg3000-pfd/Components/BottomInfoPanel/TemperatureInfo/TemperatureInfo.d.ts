import { ComponentProps, DisplayComponent, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { TemperatureInfoDataProvider } from './TemperatureInfoDataProvider';
import './TemperatureInfo.css';
/**
 * Component props for TemperatureInfo.
 */
export interface TemperatureInfoProps extends ComponentProps {
    /** A data provider for the display. */
    dataProvider: TemperatureInfoDataProvider;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
    /** Whether the display should be decluttered. */
    declutter: Subscribable<boolean>;
}
/**
 * A G3000 temperature information display. Displays outside (static) air temperature and deviation from ISA.
 */
export declare class TemperatureInfo extends DisplayComponent<TemperatureInfoProps> {
    private static readonly OAT_FORMATTER;
    private static readonly ISA_FORMATTER;
    private readonly oatRef;
    private readonly isaRef;
    private readonly rootCssClass;
    private readonly precision;
    private readonly oat;
    private readonly isa;
    private oatPipe?;
    private isaPipe?;
    private isDataFailedSub?;
    private declutterSub?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=TemperatureInfo.d.ts.map