import { ComponentProps, DisplayComponent, Subscribable, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { AltimeterDataProvider, AltitudeAlertState, MinimumsAlertState } from '@microsoft/msfs-garminsdk';
import { PfdAliasedUserSettingTypes, PfdGduConfig } from '@microsoft/msfs-wtg3000-common';
import { AltimeterConfig } from './AltimeterConfig';
import './G3000Altimeter.css';
/**
 * Component props for {@link G3000Altimeter}.
 */
export interface G3000AltimeterProps extends ComponentProps {
    /** The configuration object for the altimeter. */
    config: AltimeterConfig;
    /** Configuration options for the altimeter's parent PFD GDU. */
    pfdGduConfig: PfdGduConfig;
    /** A data provider for the altimeter. */
    dataProvider: AltimeterDataProvider;
    /** The current altitude alert state. */
    altitudeAlertState: Subscribable<AltitudeAlertState>;
    /** The current minimums alert state. */
    minimumsAlertState: Subscribable<MinimumsAlertState>;
    /** A manager for PFD user settings. */
    pfdSettingManager: UserSettingManager<PfdAliasedUserSettingTypes>;
    /** Whether the indicator should be decluttered due to unusual attitudes. */
    declutter: Subscribable<boolean>;
}
/**
 * A G3000 altimeter.
 */
export declare class G3000Altimeter extends DisplayComponent<G3000AltimeterProps> {
    private readonly ref;
    private isAlive;
    private isAwake;
    /** @inheritDoc */
    onAfterRender(): void;
    /**
     * Wakes this altimeter. While awake, this altimeter will automatically update its appearance.
     * @throws Error if this altimeter is dead.
     */
    wake(): void;
    /**
     * Puts this altimeter to sleep. While asleep, this altimeter will not automatically update its appearance.
     * @throws Error if this altimeter is dead.
     */
    sleep(): void;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=G3000Altimeter.d.ts.map