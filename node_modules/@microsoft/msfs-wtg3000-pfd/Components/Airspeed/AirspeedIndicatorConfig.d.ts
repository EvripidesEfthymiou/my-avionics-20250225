import { AirspeedApproachCueBugOptions, AirspeedIndicatorBottomDisplayOptions, AirspeedIndicatorColorRange, AirspeedIndicatorDataProviderOptions, AirspeedTapeScaleOptions } from '@microsoft/msfs-garminsdk';
import { Config, ConfigFactory } from '@microsoft/msfs-wtg3000-common';
import { VSpeedBugConfig } from './VSpeedBugConfig';
/**
 * Options for airspeed indicator V-speed annunciations.
 */
export type AirspeedIndicatorVSpeedAnnuncOptions = {
    /** Whether airspeed indicator V-speed annunciations are enabled. */
    enabled: boolean;
};
/**
 * A configuration object which defines airspeed indicator options.
 */
export declare class AirspeedIndicatorConfig implements Config {
    private static readonly DEFAULT_DATA_OPTIONS;
    private static readonly DEFAULT_TAPE_SCALE_OPTIONS;
    private static readonly DEFAULT_BOTTOM_OPTIONS;
    private static readonly DEFAULT_VSPEED_ANNUNC_OPTIONS;
    /** Options for the airspeed indicator data provider. */
    readonly dataProviderOptions: Readonly<AirspeedIndicatorDataProviderOptions>;
    /** Options for the airspeed tape scale. */
    readonly tapeScaleOptions: Readonly<AirspeedTapeScaleOptions>;
    /** Color range definitions for the airspeed tape. */
    readonly colorRangeDefinitions?: readonly AirspeedIndicatorColorRange[];
    /** Options for the bottom display box. */
    readonly bottomDisplayOptions: Readonly<AirspeedIndicatorBottomDisplayOptions>;
    /** Reference V-speed bug config options for the airspeed indicator. */
    readonly vSpeedBugConfigs?: readonly VSpeedBugConfig[];
    /** Options for V-speed annunciations. */
    readonly vSpeedAnnuncOptions: Readonly<AirspeedIndicatorVSpeedAnnuncOptions>;
    /** Options for the approach cue bug, or `undefined` if the approach cue bug should not be displayed. */
    readonly approachCueBugOptions?: Readonly<AirspeedApproachCueBugOptions>;
    /**
     * Creates a new AirspeedIndicatorConfig from a configuration document element.
     * @param element A configuration document element.
     * @param factory A configuration object factory to use to create child configuration objects.
     */
    constructor(element: Element | undefined, factory: ConfigFactory);
}
//# sourceMappingURL=AirspeedIndicatorConfig.d.ts.map