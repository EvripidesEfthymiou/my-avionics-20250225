/// <reference types="@microsoft/msfs-types/pages/vcockpit/instruments/shared/utils/xmllogic" />
/// <reference types="@microsoft/msfs-types/pages/vcockpit/instruments/shared/baseinstrument" />
import { Config } from '../Config/Config';
/**
 * A definition for a GPS receiver.
 */
export type GpsReceiverDefinition = {
    /** The electrical logic for this definition's GPS receiver. */
    electricity?: CompositeLogicXMLElement;
};
/**
 * A configuration object which defines options related to IAUs.
 */
export declare class IauDefsConfig implements Config {
    /** The number of IAUs (integrated avionics units) supported by the plane. */
    readonly count: number;
    /**
     * IAU definitions. The index of each definition's position in the array corresponds to the index of its IAU.
     */
    readonly definitions: readonly IauConfig[];
    /**
     * Creates a new IauDefsConfig from a configuration document element.
     * @param baseInstrument The `BaseInstrument` element associated with the configuration.
     * @param element A configuration document element.
     */
    constructor(baseInstrument: BaseInstrument, element: Element | undefined);
    /**
     * Parses IAU definitions from a configuration document element.
     * @param baseInstrument The `BaseInstrument` element associated with the configuration.
     * @param element A configuration document element.
     * @returns An array of IAU definitions defined by the configuration document element.
     */
    private parseDefinitions;
}
/**
 * A configuration object which defines options related to an IAU.
 */
export declare class IauConfig implements Config {
    /** The index of the IAU. */
    readonly index: number;
    /**
     * A definition describing the IAU's GPS receiver.
     */
    readonly gpsDefinition: Readonly<GpsReceiverDefinition>;
    /**
     * Creates a new IauConfig from a configuration document element.
     * @param baseInstrument The `BaseInstrument` element associated with the configuration.
     * @param element A configuration document element.
     * @param defaultIndex The IAU index to assign to the config if one cannot be parsed from the configuration document
     * element. Defaults to `1`.
     */
    constructor(baseInstrument: BaseInstrument, element: Element | undefined, defaultIndex?: number);
    /**
     * Parses a GPS receiver definition from a configuration document element.
     * @param baseInstrument The `BaseInstrument` element associated with the configuration.
     * @param element A configuration document element.
     * @returns The GPS receiver definition defined by the configuration document element.
     */
    private parseGpsDefinition;
}
//# sourceMappingURL=IauDefsConfig.d.ts.map