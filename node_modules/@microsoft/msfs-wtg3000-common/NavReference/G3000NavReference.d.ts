import { EventBus, Subscribable, UserSettingManager } from '@microsoft/msfs-sdk';
import { BasicNavReferenceIndicator, NavReferenceIndicator, NavReferenceIndicators, NavReferenceSource, NavReferenceSources } from '@microsoft/msfs-garminsdk';
import { PfdBearingPointerUserSettingTypes } from '../Settings/PfdUserSettings';
/** A valid {@link NavReferenceSource} name for the G3000. */
export type G3000NavSourceName = 'NAV1' | 'NAV2' | 'DME1' | 'DME2' | 'ADF1' | 'ADF2' | 'FMS1' | 'FMS2';
/** The names of the available nav sources in the G3000 for the course needle. */
export type G3000CourseNeedleNavSourceName = 'FMS1' | 'NAV1' | 'NAV2';
/** A G3000 {@link NavReferenceSource}. */
export type G3000NavSource = NavReferenceSource<G3000NavSourceName>;
/** A collection of G3000 {@link NavReferenceSource|NavReferenceSources}. */
export type G3000NavSources = NavReferenceSources<G3000NavSourceName>;
/** A collection of NavSources that can be used with the G3000CourseNeedle. */
export type G3000CourseNeedleNavSources = NavReferenceSources<G3000CourseNeedleNavSourceName>;
/** A NavSource for the G3000CourseNeedle. */
export type G3000CourseNeedleNavSource = NavReferenceSource<G3000CourseNeedleNavSourceName>;
/** A valid {@link NavReferenceIndicator} name for the G3000. */
export type G3000NavIndicatorName = 'bearingPointer1' | 'bearingPointer2' | 'activeSource' | 'approachPreview' | 'navInfo' | 'dmeInfo';
/** A G3000 {@link NavReferenceIndicator}. */
export type G3000NavIndicator = NavReferenceIndicator<G3000NavSourceName>;
/** A collection of G3000 {@link NavReferenceIndicator|NavReferenceIndicators}. */
export type G3000NavIndicators = NavReferenceIndicators<G3000NavSourceName, G3000NavIndicatorName>;
/**
 * A G3000 active navigation source {@link NavReferenceIndicator}.
 */
export declare class G3000ActiveSourceNavIndicator extends BasicNavReferenceIndicator<G3000NavSourceName> {
    private readonly bus;
    private readonly navSource;
    /**
     * Creates a new instance of G3000ActiveSourceNavIndicator.
     * @param navSources A collection of {@link NavReferenceSource|NavReferenceSources} from which the indicator can
     * source data.
     * @param bus The event bus.
     * @param index The index of this indicator's active nav source.
     */
    constructor(navSources: G3000NavSources, bus: EventBus, index: 1 | 2);
}
/**
 * A provider of approach preview data.
 */
export declare class G3000ApproachPreviewDataProvider {
    private readonly navSources;
    private static readonly SUPPORTED_APPROACH_TYPES;
    private static readonly isTunedToApproachFreq;
    private readonly _source;
    /**
     * The navigation source from which approach preview data is derived, or `null` if approach preview data is not
     * available.
     */
    readonly source: Subscribable<"NAV1" | "NAV2" | null>;
    private readonly approachDetails;
    private readonly flightPhase;
    private readonly activeNavSource;
    private readonly isNav1TunedToApproachFreq;
    private readonly isNav2TunedToApproachFreq;
    /**
     * Creates a new instance of G3000ApproachPreviewDataProvider.
     * @param navSources A collection of G3000 {@link NavReferenceSource|NavReferenceSources}.
     * @param bus The event bus.
     */
    constructor(navSources: G3000NavSources, bus: EventBus);
}
/**
 * A G3000 approach preview (LOC and glideslope) {@link NavReferenceIndicator}.
 */
export declare class G3000ApproachPreviewNavIndicator extends BasicNavReferenceIndicator<G3000NavSourceName> {
    /**
     * Creates a new instance of G3000ApproachPreviewNavIndicator.
     * @param navSources A collection of {@link NavReferenceSource|NavReferenceSources} from which the indicator can
     * source data.
     * @param dataProvider A provider of approach preview data.
     */
    constructor(navSources: G3000NavSources, dataProvider: G3000ApproachPreviewDataProvider);
}
/**
 * A G3000 bearing pointer {@link NavReferenceIndicator}.
 */
export declare class G3000BearingPointerNavIndicator extends BasicNavReferenceIndicator<G3000NavSourceName> {
    private static readonly ADF_FREQ_FORMATTER;
    private static readonly EMPTY_FILTER;
    private static readonly NAV_FILTER;
    private static readonly ADF_FILTER;
    private readonly ppos;
    private readonly gpsDisState;
    private readonly pposSub;
    private readonly disSub;
    private readonly freqIdentPipe;
    /**
     * Creates a new instance of G3000BearingPointerNavIndicator.
     * @param navSources A collection of {@link NavReferenceSource|NavReferenceSources} from which the indicator can
     * source data.
     * @param bus The event bus.
     * @param index The index of the indicator's bearing pointer.
     * @param settingManager A manager for bearing pointer user settings.
     */
    constructor(navSources: NavReferenceSources<G3000NavSourceName>, bus: EventBus, index: 1 | 2, settingManager: UserSettingManager<PfdBearingPointerUserSettingTypes>);
    /** @inheritdoc */
    protected updateFromSource(newSource: NavReferenceSource<G3000NavSourceName> | null, oldSource: NavReferenceSource<G3000NavSourceName> | null): void;
}
/**
 * A G3000 Nav info {@link NavReferenceIndicator}.
 */
export declare class G3000NavInfoNavIndicator extends BasicNavReferenceIndicator<G3000NavSourceName> {
    private readonly bus;
    private static readonly SOURCE_MAP;
    private readonly _isPreview;
    /** Whether this indicator is in preview mode. */
    readonly isPreview: Subscribable<boolean>;
    private readonly previewSourceSub;
    /**
     * Creates a new instance of G3000NavInfoNavIndicator.
     * @param navSources A collection of {@link NavReferenceSource|NavReferenceSources} from which the indicator can
     * source data.
     * @param bus The event bus.
     * @param index The index of the active nav source associated with the indicator.
     * @param previewDataProvider A provider of approach preview data.
     */
    constructor(navSources: G3000NavSources, bus: EventBus, index: 1 | 2, previewDataProvider: G3000ApproachPreviewDataProvider);
}
/**
 * A G3000 DME info {@link NavReferenceIndicator}.
 */
export declare class G3000DmeInfoNavIndicator extends BasicNavReferenceIndicator<G3000NavSourceName> {
    private readonly bus;
    private readonly _isPreview;
    /** Whether this indicator is in preview mode. */
    readonly isPreview: Subscribable<boolean>;
    private readonly previewSourceSub?;
    /**
     * Creates a new instance of G3000DmeInfoNavIndicator.
     * @param navSources A collection of {@link NavReferenceSource|NavReferenceSources} from which the indicator can
     * source data.
     * @param bus The event bus.
     * @param index The index of the active nav source associated with the indicator.
     * @param dmeRadioCount The number of supported DME radios.
     * @param previewDataProvider A provider of approach preview data.
     */
    constructor(navSources: G3000NavSources, bus: EventBus, index: 1 | 2, dmeRadioCount: 0 | 1 | 2, previewDataProvider: G3000ApproachPreviewDataProvider);
}
//# sourceMappingURL=G3000NavReference.d.ts.map