import { EventBus } from '@microsoft/msfs-sdk';
import { Fms, TerrainSystemModule } from '@microsoft/msfs-garminsdk';
import { G3000FlightPlannerId } from '../CommonTypes';
import { G3000TerrainSystemType } from './G3000TerrainSystemTypes';
import { TerrainSystemModuleConfig, TerrainSystemModuleInhibitFlagDef, TerrainSystemModulePrimaryInhibitFlagDef } from './TerrainSystemModuleConfig';
/**
 * A configuration object which defines options related to glideslope/glidepath deviation (GSD) alerts.
 */
export declare class GlideslopeDeviationConfig implements TerrainSystemModuleConfig {
    /** @inheritDoc */
    readonly isResolvableConfig = true;
    /** @inheritDoc */
    readonly primaryInhibitFlagDefs: Readonly<TerrainSystemModulePrimaryInhibitFlagDef>[];
    /** @inheritDoc */
    readonly secondaryInhibitFlagDefs: Readonly<TerrainSystemModuleInhibitFlagDef>[];
    /** Whether alerting should function as a GPWS alert. */
    readonly functionAsGpws: boolean;
    /**
     * Creates a new GlideslopeDeviationConfig.
     * @param type The terrain system type for which to create the configuration object.
     * @param element A configuration document element from which to parse options. If not defined, then default options
     * based on the terrain system type will be used.
     */
    constructor(type: G3000TerrainSystemType, element?: Element);
    /** @inheritDoc */
    resolve(): (bus: EventBus, fms: Fms<G3000FlightPlannerId>) => TerrainSystemModule;
}
//# sourceMappingURL=GlideslopeDeviationConfig.d.ts.map