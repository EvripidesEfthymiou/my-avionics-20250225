import { ChecklistDOMParserParseOptions } from '@microsoft/msfs-sdk';
import { GarminChecklistItemTypeDefMap } from '@microsoft/msfs-garminsdk';
import { G3000ChecklistSetDef } from './G3000ChecklistDefinition';
/**
 * Options to apply when {@link G3000ChecklistDOMParser} is parsing a checklist definition.
 */
export type G3000ChecklistDOMParserParseOptions = Omit<ChecklistDOMParserParseOptions<GarminChecklistItemTypeDefMap, void, void, void, void>, 'parseSetMetadata' | 'parseGroupMetadata' | 'parseListMetadata'>;
/**
 * A parser of G3000 checklist definitions from DOM elements.
 */
export declare class G3000ChecklistDOMParser {
    private readonly parser;
    /**
     * Parses the G3000 checklist definition specified by a DOM element.
     * @param element The element to parse.
     * @param options Options to apply to the parsing operation.
     * @returns The checklist definition parsed from the specified element.
     * @throws Error if the parsing operation encounters an unrecoverable syntax error or if the `errorInsteadOfDiscard`
     * option is enabled and the operation encounters a syntax error that would normally cause a definition to be
     * discarded.
     */
    parse(element: Element, options?: Readonly<G3000ChecklistDOMParserParseOptions>): G3000ChecklistSetDef;
    /**
     * Parses checklist set metadata from a DOM element.
     * @param element The element to parse.
     * @param parsed The checklist set definition without metadata parsed from the element.
     * @returns The checklist group definition parsed from the specified element, or `undefined` if the definition
     * was discarded.
     */
    private parseSetMetadata;
    /**
     * Parses checklist set metadata from a DOM element.
     * @param element The element to parse.
     * @param parsed The checklist set definition without metadata parsed from the element.
     * @returns The checklist group definition parsed from the specified element, or `undefined` if the definition
     * was discarded.
     */
    private parseGroupMetadata;
}
//# sourceMappingURL=G3000ChecklistDOMParser.d.ts.map