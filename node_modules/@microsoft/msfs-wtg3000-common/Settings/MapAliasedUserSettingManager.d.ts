import { Consumer, EventBus, UserSetting, UserSettingManager, UserSettingMap, UserSettingRecord, UserSettingValue } from '@microsoft/msfs-sdk';
import { PfdIndex } from '../CommonTypes';
import { ControllableDisplayPaneIndex } from '../Components/DisplayPanes/DisplayPaneTypes';
import { G3000MapUserSettingTypes } from './MapUserSettings';
/**
 * An aliased map user setting manager which can switch the true settings from which its aliased settings are sourced.
 * The supported sources are:
 * * Each set of display pane map settings.
 * * Each set of PFD map settings.
 */
export declare class MapAliasedUserSettingManager implements UserSettingManager<G3000MapUserSettingTypes> {
    private static readonly EMPTY_MAP;
    private readonly displayPaneManagers;
    private readonly pfdManagers;
    private readonly aliasedManager;
    /**
     * Constructor.
     * @param bus The event bus.
     */
    constructor(bus: EventBus);
    /**
     * Switches the source of this manager's settings to a set of display pane map settings.
     * @param index The index of the display pane.
     */
    useDisplayPaneSettings(index: ControllableDisplayPaneIndex): void;
    /**
     * Switches the source of this manager's settings to a set of PFD map settings.
     * @param index The index of the PFD.
     */
    usePfdSettings(index: PfdIndex): void;
    /** @inheritdoc */
    tryGetSetting<K extends string>(name: K): K extends keyof G3000MapUserSettingTypes ? UserSetting<G3000MapUserSettingTypes[K]> : undefined;
    /** @inheritdoc */
    getSetting<K extends keyof G3000MapUserSettingTypes & string>(name: K): UserSetting<NonNullable<G3000MapUserSettingTypes[K]>>;
    /** @inheritdoc */
    whenSettingChanged<K extends keyof G3000MapUserSettingTypes & string>(name: K): Consumer<NonNullable<G3000MapUserSettingTypes[K]>>;
    /** @inheritdoc */
    getAllSettings(): UserSetting<UserSettingValue>[];
    /** @inheritdoc */
    mapTo<M extends UserSettingRecord>(map: UserSettingMap<M, G3000MapUserSettingTypes>): UserSettingManager<M & G3000MapUserSettingTypes>;
}
//# sourceMappingURL=MapAliasedUserSettingManager.d.ts.map