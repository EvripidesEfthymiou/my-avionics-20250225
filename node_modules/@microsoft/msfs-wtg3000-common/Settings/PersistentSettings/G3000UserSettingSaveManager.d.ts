import { EventBus, UserSetting, UserSettingSaveManager } from '@microsoft/msfs-sdk';
import { AvionicsConfig } from '../../AvionicsConfig/AvionicsConfig';
import { FmsSpeedUserSettingManager } from '../FmsSpeedUserSettings';
import { WeightBalanceUserSettingManager } from '../WeightBalanceUserSettings';
/**
 * A manager for G3000 user settings that are saved and persistent across flight sessions.
 */
export declare class G3000UserSettingSaveManager extends UserSettingSaveManager {
    private static readonly PFD_SETTINGS;
    private static readonly TRAFFIC_SETTINGS;
    private static readonly WEIGHT_FUEL_NO_BALANCE_SETTINGS;
    private static readonly WEIGHT_FUEL_BALANCE_SETTINGS;
    private static readonly FMS_SPEED_EXCLUDE_SETTINGS;
    private static readonly WEIGHT_BALANCE_SETTINGS;
    private static readonly TOLD_SETTINGS;
    /**
     * Constructor.
     * @param bus The event bus.
     * @param config A configuration object defining avionics options.
     * @param pluginSettings Additional settings to manage defined by plugins.
     * @param fmsSpeedSettingManager A setting manager for FMS speed user settings, or `undefined` if FMS speed is not
     * supported.
     * @param weightBalanceSettingManager A setting manager for weight and balance user setting, or `undefined` if weight
     * and balance is not supported.
     */
    constructor(bus: EventBus, config: AvionicsConfig, pluginSettings: Iterable<UserSetting<any>>, fmsSpeedSettingManager: FmsSpeedUserSettingManager | undefined, weightBalanceSettingManager: WeightBalanceUserSettingManager | undefined);
}
//# sourceMappingURL=G3000UserSettingSaveManager.d.ts.map