import { Consumer, EventBus, Subscribable, UserSetting, UserSettingManager, UserSettingMap, UserSettingRecord, UserSettingValue } from '@microsoft/msfs-sdk';
import { WeightBalanceConfig } from '../Performance/WeightBalance/WeightBalanceConfig';
import { WeightBalanceEnvelopeDef, WeightBalanceLoadStationDef } from '../Performance/WeightBalance/WeightBalanceTypes';
/**
 * Weight and balance user settings.
 */
export type WeightBalanceUserSettingTypes = {
    /** The index of the active weight and balance envelope. */
    weightBalanceActiveEnvelopeIndex: number;
    /** The empty weight of a load station, in pounds. */
    [loadStationEmptyWeight: `weightBalanceLoadStationEmptyWeight_${string}`]: number;
    /** The moment-arm of the empty weight of a load station, in inches. */
    [loadStationEmptyArm: `weightBalanceLoadStationEmptyArm_${string}`]: number;
    /** The moment-arm of the load weight of a load station, in inches. */
    [loadStationLoadArm: `weightBalanceLoadStationLoadArm_${string}`]: number;
    /** Whether a load station is enabled. */
    [loadStationEnabled: `weightBalanceLoadStationEnabled_${string}`]: boolean;
    /** The load weight of a load station, in pounds. */
    [loadStationLoadWeight: `weightBalanceLoadStationLoadWeight_${string}`]: number;
};
/**
 * A manager for weight and balance user settings.
 */
export declare class WeightBalanceUserSettingManager implements UserSettingManager<WeightBalanceUserSettingTypes> {
    /** An array of definitions for the load stations supported by this manager. */
    readonly loadStationDefs: readonly Readonly<WeightBalanceLoadStationDef>[];
    /** An array of definitions for the envelopes supported by this manager. */
    readonly envelopeDefs: readonly Readonly<WeightBalanceEnvelopeDef>[];
    /** The definition for the active envelope. */
    readonly activeEnvelopeDef: Subscribable<Readonly<WeightBalanceEnvelopeDef>>;
    private readonly manager;
    /**
     * Creates a new instance of WeightBalanceSettingManager.
     * @param bus The event bus.
     * @param config A weight and balance configuration object.
     */
    constructor(bus: EventBus, config: WeightBalanceConfig);
    /** @inheritdoc */
    tryGetSetting<K extends string>(name: K): K extends keyof WeightBalanceUserSettingTypes ? UserSetting<WeightBalanceUserSettingTypes[K]> : undefined;
    /** @inheritdoc */
    getSetting<K extends keyof WeightBalanceUserSettingTypes & string>(name: K): UserSetting<NonNullable<WeightBalanceUserSettingTypes[K]>>;
    /** @inheritdoc */
    whenSettingChanged<K extends keyof WeightBalanceUserSettingTypes & string>(name: K): Consumer<NonNullable<WeightBalanceUserSettingTypes[K]>>;
    /** @inheritdoc */
    getAllSettings(): UserSetting<UserSettingValue>[];
    /** @inheritdoc */
    mapTo<M extends UserSettingRecord>(map: UserSettingMap<M, WeightBalanceUserSettingTypes>): UserSettingManager<M & WeightBalanceUserSettingTypes>;
}
//# sourceMappingURL=WeightBalanceUserSettings.d.ts.map