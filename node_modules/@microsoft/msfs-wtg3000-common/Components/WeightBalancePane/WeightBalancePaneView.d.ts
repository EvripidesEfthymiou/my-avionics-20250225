import { EventBus, VNode } from '@microsoft/msfs-sdk';
import { PerformanceWeightLimits } from '../../Performance/PerformanceWeightLimits';
import { WeightBalanceConfig } from '../../Performance/WeightBalance/WeightBalanceConfig';
import { WeightBalanceUserSettingManager } from '../../Settings/WeightBalanceUserSettings';
import { DisplayPaneSizeMode } from '../DisplayPanes/DisplayPaneTypes';
import { DisplayPaneView, DisplayPaneViewProps } from '../DisplayPanes/DisplayPaneView';
import { WeightBalancePaneViewModule } from './WeightBalancePaneViewModule';
import './WeightBalancePaneView.css';
/**
 * Component props for {@link WeightBalancePaneView}.
 */
export interface WeightBalancePaneViewProps extends DisplayPaneViewProps {
    /** The event bus. */
    bus: EventBus;
    /** Aircraft weight limits and capacities. */
    weightLimits: PerformanceWeightLimits;
    /** A weight and balance configuration object. */
    weightBalanceConfig: WeightBalanceConfig;
    /** A manager for weight and balance user settings. */
    weightBalanceSettingManager: WeightBalanceUserSettingManager;
    /** A module for customizing the pane view. */
    module?: WeightBalancePaneViewModule;
}
/**
 * A display pane view which displays weight and balance information.
 */
export declare class WeightBalancePaneView extends DisplayPaneView<WeightBalancePaneViewProps> {
    private static readonly TITLE_TEXT;
    private readonly publisher;
    private readonly weightBalanceRef;
    private readonly estimatedWeightRef;
    private readonly summaryHidden;
    private readonly loadRef;
    private readonly loadHidden;
    private readonly graphRef;
    private readonly graphHidden;
    private readonly graphTitle;
    private size;
    private readonly halfModeSetting;
    private mode;
    private readonly activePanels;
    private readonly activePanelsHidden;
    private needUpdateMode;
    private halfModeSettingSub?;
    /** @inheritDoc */
    onAfterRender(): void;
    /** @inheritDoc */
    onResume(size: DisplayPaneSizeMode): void;
    /** @inheritDoc */
    onPause(): void;
    /** @inheritDoc */
    onResize(size: DisplayPaneSizeMode): void;
    /** @inheritDoc */
    onUpdate(time: number): void;
    /**
     * Updates this pane from a size mode.
     * @param size The pane size mode from which to update.
     */
    private updateFromSizeMode;
    /**
     * Changes this pane's display mode.
     * @param mode The display mode to which to change, or `null` to inhibit all display modes.
     */
    private changeMode;
    /**
     * Responds to when the selected half-size display mode changes.
     */
    private onHalfModeSettingChanged;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=WeightBalancePaneView.d.ts.map