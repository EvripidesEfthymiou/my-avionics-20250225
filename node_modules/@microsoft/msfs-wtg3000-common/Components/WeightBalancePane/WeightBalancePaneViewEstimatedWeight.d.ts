import { ComponentProps, DisplayComponent, EventBus, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { WeightBalanceConfig } from '../../Performance/WeightBalance/WeightBalanceConfig';
import { WeightBalanceUserSettingManager } from '../../Settings/WeightBalanceUserSettings';
import { WeightFuelUserSettingTypes } from '../../Settings/WeightFuelUserSettings';
import { WeightBalancePaneViewPanel } from './WeightBalancePaneViewPanel';
import './WeightBalancePaneViewEstimatedWeight.css';
import './WeightBalancePaneViewSummary.css';
/**
 * Component props for {@link WeightBalancePaneViewEstimatedWeight}.
 */
export interface WeightBalancePaneViewEstimatedWeightProps extends ComponentProps {
    /** The event bus. */
    bus: EventBus;
    /** A weight and balance configuration object. */
    weightBalanceConfig: WeightBalanceConfig;
    /** A manager for weight/fuel user settings. */
    weightFuelSettingManager: UserSettingManager<WeightFuelUserSettingTypes>;
    /** A manager for weight and balance user settings. */
    weightBalanceSettingManager: WeightBalanceUserSettingManager;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
}
/**
 * An estimated weight panel for the weight and balance pane.
 */
export declare class WeightBalancePaneViewEstimatedWeight extends DisplayComponent<WeightBalancePaneViewEstimatedWeightProps> implements WeightBalancePaneViewPanel {
    private static readonly WEIGHT_FORMATTER;
    private thisNode?;
    private readonly landingWeightSource;
    private readonly landingWeightValue;
    private readonly isLandingWeightCaution;
    private readonly landingFuelSource;
    private readonly landingFuelValue;
    private readonly fuelReservesValue;
    private readonly holdFuelSource;
    private readonly holdFuelValue;
    private readonly excessFuelSource;
    private readonly excessFuelValue;
    private readonly landingFuelAlertType;
    private readonly isLandingFuelCaution;
    private readonly isLandingFuelWarning;
    private readonly subscriptions;
    /** @inheritDoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritDoc */
    onResume(): void;
    /** @inheritDoc */
    onPause(): void;
    /** @inheritDoc */
    onUpdate(): void;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=WeightBalancePaneViewEstimatedWeight.d.ts.map