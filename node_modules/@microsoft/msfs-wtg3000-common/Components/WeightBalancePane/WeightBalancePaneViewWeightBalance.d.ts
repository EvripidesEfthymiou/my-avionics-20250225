import { ComponentProps, DisplayComponent, EventBus, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { WeightBalanceConfig } from '../../Performance/WeightBalance/WeightBalanceConfig';
import { WeightBalanceUserSettingManager } from '../../Settings/WeightBalanceUserSettings';
import { WeightFuelUserSettingTypes } from '../../Settings/WeightFuelUserSettings';
import { WeightBalancePaneViewPanel } from './WeightBalancePaneViewPanel';
import './WeightBalancePaneViewSummary.css';
import './WeightBalancePaneViewWeightBalance.css';
/**
 * Component props for {@link WeightBalancePaneViewWeightBalance}.
 */
export interface WeightBalancePaneViewWeightBalanceProps extends ComponentProps {
    /** The event bus. */
    bus: EventBus;
    /** A weight and balance configuration object. */
    weightBalanceConfig: WeightBalanceConfig;
    /** A manager for weight/fuel user settings. */
    weightFuelSettingManager: UserSettingManager<WeightFuelUserSettingTypes>;
    /** A manager for weight and balance user settings. */
    weightBalanceSettingManager: WeightBalanceUserSettingManager;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
}
/**
 * An aircraft weight and balance panel for the weight and balance pane.
 */
export declare class WeightBalancePaneViewWeightBalance extends DisplayComponent<WeightBalancePaneViewWeightBalanceProps> implements WeightBalancePaneViewPanel {
    private static readonly WEIGHT_FORMATTER;
    private static readonly ARM_FORMATTER;
    private static readonly MAC_FORMATTER;
    private thisNode?;
    private readonly basicEmptyWeightValue;
    private readonly zeroFuelWeightSource;
    private readonly zeroFuelWeightValue;
    private readonly isZeroFuelWeightCaution;
    private readonly fobSource;
    private readonly fobValue;
    private readonly rampWeightSource;
    private readonly rampWeightValue;
    private readonly isRampWeightCaution;
    private readonly taxiFuelValue;
    private readonly takeoffWeightSource;
    private readonly takeoffWeightValue;
    private readonly isTakeoffWeightCaution;
    private readonly currentWeightSource;
    private readonly currentWeightValue;
    private readonly currentArmSource;
    private readonly currentArmValue;
    private readonly currentArmUnit;
    private readonly currentMacValueText;
    private readonly isArmCaution;
    private readonly subscriptions;
    /** @inheritDoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritDoc */
    onResume(): void;
    /** @inheritDoc */
    onPause(): void;
    /** @inheritDoc */
    onUpdate(): void;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritDoc */
    destroy(): void;
    /**
     * Rounds a nullable numeric value to a given precision.
     * @param precision The precision to which to round.
     * @param value The value to round.
     * @returns The specified value rounded to the specified precision, or `NaN` if the original value was `null`.
     */
    private static withPrecisionNullableToNaN;
}
//# sourceMappingURL=WeightBalancePaneViewWeightBalance.d.ts.map