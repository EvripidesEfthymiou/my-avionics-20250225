import { MapSystemContext, MapSystemController, MapSystemKeys, Subscribable } from '@microsoft/msfs-sdk';
import { MapGarminDataIntegrityModule } from '@microsoft/msfs-garminsdk';
import { PfdIndex } from '../../../CommonTypes';
import { PfdSensorsUserSettingManager } from '../../../Settings/PfdSensorsUserSettings';
/**
 * Modules required for MapDataIntegrityController.
 */
export interface MapDataIntegrityControllerModules {
    /** Data integrity module. */
    [MapSystemKeys.DataIntegrity]: MapGarminDataIntegrityModule;
}
/**
 * Controls the map's GPS and heading signal validity states.
 */
export declare class MapDataIntegrityController extends MapSystemController<MapDataIntegrityControllerModules> {
    private readonly pfdSensorsSettingManager;
    private readonly dataIntegrityModule;
    private readonly pfdIndex;
    private readonly ahrsHeadingDataValid;
    private readonly ahrsAttitudeDataValid;
    private readonly adcSystemState;
    private readonly fmsPosMode;
    private iauIndexSub?;
    private ahrsIndexSub?;
    private adcIndexSub?;
    /**
     * Creates a new instance of MapDataIntegrityController.
     * @param context This controller's map context.
     * @param pfdIndex The index of the PFD used by the map to obtain heading and GPS data.
     * @param pfdSensorsSettingManager A manager for all PFD sensors user settings.
     */
    constructor(context: MapSystemContext<MapDataIntegrityControllerModules, any, any, any>, pfdIndex: PfdIndex | Subscribable<PfdIndex>, pfdSensorsSettingManager: PfdSensorsUserSettingManager);
    /** @inheritDoc */
    onAfterMapRender(): void;
    /** @inheritDoc */
    onMapDestroyed(): void;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=MapDataIntegrityController.d.ts.map