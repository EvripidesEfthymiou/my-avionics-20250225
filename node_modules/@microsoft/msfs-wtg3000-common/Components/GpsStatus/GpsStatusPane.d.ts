import { EventBus, VNode } from '@microsoft/msfs-sdk';
import { DisplayPaneSizeMode, DisplayPaneView, DisplayPaneViewProps } from '../DisplayPanes';
import { GpsStatusDataProvider } from './GpsStatusDataProvider';
import './GpsStatusPane.css';
/**
 * Props on the GpsStatusPane display pane.
 */
export interface GpsStatusPaneProps extends DisplayPaneViewProps {
    /** An instance of the event bus. */
    bus: EventBus;
    /** The GPS data provider to use with this pane. */
    dataProvider: GpsStatusDataProvider;
}
/**
 * The G3000/5000 GPS Status display pane.
 */
export declare class GpsStatusPane extends DisplayPaneView<GpsStatusPaneProps> {
    private static readonly TIME_FORMAT_MAP;
    private static readonly FOM_DISPLAY_UNIT_MAP;
    private readonly unitsSettings;
    private readonly timeSettings;
    private readonly timeFormat;
    private readonly satellites;
    private readonly canvasEl;
    private readonly label;
    private readonly nullProjection;
    private satList?;
    private readonly realGpsPos;
    private readonly gpsPosition;
    private readonly gpsAlt;
    private readonly time;
    private readonly groundSpeed;
    private readonly track;
    private readonly epu;
    private readonly hdop;
    private readonly hfom;
    private readonly vfom;
    private readonly hfomDisplayUnit;
    private readonly vfomDisplayUnit;
    private readonly hfomLargeUnitFormatter;
    private readonly hfomSmallUnitFormatter;
    private readonly vfomLargeUnitFormatter;
    private readonly vfomSmallUnitFormatter;
    private readonly dataSubs;
    private readonly systemState;
    private readonly sbasState;
    /** @inheritdoc */
    onAfterRender(node: VNode): void;
    /** @inheritdoc */
    onPause(): void;
    /** @inheritdoc */
    onResume(size: DisplayPaneSizeMode, width: number, height: number): void;
    /** @inheritdoc */
    onUpdate(): void;
    /**
     * Draws the satellite sky display.
     */
    private drawSatellites;
    /**
     * Calculates the horizon zenith angle.
     * @returns The calculated horizon zenith angle based on the current altitude.
     */
    private calcHorizonAngle;
    /** @inheritdoc */
    render(): VNode | null;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GpsStatusPane.d.ts.map