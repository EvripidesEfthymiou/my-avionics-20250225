import { UserSettingManager } from '@microsoft/msfs-sdk';
import { type DisplayPaneAllUserSettingTypes } from '../../Settings/DisplayPanesUserSettings';
import { ControllableDisplayPaneIndex, DisplayPaneControlGtcIndex, DisplayPaneIndex } from './DisplayPaneTypes';
/** Collection of functions for working with Display Panes. */
export declare class DisplayPaneUtils {
    /** An array of indexes of all display panes. */
    static readonly ALL_INDEXES: readonly [DisplayPaneIndex.LeftPfdInstrument, DisplayPaneIndex.LeftPfd, DisplayPaneIndex.LeftMfd, DisplayPaneIndex.RightMfd, DisplayPaneIndex.RightPfd, DisplayPaneIndex.RightPfdInstrument];
    /** An array of indexes of display panes that are controllable by GTCs. */
    static readonly CONTROLLABLE_INDEXES: readonly [DisplayPaneIndex.LeftPfd, DisplayPaneIndex.LeftMfd, DisplayPaneIndex.RightMfd, DisplayPaneIndex.RightPfd];
    /** An array of indexes of PFD instrument display panes. */
    static readonly PFD_INSTRUMENT_INDEXES: readonly [DisplayPaneIndex.LeftPfdInstrument, DisplayPaneIndex.RightPfdInstrument];
    /** An array of indexes of PFD display panes. */
    static readonly PFD_INDEXES: readonly [DisplayPaneIndex.LeftPfd, DisplayPaneIndex.RightPfd];
    /** An array of indexes of MFD display panes. */
    static readonly MFD_INDEXES: readonly [DisplayPaneIndex.LeftMfd, DisplayPaneIndex.RightMfd];
    /**
     * Checks whether a value is a controllable display pane index.
     * @param value The value to check.
     * @returns Whether the specified value is a controllable display pane index.
     */
    static isControllableDisplayPaneIndex(value: unknown): value is ControllableDisplayPaneIndex;
    /**
     * Checks whether a value is a PFD instrument display pane index.
     * @param value The value to check.
     * @returns Whether the specified value is a PFD instrument display pane index.
     */
    static isPfdInstrumentDisplayPaneIndex(value: unknown): value is DisplayPaneIndex.LeftPfdInstrument | DisplayPaneIndex.RightPfdInstrument;
    /**
     * Checks whether a value is a PFD display pane index.
     * @param value The value to check.
     * @returns Whether the specified value is a PFD display pane index.
     */
    static isPfdDisplayPaneIndex(value: unknown): value is DisplayPaneIndex.LeftPfd | DisplayPaneIndex.RightPfd;
    /**
     * Checks whether a value is an MFD display pane index.
     * @param value The value to check.
     * @returns Whether the specified value is an MFD display pane index.
     */
    static isMfdDisplayPaneIndex(value: unknown): value is DisplayPaneIndex.LeftMfd | DisplayPaneIndex.RightMfd;
    /**
     * Gets an array of indexes of controllable display panes that are enabled for a given GDU configuration.
     * @param pfdCount The number of supported PFD GDUs.
     * @returns An array of indexes of controllable display panes that are enabled for the specified GDU configuration in
     * ascending order.
     */
    static getEnabledControllablePanes(pfdCount: 1 | 2): ControllableDisplayPaneIndex[];
    /**
     * Gets an array of indexes of controllable display panes that are available to be selected by a
     * display pane-controlling GTC.
     * @param enabledPaneIndexes An array containing the indexes of all enabled controllable display panes in ascending
     * order.
     * @param otherGtcSelectedPaneIndex The index of the display pane selected by the left display pane-controlling GTC, or `-1`
     * if the GTC has not selected a pane.
     * @param displayPaneSettingManager A manager for all display pane user settings.
     * @returns An array of indexes of controllable display panes that are available to be selected in ascending order.
     */
    static getAvailableControllablePanes(enabledPaneIndexes: readonly ControllableDisplayPaneIndex[], otherGtcSelectedPaneIndex: ControllableDisplayPaneIndex | -1, displayPaneSettingManager: UserSettingManager<DisplayPaneAllUserSettingTypes>): readonly ControllableDisplayPaneIndex[];
    /**
     * Gets the controllable display pane that should be selected when a GTC attempts to select a desired pane.
     * @param controlGtcIndex The display pane control index of the GTC that is attempting to select a desired pane.
     * @param desiredPaneIndex The index of the desired pane to select, or `-1` if the GTC is attempting to clear its
     * selected pane.
     * @param availablePanes An array containing the indexes of all available controllable display panes, in ascending
     * order.
     * @returns The index of the display pane to be selected, or `-1` if no pane should be selected.
     */
    static getControllablePaneToSelect(controlGtcIndex: DisplayPaneControlGtcIndex, desiredPaneIndex: ControllableDisplayPaneIndex | -1, availablePanes: readonly ControllableDisplayPaneIndex[]): ControllableDisplayPaneIndex | -1;
}
//# sourceMappingURL=DisplayPaneUtils.d.ts.map