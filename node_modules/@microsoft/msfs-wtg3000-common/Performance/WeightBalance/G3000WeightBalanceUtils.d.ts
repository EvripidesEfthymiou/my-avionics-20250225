/**
 * A utility class for working with G3000 weight and balance calculations.
 */
export declare class G3000WeightBalanceUtils {
    /**
     * Gets the minimum moment arm, in inches, of an envelope for a given weight.
     * @param breakpoints The breakpoints defining the envelope's minimum moment arm limits. Each breakpoint should be
     * expressed as `[arm (inches), weight (pounds)]`, and the breakpoints should be ordered such that weight is
     * monotonically increasing. The first breakpoint should be at the envelope's minimum weight, and the last breakpoint
     * should be at the envelope's maximum weight.
     * @param weight The weight, in pounds, for which to get the minimum moment arm.
     * @returns The minimum moment arm, in inches, for the specified weight, or `NaN` if the weight is below the minimum
     * envelope weight or above the maximum envelope weight.
     */
    static getEnvelopeMinArm(breakpoints: readonly (readonly [number, number])[], weight: number): number;
    /**
     * Gets the maximum moment arm, in inches, of an envelope for a given weight.
     * @param breakpoints The breakpoints defining the envelope's maximum moment arm limits. Each breakpoint should be
     * expressed as `[arm (inches), weight (pounds)]`, and the breakpoints should be ordered such that weight is
     * monotonically increasing. The first breakpoint should be at the envelope's minimum weight, and the last breakpoint
     * should be at the envelope's maximum weight.
     * @param weight The weight, in pounds, for which to get the maximum moment arm.
     * @returns The maximum moment arm, in inches, for the specified weight, or `NaN` if the weight is below the minimum
     * envelope weight or above the maximum envelope weight.
     */
    static getEnvelopeMaxArm(breakpoints: readonly (readonly [number, number])[], weight: number): number;
    /**
     * Gets the minimum or maximum moment arm, in inches, of an envelope for a given weight.
     * @param breakpoints The breakpoints defining the envelope's maximum moment arm limits. Each breakpoint should be
     * expressed as `[arm (inches), weight (pounds)]`, and the breakpoints should be ordered such that weight is
     * monotonically increasing. The first breakpoint should be at the envelope's minimum weight, and the last breakpoint
     * should be at the envelope's maximum weight.
     * @param weight The weight, in pounds, for which to get the minimum or maximum moment arm.
     * @param isMax `true` to return the maximum moment arm; `false` to return the minimum moment arm.
     * @returns The minimum or maximum moment arm, in inches, for the specified weight, or `NaN` if the weight is below
     * the minimum envelope weight or above the maximum envelope weight.
     */
    private static getEnvelopeArm;
}
//# sourceMappingURL=G3000WeightBalanceUtils.d.ts.map