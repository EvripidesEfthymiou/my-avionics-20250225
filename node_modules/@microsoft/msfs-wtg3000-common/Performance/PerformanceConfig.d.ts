import { Config } from '../Config/Config';
import { PerformanceWeightLimits } from './PerformanceWeightLimits';
import { SurfaceWatchConfig } from './SurfaceWatch/SurfaceWatchConfig';
import { ToldConfig } from './TOLD/ToldConfig';
import { WeightBalanceConfig } from './WeightBalance/WeightBalanceConfig';
/**
 * A configuration object which defines options related to performance calculations.
 */
export declare class PerformanceConfig implements Config {
    /** Aircraft weight limits and capacities. */
    readonly weightLimits: Readonly<PerformanceWeightLimits>;
    /** A config which defines options for weight and balance calculations. */
    readonly weightBalanceConfig?: WeightBalanceConfig;
    /** Whether weight and balance calculations are supported. */
    readonly isWeightBalanceSupported: boolean;
    /** A config which defines options for SurfaceWatch. */
    readonly surfaceWatchConfig?: SurfaceWatchConfig;
    /** Whether SurfaceWatch is supported. */
    readonly isSurfaceWatchSupported: boolean;
    /** The name of the airframe supported by performance calculations. */
    readonly airframe: string;
    /** A config which defines options for TOLD (takeoff/landing) performance calculations. */
    readonly toldConfig?: ToldConfig;
    /** Whether TOLD (takeoff/landing) performance calculations are supported. */
    readonly isToldSupported: boolean;
    /**
     * Creates a new PerformanceConfig from a configuration document element.
     * @param element A configuration document element.
     */
    constructor(element: Element | undefined);
    /**
     * Parses weight limits from a configuration document element.
     * @param element A configuration document element.
     * @returns The weight limits defined by the configuration document element.
     */
    private parseWeightLimits;
    /**
     * Parses a single weight limit from a configuration document element.
     * @param element A configuration document element.
     * @returns The weight limit defined by the configuration document element, or `undefined` if the element is `null`.
     */
    private parseWeightLimit;
    /**
     * Parses a weight and balance configuration object from a configuration document element.
     * @param element A configuration document element.
     * @returns The weight and balance configuration defined by the configuration document element, or `undefined` if the
     * element is `null`.
     */
    private parseWeightBalanceConfig;
    /**
     * Parses a SurfaceWatch configuration object from a configuration document element.
     * @param element A configuration document element.
     * @returns The SurfaceWatch configuration defined by the configuration document element, or `undefined` if the
     * element is `null`.
     */
    private parseSurfaceWatchConfig;
    /**
     * Parses a TOLD configuration object from a configuration document element.
     * @param element A configuration document element.
     * @returns The TOLD configuration defined by the configuration document element, or `undefined` if the element is `null`.
     */
    private parseToldConfig;
}
//# sourceMappingURL=PerformanceConfig.d.ts.map