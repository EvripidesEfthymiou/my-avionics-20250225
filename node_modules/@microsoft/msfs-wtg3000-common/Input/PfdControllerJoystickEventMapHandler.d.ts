/**
 * Configuration options for {@link PfdControllerJoystickEventMapHandler}.
 */
export type PfdControllerJoystickEventMapHandlerOptions = {
    /**
     * A function that handles map pointer toggle events. If not defined, then map pointer toggle events will not be
     * handled.
     * @returns Whether the event was handled.
     */
    onPointerToggle?: () => boolean;
    /**
     * A function that handles map pointer move events. If not defined, then map pointer move events will not be handled.
     * @param dx The horizontal displacement, in pixels.
     * @param dy The vertical displacement, in pixels.
     * @returns Whether the event was handled.
     */
    onPointerMove?: (dx: number, dy: number) => boolean;
    /**
     * A function that handles map range change events. If not defined, then map range change events will not be handled.
     * @param direction The direction in which to change the map range.
     * @returns Whether the event was handled.
     */
    onRangeChange?: (direction: 1 | -1) => boolean;
};
/**
 * Handles PFD controller joystick interaction events for a map. The handler will convert joystick interaction events
 * to map pointer toggle, map pointer move, and map range change events as appropriate and forward the converted events
 * to callback functions configured through options.
 */
export declare class PfdControllerJoystickEventMapHandler {
    private static readonly vec2Cache;
    private readonly mapPointerJoystickHandler;
    private readonly onPointerToggle?;
    private readonly onPointerMove?;
    private readonly onRangeChange?;
    /**
     * Creates a new instance of PfdControllerJoystickEventHandler.
     * @param options Options with which to configure the handler.
     */
    constructor(options?: Readonly<PfdControllerJoystickEventMapHandlerOptions>);
    /**
     * Handles an interaction event.
     * @param event The interaction event to handle.
     * @returns Whether the interaction event was handled.
     */
    onInteractionEvent(event: string): boolean;
    /**
     * Sends a map range change event.
     * @param direction The direction in which to change the map range.
     * @returns Whether the event was handled.
     */
    private sendMapRangeChangeEvent;
    /**
     * Sends a map pointer toggle active event.
     * @returns Whether the event was handled.
     */
    private sendMapPointerActiveToggleEvent;
    /**
     * Sends a map pointer move event.
     * @param direction The direction in which to move the pointer.
     * @returns Whether the event was handled.
     */
    private sendMapPointerMoveEvent;
}
//# sourceMappingURL=PfdControllerJoystickEventMapHandler.d.ts.map