import { EventBus } from '@microsoft/msfs-sdk';
import { InitializationProcess } from '@microsoft/msfs-wtg3000-common';
/**
 * A manager for the state of the G3000 initialization process. The manager responds to commands published to event bus
 * topics defined in `InitializationControlEvents` to change the initialization process state and publishes information
 * about the state to event topics defined `InitializationEvents`.
 */
export declare class InitializationManager {
    private readonly bus;
    private readonly publisher;
    private process?;
    private isAlive;
    private isInit;
    private readonly isAccepted;
    private inProgressReset?;
    private isResetQueued;
    private readonly subscriptions;
    /**
     * Creates a new instance of InitializationManager.
     * @param bus The event bus.
     */
    constructor(bus: EventBus);
    /**
     * Initializes this manager with an initialization process. If the process includes at least one initialization task,
     * then the initialization process will be enabled. Once initialized with an enabled initialization process, the
     * manager will respond to commands published to event bus topics defined in `InitializationControlEvents`.
     * @param process An initialization process.
     * @throws Error if this manager has been destroyed.
     */
    init(process: InitializationProcess): void;
    /**
     * Resets whether the initialization has been accepted to `false`.
     */
    resetAccepted(): void;
    /**
     * Responds to when a command to accept the initialization is received.
     */
    private onAccept;
    /**
     * Responds to when a command to reset the initialization process is received.
     */
    private onReset;
    /**
     * Performs a reset of the initialization process.
     */
    private doReset;
    /**
     * Destroys this manager. Once destroyed, the manager can no longer be initialized and will stop responding to
     * commands to change the initialization process state and will stop publishing state information to the event bus.
     */
    destroy(): void;
}
//# sourceMappingURL=InitializationManager.d.ts.map