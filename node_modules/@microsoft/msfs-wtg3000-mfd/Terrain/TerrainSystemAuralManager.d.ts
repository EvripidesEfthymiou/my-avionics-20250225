import { EventBus } from '@microsoft/msfs-sdk';
import { TerrainSystemStateDataProvider } from '@microsoft/msfs-garminsdk';
/**
 * A manager that controls terrain alerting system aural alerts, including test mode aurals, status flag aurals, and
 * all alert aurals except for voice callout (touchdown callout) alerts.
 */
export declare class TerrainSystemAuralManager {
    private readonly bus;
    private readonly dataProvider;
    private readonly publisher;
    private readonly registrationManager;
    private readonly auralAlertVoice;
    private readonly alertEntries;
    private readonly isOnGround;
    private hasTestStarted;
    private activeAlertAuralUuid;
    private readonly subscriptions;
    private terrainSystemTypeSub?;
    /**
     * Creates a new instance of TerrainSystemAuralManager.
     * @param bus The event bus.
     * @param dataProvider A provider of terrain alerting system state data.
     */
    constructor(bus: EventBus, dataProvider: TerrainSystemStateDataProvider);
    /**
     * Initializes this manager. Once initialized, this manager will control aural alerts based on the terrain alerting
     * system state.
     */
    init(): void;
    /**
     * Responds to when the terrain system's operating mode changes.
     * @param mode The new operating mode.
     */
    private onOperatingModeChanged;
    /**
     * Responds to when a status flag is added to or removed from the terrain system.
     * @param flags The current set of all status flags.
     * @param type The type of change that occurred.
     * @param flag The flag that was changed.
     */
    private onStatusFlagsChanged;
    /**
     * Responds to when a terrain system alert is activated.
     * @param alert The alert that was activated.
     */
    private onPrioritizedAlertChanged;
    /**
     * Destroys this manager. Once destroyed, the manager will no longer control aural alerts.
     */
    destroy(): void;
}
//# sourceMappingURL=TerrainSystemAuralManager.d.ts.map