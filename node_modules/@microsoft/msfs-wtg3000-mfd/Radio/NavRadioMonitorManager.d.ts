import { EventBus, UserSettingManager } from '@microsoft/msfs-sdk';
import { NavRadioMonitorUserSettingTypes } from '@microsoft/msfs-wtg3000-common';
/**
 * A manager for NAV radio audio monitoring. Automatically syncs the monitoring user settings with the sim's NAV sound
 * state.
 */
export declare class NavRadioMonitorManager {
    private readonly bus;
    private readonly monitorSettingManager;
    private readonly entries;
    private isAlive;
    private isInit;
    /**
     * Constructor.
     * @param bus The event bus.
     * @param monitorSettingManager A manager for NAV radio audio monitoring user settings.
     */
    constructor(bus: EventBus, monitorSettingManager: UserSettingManager<NavRadioMonitorUserSettingTypes>);
    /**
     * Initializes this manager. Once this manager is initialized, it will automatically sync the monitoring user
     * settings with the sim's NAV sound state.
     * @throws Error if this manager has been destroyed.
     */
    init(): void;
    /**
     * Resets this manager's monitoring user settings to their default values (monitoring OFF and ident OFF). Has no
     * effect if this manager is not initialized.
     * @throws Error if this manager has been destroyed.
     */
    reset(): void;
    /**
     * Destroys this manager.
     */
    destroy(): void;
}
//# sourceMappingURL=NavRadioMonitorManager.d.ts.map