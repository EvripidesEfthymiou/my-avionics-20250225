import { EventBus } from '@microsoft/msfs-sdk';
import { VSpeedUserSettingManager } from '@microsoft/msfs-wtg3000-common';
/**
 * A manager of reference V-speed bugs.
 *
 * The manager will optionally hide takeoff V-speed bugs when gear or flaps are extended from a fully retracted state
 * (the latter only when in the air). The manager will also optionally hide takeoff V-speed bugs when indicated
 * airspeed exceeds a threshold value, if such a value is defined.
 *
 * Finally, the manager will control the visibility of configuration V-speed bugs based on whether pressure altitude is
 * less than a threshold value, if such a value is defined.
 */
export declare class VSpeedBugManager {
    private readonly bus;
    private readonly vSpeedSettingManager;
    private readonly adcCount;
    private static readonly FLAPS_RETRACTED_THRESHOLD;
    private static readonly ALTITUDE_HYSTERESIS;
    private readonly takeoffVSpeedDefs;
    private readonly configurationVSpeedDefs;
    private readonly isOnGround;
    private readonly flapsLeftAngle;
    private readonly flapsRightAngle;
    private readonly flapsState;
    private readonly gearNosePosition;
    private readonly gearLeftPosition;
    private readonly gearRightPosition;
    private readonly gearState;
    private readonly adcStates;
    private adcIndex?;
    private readonly ias;
    private readonly pressureAlt;
    private flapsExtendArmed;
    private gearExtendArmed;
    private iasArmed;
    private configurationBugsShow;
    private isAlive;
    private isInit;
    private isPaused;
    private flapsStateSub?;
    private gearStateSub?;
    private adcIndexSub?;
    private iasSub?;
    private pressureAltSub?;
    /**
     * Constructor.
     * @param bus The event bus.
     * @param vSpeedSettingManager A manager for reference V-speed user settings.
     * @param adcCount The number of ADC sensors available on the airplane.
     */
    constructor(bus: EventBus, vSpeedSettingManager: VSpeedUserSettingManager, adcCount: number);
    /**
     * Initializes this manager.
     * @param paused Whether to initialize this manager as paused. Defaults to `false`.
     * @throws Error if this manager has been destroyed.
     */
    init(paused?: boolean): void;
    /**
     * Hides all takeoff V-speed bugs.
     */
    private hideTakeoffBugs;
    /**
     * Sets the visibility of all configuration V-speed bugs.
     * @param show Whether to show the bugs.
     */
    private setConfigurationBugsVisible;
    /**
     * Resumes this manager. Once resumed, this manager will automatically hide takeoff V-speed bugs once certain
     * conditions are met.
     * @throws Error if this manager has been destroyed.
     */
    resume(): void;
    /**
     * Pauses this manager. Once paused, this manager will no longer automatically hide takeoff V-speed bugs.
     * @throws Error if this manager has been destroyed.
     */
    pause(): void;
    /**
     * Resets all V-speed values to their defaults and hides all V-speed bugs.
     * @throws Error if this manager has been destroyed.
     */
    reset(): void;
    /**
     * Destroys this manager.
     */
    destroy(): void;
}
//# sourceMappingURL=VSpeedBugManager.d.ts.map