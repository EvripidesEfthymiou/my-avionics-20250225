import { ComponentProps, DisplayComponent, Subject, VNode } from '@microsoft/msfs-sdk';
import { WindData } from '../../../../Shared/UI/Controllers/WindOptionController';
/**
 * The properties on the wind option display component.
 */
export interface WindOptionProps extends ComponentProps {
    /** The wind data subject. */
    windData: Subject<WindData>;
    /** The aircraft heading subject. */
    aircraftHeading?: Subject<number>;
}
/**
 * The Wind Option Component
 */
export declare abstract class WindOption extends DisplayComponent<WindOptionProps> {
    protected readonly containerRef: import("@microsoft/msfs-sdk").NodeReference<HTMLDivElement>;
    private readonly subscriptions;
    /** @inheritDoc */
    onAfterRender(): void;
    /**
     * Update the component data.
     */
    protected abstract update(): void;
    /**
     * Resume this component.
     */
    private resume;
    /**
     * Pause this component.
     */
    private pause;
    /**
     * Set as visible or not.
     * @param isVisible is whether to set this visible or not.
     */
    setVisible(isVisible: boolean): void;
    /**
     * Renders the component - to be overridden.
     * @returns The component VNode.
     */
    render(): VNode;
}
//# sourceMappingURL=WindOption.d.ts.map