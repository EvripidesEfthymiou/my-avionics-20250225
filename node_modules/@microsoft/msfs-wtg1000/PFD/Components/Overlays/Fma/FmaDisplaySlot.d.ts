import { ComputedSubject, DisplayComponent, Subject, VNode } from '@microsoft/msfs-sdk';
import './FmaDisplaySlot.css';
/** Props for the FMA Display Slot Component */
export interface FmaDisplaySlotProps<T> {
    /** The CSS class for the FMA Dislay Slot */
    class: string;
    /** The current armed mode */
    armed: ComputedSubject<T, string> | Subject<string>;
    /** The current secondary armed mode */
    secondaryArmed?: ComputedSubject<T, string> | Subject<string>;
    /** The new active mode to display */
    active: ComputedSubject<T, string> | Subject<string>;
    /** If the mode has failed */
    isFailed: Subject<boolean>;
}
/** A FMA Mode Display Slot */
export declare class FmaDisplaySlot<T> extends DisplayComponent<FmaDisplaySlotProps<T>> {
    private currentArmedMode?;
    private currentSecondaryArmedMode?;
    private timeout?;
    private activeFailed;
    private active;
    private el;
    /** @inheritdoc */
    onAfterRender(): void;
    /**
     * Called when the active mode changes to set the flash class if required.
     * @param active is the active mode.
     */
    private onActiveChanged;
    /**
     * Called when the active mode fails to set the flash class if required.
     * @param failed is if the mode failed.
     */
    private onFailed;
    /**
     * Checks whether the active mode transition is coming from a combined dual vertical armed mode.
     * @param active is the active mode.
     * @returns True if coming from a dual mode, false otherwise;
     */
    private isDualVerticalTransition;
    /** @inheritdoc */
    render(): VNode;
}
//# sourceMappingURL=FmaDisplaySlot.d.ts.map