import { ComponentProps, DisplayComponent, NodeReference } from '@microsoft/msfs-sdk';
import { NeedleAnimator } from './NeedleAnimator';
/**
 * The props on the Nav1Needle component.
 */
interface CourseNeedleProps extends ComponentProps {
    /** A prop to define whether this is for the map or rose. */
    hsiMap: boolean;
}
/**
 * An interface that describes a course needle component.
 */
export declare abstract class CourseNeedleComponent extends DisplayComponent<CourseNeedleProps> {
    protected readonly needleRef: NodeReference<HTMLDivElement>;
    protected readonly deviationRef: NodeReference<HTMLDivElement>;
    protected readonly toFromRef: NodeReference<HTMLDivElement>;
    protected animator?: NeedleAnimator;
    protected currentDeviation: number;
    /**
     * A callback called after rendering completes.
     */
    onAfterRender(): void;
    /**
     * Sets the rotation of the course needle.
     * @param rotation The rotation of the course needle.
     */
    setRotation(rotation: number): void;
    /**
     * Sets the deviation of the course needle.
     * @param deviation The deviation of the course needle.
     */
    setDeviation(deviation: number): void;
    /**
     * Sets whether or not the course needle is visible.
     * @param isVisible The visibility of the course needle.
     */
    setVisible(isVisible: boolean): void;
    /**
     * Sets whether or not the course deviation indicator is visible.
     * @param isVisible The visibility of the course deviation indicator.
     */
    setDeviationVisible(isVisible: boolean): void;
    /**
     * Sets whether the to/from flag should indicate to or from.
     * @param from a bool set to true when the flag should be set to FROM.
     */
    setFromFlag(from: boolean): void;
}
export {};
//# sourceMappingURL=CourseNeedleComponent.d.ts.map