import { DisplayComponent, EventBus, VNode } from '@microsoft/msfs-sdk';
import { NavIndicatorController } from '@microsoft/msfs-garminsdk';
import './VerticalDeviation.css';
/**
 * The properties for the VSI component.
 */
interface VerticalDeviationProps {
    /** An instance of the event bus. */
    bus: EventBus;
    /** An instance of the nav indicator controller. */
    navIndicatorController: NavIndicatorController;
}
/**
 * The PFD vertical deviation indicator.
 */
export declare class VerticalDeviation extends DisplayComponent<VerticalDeviationProps> {
    private readonly vDevBoxDiv;
    private readonly diamondDiv;
    private readonly caretDiv;
    private readonly hideableObjectsDiv;
    private readonly sourceDiv;
    private readonly previewDiamondDiv;
    private readonly diamondPath;
    private noStr;
    private gsgpStr;
    private deviationScale;
    /**
     * A callback called after the component renders.
     */
    onAfterRender(): void;
    /**
     * A method called to update the deviation source and sensitivity.
     */
    updateSourceSensitivity(): void;
    /**
     * A method called to update the deviation data.
     */
    updateDeviation(): void;
    /**
     * A method called to update the visibility of the entire VDEV Indicator.
     * @param activeSource The Active Source
     * @param vnavDisplayMode The VNAV Display Mode
     * @param gpDisplayMode The GP Display Mode
     */
    private setVdevVisibility;
    /**
     * A method called to update the vnav carrot visibility.
     * @param activeSource The Active Source
     * @param vnavDisplayMode The VNAV Display Mode
     */
    private setVnavVisibility;
    /**
     * A method called to update the preview glidepath visibility.
     * @param activeSource The Active Source
     * @param gpDisplayMode The GP Display Mode
     */
    private setPreviewGlidepathVisibility;
    /**
     * A method called to update the active glideslope/glidepath visibility.
     * @param activeSource The Active Source
     * @param gpDisplayMode The GP Display Mode
     */
    private setGlidepathVisibility;
    /**
     * Sets the vdev box visible.
     * @param visible is a bool whether to set this visible or not.
     */
    private setVdevVisible;
    /**
     * Sets the NO GS/NO GP display depending on if there is a signal.
     * @param visible is a bool whether to set this visible or not.
     */
    private setNoSignalVisible;
    /**
     * Sets the source type indicator on the Vertical Deviation Indicator
     * @param source The Active Source
     * @param vnavDisplayMode The VNAV Display Mode
     * @param gpDisplayMode The GP Display Mode
     */
    private setSource;
    /**
     * Sets the vdev scale.
     */
    private setDeviationScale;
    /**
     * Sets the vdev deviation value
     * (sets both the preview and active deviation, since they do not appear at the same time).
     * @param vdev is a bool whether to set this visible or not.
     */
    private setDeviation;
    /**
     * Sets the vdev deviation value.
     * @param vdev is a bool whether to set this visible or not.
     */
    private setVNavDeviation;
    /**
     * Registers the vertical deviation component with the NavIndicatorController.
     */
    private registerComponent;
    /**
     * Renders the component.
     * @returns The component VNode.
     */
    render(): VNode;
}
export {};
//# sourceMappingURL=VerticalDeviation.d.ts.map