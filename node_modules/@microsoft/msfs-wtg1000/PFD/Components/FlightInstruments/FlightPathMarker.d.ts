import { ComponentProps, DisplayComponent, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { PlaneStateInfo } from './PrimaryHorizonDisplay';
/**
 * The properties for the FlightPathMarker component.
 */
export interface FlightPathMarkerProps extends ComponentProps {
    /** A subscribable which provides whether the flight path marker is active. */
    isActive: Subscribable<boolean>;
}
/**
 * The FlightPathMarker component.
 */
export declare class FlightPathMarker extends DisplayComponent<FlightPathMarkerProps> {
    private static readonly GROUND_TRACK_TIME_CONSTANT;
    private static readonly VANGLE_TIME_CONSTANT;
    private static readonly vec2Cache;
    private readonly fpvMarkerRef;
    private readonly groundTrackSmoother;
    private readonly vAngleSmoother;
    private isVisible;
    /**
     * Updates flight path marker
     * @param dt The elapsed time, in milliseconds, since the previous update.
     * @param planeState The state of own airplane.
     */
    update(dt: number, planeState: PlaneStateInfo): void;
    /**
     * Updates whether this flight path marker should be visible.
     * @param planeState The state of own airplane.
     */
    private updateIsVisible;
    /**
     * Updates this flight path marker's position.
     * @param dt The elapsed time, in milliseconds, since the previous update.
     * @param planeState The state of own airplane.
     */
    private updatePosition;
    /**
     * Smooths a ground track value.
     * @param track A ground track value.
     * @param dt The elapsed time, in milliseconds, since the last smoothed value was calculated.
     * @returns A smoothed ground track value.
     */
    private smoothGroundTrack;
    /**
     * Renders the component.
     * @returns The component VNode.
     */
    render(): VNode;
}
//# sourceMappingURL=FlightPathMarker.d.ts.map