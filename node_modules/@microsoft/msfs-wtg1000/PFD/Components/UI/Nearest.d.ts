import { ControlPublisher, EventBus, FacilityLoader, Subject, VNode } from '@microsoft/msfs-sdk';
import { NearbyAirport } from '../../../Shared/UI/Controllers/NearestStore';
import { FmsHEvent } from '../../../Shared/UI/FmsHEvent';
import { UiControl } from '../../../Shared/UI/UiControl';
import { UiView, UiViewProps } from '../../../Shared/UI/UiView';
import './Nearest.css';
/**
 * The properties on the nearest airports popout component.
 */
interface NearestProps extends UiViewProps {
    /** An instance of the event bus. */
    bus: EventBus;
    /** A facility loader. */
    loader: FacilityLoader;
    /** A ControlPublisher */
    publisher: ControlPublisher;
}
/**
 * The PFD nearest airports popout.
 */
export declare class Nearest extends UiView<NearestProps> {
    private readonly nearestListContainerRef;
    private readonly noneMsgRef;
    private readonly searchSettings;
    private readonly store;
    private readonly controller;
    private readonly publisher;
    private runwayLength;
    private surfaceType;
    private planePosSub?;
    private planeHeadingSub?;
    /**
     * Creates an instance of a nearest airport box.
     * @param props The props.
     */
    constructor(props: NearestProps);
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /**
     * Set up the strobed update when the nearest popup is open.
     */
    protected onViewOpened(): void;
    /**
     * When the popup is closed, kill the update to save cycles.
     */
    protected onViewClosed(): void;
    /**
     * Handle a GPS update.
     * @param pos The current LatLongAlt
     */
    private onGps;
    /**
     * A callback which is called when the airplane's true heading changes.
     * @param heading The airplane's current true heading.
     */
    private onPlaneHeadingChanged;
    /**
     * A callback which is called when the number of airports in the nearest list changes.
     * @param count The number of airports in the nearest list.
     */
    private onAirportCountChanged;
    buildNearestItem: (data: Subject<NearbyAirport>, registerFn: (ctrl: UiControl) => void) => VNode;
    /**
     * Render the component.
     * @returns a VNode
     */
    render(): VNode;
}
export {};
//# sourceMappingURL=Nearest.d.ts.map