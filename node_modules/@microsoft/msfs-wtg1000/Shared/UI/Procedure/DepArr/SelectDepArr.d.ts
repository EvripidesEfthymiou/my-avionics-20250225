import { ArrivalProcedure, DepartureProcedure, EnrouteTransition, EventBus, FlightPathCalculator, NodeReference, RunwayTransition, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { ContextMenuItemDefinition, ContextMenuPosition } from '../../Dialogs/ContextMenuDialog';
import { UiControlGroup, UiControlGroupProps } from '../../UiControlGroup';
import { SelectControl2 } from '../../UiControls2/SelectControl';
import { ViewService } from '../../ViewService';
import { SelectDepArrController } from './SelectDepArrController';
import { SelectDepArrStore } from './SelectDepArrStore';
/**
 * Component props for SelectDepArr.
 */
export interface SelectDepArrProps extends UiControlGroupProps {
    /** A view service. */
    viewService: ViewService;
    /** The fms */
    fms: Fms;
    /** The event bus */
    bus: EventBus;
    /** A flight path calculator to use to build preview flight plans. */
    calculator: FlightPathCalculator;
}
/**
 * A component for selecting departures/arrivals.
 */
export declare abstract class SelectDepArr<T extends DepartureProcedure | ArrivalProcedure, P extends SelectDepArrProps = SelectDepArrProps> extends UiControlGroup<P> {
    protected readonly procSelectRef: NodeReference<SelectControl2<T>>;
    protected readonly transSelectRef: NodeReference<SelectControl2<EnrouteTransition>>;
    protected readonly rwyTransSelectRef: NodeReference<SelectControl2<RunwayTransition>>;
    protected readonly store: SelectDepArrStore<T>;
    protected readonly controller: SelectDepArrController<T, SelectDepArrStore<T>>;
    /**
     * Creates an instance of a departure/arrival selection component data store.
     * @returns A departure/arrival selection component data store.
     */
    protected abstract createStore(): SelectDepArrStore<T>;
    /**
     * Creates an instance of a departure/arrival selection component controller.
     * @param store This component's data store.
     * @returns A departure/arrival selection component controller.
     */
    protected abstract createController(store: SelectDepArrStore<T>): SelectDepArrController<T>;
    /**
     * Gets the display label for the procedure.
     * @returns The procedure label string.
     */
    protected abstract getProcLabel(): string;
    /**
     * Initializes the airport ICAO input.
     */
    initializeIcaoInput(): void;
    /** Goto and activate next select control. */
    protected gotoNextSelect(): void;
    /**
     * Builds a procedure menu item.
     * @param proc The procedure to build the menu item for.
     * @returns A menu item definition.
     */
    protected buildProcMenuItem(proc: T): ContextMenuItemDefinition;
    /**
     * Builds a runway transition menu item.
     * @param rwyTrans The runway transition to build the menu item for.
     * @returns A menu item definition.
     **/
    protected buildRwyMenuItem(rwyTrans: RunwayTransition): ContextMenuItemDefinition;
    /**
     * Builds an enroute transition menu item.
     * @param trans The transition to build the menu item for.
     * @returns A menu item definition.
     */
    protected buildTransMenuItem(trans: EnrouteTransition): ContextMenuItemDefinition;
    /**
     * Renders the waypoint input component.
     * @returns The rendered waypoint input component, as a VNode.
     */
    protected renderWaypointInput(): VNode;
    /**
     * Renders the procedure select control component.
     * @param container A reference to the container that constrains the position of the select control pop-up.
     * @param dialogPosition The position of the pop-up context menu dialog spawned by the select control.
     * @returns The rendered procedure select control component, as a VNode.
     */
    protected renderProcedureSelectControl(container: NodeReference<HTMLElement>, dialogPosition?: ContextMenuPosition): VNode;
    /**
     * Renders the runway transition select control component.
     * @param container A reference to the container that constrains the position of the select control pop-up.
     * @param dialogPosition The position of the pop-up context menu dialog spawned by the select control.
     * @returns The rendered runway transition select control component, as a VNode.
     */
    protected renderRunwaySelectControl(container: NodeReference<HTMLElement>, dialogPosition?: ContextMenuPosition): VNode;
    /**
     * Renders the enroute transition select control component.
     * @param container A reference to the container that constrains the position of the select control pop-up.
     * @param dialogPosition The position of the pop-up context menu dialog spawned by the select control.
     * @returns The rendered enroute transition select control component, as a VNode.
     */
    protected renderEnrouteSelectControl(container: NodeReference<HTMLElement>, dialogPosition?: ContextMenuPosition): VNode;
}
//# sourceMappingURL=SelectDepArr.d.ts.map