import { FlightPlanSegment, NodeReference, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { G1000UiControl, G1000UiControlProps } from '../G1000UiControl';
import { FacilityInfo } from './FPLTypesAndProps';
/** The properties for the FPLHeader component. */
export interface FPLHeaderProps extends G1000UiControlProps {
    /** The fms. */
    fms: Fms;
    /** Info about origin and destination facilities */
    facilities: FacilityInfo;
    /** The flight plan segment associated with this header. */
    segment: FlightPlanSegment;
    /** The scroll container to scroll to when this item is focused. */
    scrollContainer?: NodeReference<HTMLElement>;
}
/**
 * A header for an FPL section.
 */
export declare abstract class FPLHeader<P extends FPLHeaderProps = FPLHeaderProps> extends G1000UiControl<P> {
    protected readonly rootRef: NodeReference<HTMLDivElement>;
    private estimatedNameWidth;
    protected _isCollapsed: boolean;
    /** Whether this header is collapsed. */
    get isCollapsed(): boolean;
    protected isInit: boolean;
    /** @inheritdoc */
    onAfterRender(node: VNode): void;
    /**
     * Method to collapse this section and display the header correctly.
     * @param setCollapsed boolean to set collapsed
     */
    abstract setCollapsed(setCollapsed: boolean): void;
    /** Updates this header */
    update(): void;
    /**
     * Updates this header's name text.
     */
    protected abstract updateName(): void;
    /**
     * Sets the estimated width of this header's name text.
     * @param width The new estimated width, in pixels.
     */
    protected setEstimatedNameWidth(width: number): void;
    /**
     * Updates the font size for this header's name text to ensure the text fits within this header's width.
     */
    protected updateNameFontSize(): void;
    /**
     * Sets if the header should be visible.
     * @param isVisible Whether or not the header is visible.
     */
    protected setIsVisible(isVisible: boolean): void;
    /** @inheritdoc */
    protected onFocused(source: G1000UiControl): void;
    /** @inheritdoc */
    protected onBlurred(): void;
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders this header's name text.
     * @returns This header's name text, as a VNode.
     */
    protected abstract renderName(): VNode;
}
//# sourceMappingURL=FPLHeader.d.ts.map