import { ComponentProps, Subject, Subscribable } from '@microsoft/msfs-sdk';
import { FmsHEvent } from './FmsHEvent';
import { UiView, UiViewProps } from './UiView';
import type { ViewService } from './ViewService';
/**
 * Component props for UiPage.
 */
export interface UiPageProps extends ComponentProps {
    /** The view service to which this page belongs. */
    viewService: ViewService;
}
/** A UiPage component. */
export declare abstract class UiPage<T extends UiPageProps = UiPageProps> extends UiView<T & UiViewProps> {
    protected readonly _title: Subject<string>;
    /** The title of this page. */
    get title(): Subscribable<string>;
    protected isPaused: boolean;
    /** @inheritdoc */
    constructor(props: T);
    /**
     * Opens the page.
     */
    open(): void;
    /**
     * This method has no effect.
     */
    setZIndex(): void;
    protected processScrollEvent(evt: FmsHEvent): boolean;
    protected onViewResumed(): void;
    protected onViewPaused(): void;
}
//# sourceMappingURL=UiPage.d.ts.map