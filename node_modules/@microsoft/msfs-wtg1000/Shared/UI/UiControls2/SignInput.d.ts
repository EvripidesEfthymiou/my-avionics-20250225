import { DebounceTimer, Subject, VNode } from '@microsoft/msfs-sdk';
import { G1000UiControl, G1000UiControlProps } from '../G1000UiControl';
import './SignInput.css';
/**
 * Component props for SignInput.
 */
export interface SignInputProps extends G1000UiControlProps {
    /** A subject which is bound to the input sign value. */
    sign: Subject<1 | -1>;
    /**
     * The duration, in milliseconds, of the applied solid highlight when this input is focused or edited. Defaults to
     * 1000.
     */
    solidHighlightDuration?: number;
    /** CSS class(es) to apply to the root of the component. */
    class?: string;
}
/**
 * An input control which allows the user to select a numeric sign (+ or âˆ’).
 */
export declare class SignInput extends G1000UiControl<SignInputProps> {
    private static readonly DEFAULT_SOLID_HIGHLIGHT_DURATION;
    private readonly rootRef;
    private readonly signText;
    protected readonly solidHighlightTimer: DebounceTimer;
    /** @inheritdoc */
    protected onFocused(source: G1000UiControl): void;
    /** @inheritdoc */
    protected onBlurred(source: G1000UiControl): void;
    /** @inheritdoc */
    protected onEnabled(source: G1000UiControl): void;
    /** @inheritdoc */
    protected onDisabled(source: G1000UiControl): void;
    /**
     * Applies a solid highlight to this input.
     * @param duration The duration, in milliseconds, of the highlight.
     */
    protected applySolidHighlight(duration: number): void;
    /** @inheritdoc */
    onUpperKnobInc(): boolean;
    /** @inheritdoc */
    onUpperKnobDec(): boolean;
    /**
     * Changes this input's sign value.
     */
    private changeSign;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=SignInput.d.ts.map