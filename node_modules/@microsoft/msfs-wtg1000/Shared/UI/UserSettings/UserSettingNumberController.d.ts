import { Subject, UserSettingManager, UserSettingRecord, UserSettingValueFilter } from '@microsoft/msfs-sdk';
import { UserSettingController } from './UserSettingController';
/**
 * A controller which binds a user setting with numeric values to a numeric input component.
 */
export declare class UserSettingNumberController<T extends UserSettingRecord, K extends keyof UserSettingValueFilter<T, number> & string> extends UserSettingController<T, K> {
    readonly settingManager: UserSettingManager<T>;
    readonly settingName: K;
    /**
     * A subject which is bound to this controller's user setting.
     */
    readonly dataSub: Subject<number>;
    /**
     * Constructor.
     * @param settingManager This controller's settings manager.
     * @param settingName The name of the setting associated with this controller.
     */
    constructor(settingManager: UserSettingManager<T>, settingName: K);
    /** @inheritdoc */
    init(): void;
    /** @inheritdoc */
    protected onSettingChanged(value: T[K]): void;
    /**
     * A callback which is called when the number input changes.
     * @param value The new value of the input.
     */
    private onInputChanged;
}
//# sourceMappingURL=UserSettingNumberController.d.ts.map