import { VNode } from '@microsoft/msfs-sdk';
import { FmsHEvent } from '../FmsHEvent';
import { UiView, UiViewProps } from '../UiView';
import './MessageDialog.css';
/**
 * The Message Dialog interface.
 */
export interface MessageDialogDefinition {
    /** The message string, if any */
    inputString?: string;
    /**
     * Renders the message content of the dialog.
     * @returns the message content for the dialog as a VNode.
     */
    renderContent?(): VNode;
    /** Whether to close this dialog after accept action */
    closeOnAccept?: boolean;
    /** The text for the confirm button */
    confirmButtonText?: string;
    /** Whether this dialog has a reject button */
    hasRejectButton?: boolean;
    /** The text for button 2, if any */
    rejectButtonText?: string;
}
/**
 * Confirmation dialog for generic messages.
 */
export declare class MessageDialog extends UiView<UiViewProps, boolean, MessageDialogDefinition> {
    private closeOnAccept;
    private readonly contentRef;
    private readonly confirmButtonText;
    private readonly rejectButtonText;
    private readonly orDivRef;
    private readonly rejectButtonRef;
    private renderedContent;
    /** @inheritdoc */
    protected onInputDataSet(input: MessageDialogDefinition): void;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /** Callback for when the first button is pressed. */
    private readonly onButton1Pressed;
    /** Callback for when the second button is pressed. */
    private readonly onButton2Pressed;
    /**
     * Renders the dialog content.
     * @param input The input data
     **/
    private renderContent;
    /**
     * Cleans up any rendered content.
     */
    private cleanUpRenderedContent;
    /**
     * Renders the component.
     * @returns The component VNode.
     */
    render(): VNode;
}
//# sourceMappingURL=MessageDialog.d.ts.map