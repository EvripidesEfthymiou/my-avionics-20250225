import { AirportFacility, ArraySubject, EnrouteTransition, LegDefinition, OneWayRunway, Procedure, RunwayTransition, Subject } from '@microsoft/msfs-sdk';
/** The data store for SelectProcedure pages */
export declare abstract class SelectProcedureControllerStore {
    selectedFacility: AirportFacility | undefined;
    readonly selectedProcIndex: Subject<number>;
    readonly selectedRwyIndex: Subject<number>;
    readonly selectedTransIndex: Subject<number>;
    readonly procedures: ArraySubject<Procedure>;
    readonly runways: ArraySubject<RunwayTransition>;
    readonly transitions: ArraySubject<EnrouteTransition>;
    readonly sequence: ArraySubject<Subject<LegDefinition>>;
    /**
     * Gets the procedures array.
     * @returns The procedures array.
     */
    abstract getProcedures(): readonly Procedure[];
    /**
     * Sets the data to display the facility.
     * @param facility The airport facility to be shown.
     */
    loadFacility(facility: AirportFacility): void;
    /**
     * Empties the display content when no facility is selected
     */
    clearFacility(): void;
    /**
     * Gets the one-way runway from the selected procedure runway
     * @returns the OneWayRunway object or undefined
     */
    getOneWayRunway(): OneWayRunway | undefined;
    /**
     * Gets a runway designation string from the runway transition.
     * @param runwayTransition is the runway transition object
     * @returns The runway designation string.
     */
    getRunwayString(runwayTransition: RunwayTransition | undefined): string;
    /**
     * Gets the transition name and creates a default transition when the procedure has no transitions.
     * @param transitionIndex is the index of the transition in the procedure
     * @returns The transition name string.
     */
    abstract getTransitionName(transitionIndex: number): string;
    /**
     * Gets the runways of the selected procedure.
     * @returns The runways.
     */
    getRunways(): readonly RunwayTransition[];
    /**
     * Gets the enroute transitions of the selected procedure.
     * @returns The enroute transitions.
     */
    getTransitions(): readonly EnrouteTransition[];
}
//# sourceMappingURL=SelectProcedureStore.d.ts.map