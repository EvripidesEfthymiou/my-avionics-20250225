import { EventBus, Subject } from '@microsoft/msfs-sdk';
import { WindOverlaySettingMode } from '../../../PFD/PFDUserSettings';
/**
 * The wind data input.
 */
export interface WindData {
    /** The wind direction in degrees. */
    direction: number;
    /** The wind velocity in knots. */
    velocity: number;
}
/** The controller for the Wind Overlay. */
export declare class WindOptionController {
    readonly bus: EventBus;
    readonly store: WindOptionStore;
    /**
     * Creates the Wind Overlay Controller
     * @param bus is the event bus
     * @param store is the WindOptionStore
     */
    constructor(bus: EventBus, store: WindOptionStore);
    /**
     * The No Wind Handler.
     * @param onGround is whether the plane is on the ground
     * @param ias is the indicated airspeed
     */
    private noWindHandler;
    /** Updates the view. */
    updateView(): void;
}
export declare enum WindOverlayRenderOption {
    NONE = 0,
    OPT1 = 1,
    OPT2 = 2,
    OPT3 = 3,
    NOWIND = 4
}
/** The data store for Wind Overlay */
export declare class WindOptionStore {
    readonly selectedView: Subject<WindOverlaySettingMode>;
    readonly currentWind: Subject<WindData>;
    readonly currentHeading: Subject<number>;
    readonly noWindData: Subject<boolean>;
    readonly renderOption: Subject<WindOverlayRenderOption>;
    lastWindDirection: number;
    lastWindVelocity: number;
    lastIas: number;
    lastOnGround: boolean;
}
//# sourceMappingURL=WindOptionController.d.ts.map