import { AirwayData, ArraySubject, FacilityLoader, IntersectionFacility, LegDefinition, Subject } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
/** The data store for SelectProcedure pages */
export declare class SelectAirwayStore {
    selectedFacility: IntersectionFacility | undefined;
    selectedAirway: AirwayData | undefined;
    selectedExit: IntersectionFacility | undefined;
    inputSegment: number;
    inputLeg: number;
    readonly airways: ArraySubject<string>;
    readonly exits: ArraySubject<IntersectionFacility>;
    readonly sequence: ArraySubject<Subject<LegDefinition>>;
    /**
     * Gets the airways array for this facility.
     * @returns The an array of unique airway names.
     */
    getFacilityAirways(): string[];
    /**
     * Gets the airway.
     * @param airwayName is the name of the airway as a string.
     * @param facLoader is an instance of the facility loader.
     */
    loadAirway(airwayName: string, facLoader: FacilityLoader): Promise<void>;
    /**
     * Builds the sequence list for the approach preview
     * @param fms is an instance of the FMS
     */
    buildSequence(fms: Fms): void;
    /**
     * Sets the data to display the facility.
     * @param facility The airport facility to be shown.
     */
    loadFacility(facility: IntersectionFacility): void;
    /**
     * Empties the display content when no facility is selected
     */
    clearFacility(): void;
    /**
     * Gets the exits of the selected airway.
     * @returns The airway exits.
     */
    getExits(): IntersectionFacility[];
}
//# sourceMappingURL=SelectAirwayStore.d.ts.map