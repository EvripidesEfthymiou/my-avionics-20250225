import { EventBus, GeoPointSubject, Subject, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { FmsHEvent } from '../FmsHEvent';
import { NumberInput } from '../UIControls/NumberInput';
import { UiView, UiViewProps } from '../UiView';
import { DirectToController } from './DirectToController';
import { DirectToStore } from './DirectToStore';
/**
 * The properties on the procedures popout component.
 */
export interface DirectToProps extends UiViewProps {
    /** A fms state manager. */
    fms: Fms;
    /** The event bus */
    bus: EventBus;
}
/**
 * The properties for Direct To Input Data.
 */
export interface DirectToInputData {
    /** The selected segment index for the direct to existing. */
    segmentIndex?: number;
    /** The selected leg index for the direct to existing. */
    legIndex?: number;
    /** The icao of the fix */
    icao: string;
}
/**
 * A view which provides control of the Direct-To function.
 */
export declare abstract class DirectTo extends UiView<DirectToProps, undefined, DirectToInputData> {
    protected readonly courseOnesRef: import("@microsoft/msfs-sdk").NodeReference<NumberInput>;
    protected readonly courseTensRef: import("@microsoft/msfs-sdk").NodeReference<NumberInput>;
    protected readonly planePos: GeoPointSubject;
    protected readonly planeHeading: Subject<number>;
    protected readonly store: DirectToStore;
    protected readonly controller: DirectToController;
    protected readonly unitSettingManager: import("@microsoft/msfs-garminsdk").UnitsUserSettingManager<import("@microsoft/msfs-garminsdk").UnitsUserSettingTypes>;
    protected isOpen: boolean;
    private planePosSub?;
    private planeHeadingSub?;
    /** @inheritDoc */
    onAfterRender(node: VNode): void;
    /** @inheritdoc */
    onInputDataSet(directToInputData: DirectToInputData | undefined): void;
    /**
     * Sets the course subject based on the number input fields.
     */
    protected setCourse(): void;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /** @inheritdoc */
    protected gotoActivateButton(): void;
    /**
     * Method to get the activate scroll index for this instance.
     * @returns The Activate Scroll Index.
     */
    protected getActivateScrollIndex(): number;
    /**
     * Callback for when the Hold button is pressed.
     */
    onHoldButtonPressed: () => void;
    /** @inheritDoc */
    protected onViewOpened(): void;
    /** @inheritDoc */
    protected onViewClosed(): void;
    /**
     * A callback which is called when the plane's current position changes.
     * @param pos The new position.
     */
    private onPlanePosChanged;
    /**
     * A callback which is called when the plane's current true heading changes.
     * @param heading The new heading, in degrees.
     */
    private onPlaneHeadingChanged;
    /**
     * Renders a waypoint input component.
     * @returns a waypoint input component, as a VNode.
     */
    protected renderWaypointInput(): VNode;
    /**
     * Renders a component which displays the bearing to the store's selected waypoint.
     * @param cssClass CSS class(es) to apply to the root of the component.
     * @returns a component which displays the bearing to the store's selected waypoint, as a VNode.
     */
    protected renderBearing(cssClass?: string): VNode;
    /**
     * Renders a component which displays the distance to the store's selected waypoint.
     * @param cssClass CSS class(es) to apply to the root of the component.
     * @returns a component which displays the distance to the store's selected waypoint, as a VNode.
     */
    protected renderDistance(cssClass?: string): VNode;
    /**
     * Renders a component which allows the user to input the direct-to course.
     * @param cssClass CSS class(es) to apply to the root of the component.
     * @returns A component which allows the user to input the direct-to course, as a VNode.
     */
    protected renderCourseInput(cssClass?: string): VNode;
    /**
     * A callback which is called when the Load action is executed.
     */
    protected onLoadExecuted: () => void;
}
//# sourceMappingURL=DirectTo.d.ts.map