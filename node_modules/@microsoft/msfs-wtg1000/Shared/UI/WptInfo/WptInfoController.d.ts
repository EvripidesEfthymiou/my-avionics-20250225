import { Facility, FacilityWaypoint, Subject, Waypoint } from '@microsoft/msfs-sdk';
import { WptInfoStore } from './WptInfoStore';
/**
 * Wpt info controller
 */
export declare class WptInfoController {
    private readonly store;
    private readonly selectedWaypoint;
    /**
     * A function which handles changes in waypoint input's matched waypoints.
     * @param waypoints The matched waypoints.
     */
    readonly matchedWaypointsChangedHandler: (waypoints: readonly FacilityWaypoint<Facility>[]) => void;
    /**
     * A function which handles changes in waypoint input's selected waypoint.
     * @param waypoint The selected waypoint.
     */
    readonly selectedWaypointChangedHandler: (waypoint: Waypoint | null) => void;
    /**
     * Creates an instance of wpt info controller.
     * @param store The store.
     * @param selectedWaypoint The subject which provides the waypoint info component's selected waypoint.
     */
    constructor(store: WptInfoStore, selectedWaypoint: Subject<Waypoint | null>);
    /**
     * A callback which is called when the waypoint input's matched waypoints change.
     * @param waypoints The matched waypoints.
     */
    private onMatchedWaypointsChanged;
    /**
     * A callback which is called when the waypoint input's selected waypoint changes.
     * @param waypoint The selected waypoint.
     */
    private onSelectedWaypointChanged;
}
//# sourceMappingURL=WptInfoController.d.ts.map