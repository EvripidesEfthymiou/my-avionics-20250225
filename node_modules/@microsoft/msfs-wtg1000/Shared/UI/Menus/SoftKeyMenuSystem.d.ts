import { EventBus } from '@microsoft/msfs-sdk';
import { SoftKeyBar } from '../SoftKeyBar';
import { SoftKeyMenu } from './SoftKeyMenu';
/**
 * A system that manages the Garmin softkey menus.
 */
export declare class SoftKeyMenuSystem {
    bus: EventBus;
    /** The current menu stack. */
    private menuStack;
    /**The currently registered menus. */
    private registeredMenus;
    /** An instance of H Event publisher. */
    private subscriber;
    /** An instance of the softkeys display component. */
    private softKeys?;
    /** The prefix of the H Event for softkey events. */
    private hEventPrefix;
    /**
     * The current menu on the stack.
     * @returns The current menu.
     */
    private get currentMenu();
    /**
     * Creates an instance of the MenuSystem.
     * @param bus The event bus to use with this instance.
     * @param hEventPrefix The event prefix to use for the softkey H Events.
     */
    constructor(bus: EventBus, hEventPrefix: string);
    /**
     * Gets the softkey menu registered with a given name.
     * @param menuName Name of the menu.
     * @returns The requested soft keymenu.
     */
    getMenu(menuName: string): SoftKeyMenu;
    /**
     * Adds a menu to the menu system.
     * @param name The route to the menu to add this menu entry to.
     * @param entry The menu entry to add.
     */
    addMenu(name: string, entry: SoftKeyMenu): void;
    /**
     * Pushes a menu onto the menu system stack.
     * @param name The name of the menu to push.
     */
    pushMenu(name: string): void;
    /**
     * Replaces one menu with another on top of the stack.
     * @param name The name of the menu to activate.
     */
    replaceMenu(name: string): void;
    /**
     * Pops a menu off the stack and returns to the previous menu.
     */
    back(): void;
    /**
     * Clears the menu stack.
     */
    clear(): void;
    /**
     * Attaches the softkeys display component to the menu system.
     * @param softKeys The softkeys display component instance.
     */
    attachSoftKeys(softKeys: SoftKeyBar): void;
    /**
     * Renders the current menu to the softkeys.
     */
    private renderToSoftKeys;
    /**
     * Handles a softkey HEvent and delgates to the handler.
     * @param hEvent The HEvent to handle.
     */
    private handleSoftKey;
}
//# sourceMappingURL=SoftKeyMenuSystem.d.ts.map