import { EventBus, Facility, FacilitySearchType, FacilityWaypoint, Subject, VNode, Waypoint } from '@microsoft/msfs-sdk';
import { UiControlGroup, UiControlGroupProps } from '../UiControlGroup';
import { ViewService } from '../ViewService';
import './WaypointInput.css';
/**
 * The properties for the WaypointInput component.
 */
interface WaypointInputProps extends UiControlGroupProps {
    /** The view service. */
    viewService: ViewService;
    /** The event bus. */
    bus: EventBus;
    /** Filter for the search. */
    filter: FacilitySearchType;
    /** A callback function to call when the input's matched waypoints list changes. */
    onMatchedWaypointsChanged?(waypoints: readonly FacilityWaypoint<Facility>[]): void;
    /** A callback function to call when the input's selected waypoint changes. */
    onWaypointChanged?(waypoint: Waypoint | null): void;
    /** A callback function to call when the selected facility changes. */
    onFacilityChanged?(facility: Facility | undefined): void;
    /** A subject which provides an ICAO string for the input to bind. */
    selectedIcao: Subject<string>;
    /** A callback function to call when ENT is pressed on the input. */
    onInputEnterPressed?(facility: Facility): void;
    /**
     * A subject which provides the plane's current true heading. Required to dynamically update airport icons which
     * display runway heading information.
     */
    planeHeading?: Subject<number>;
}
/** The WaypointInput component. */
export declare class WaypointInput extends UiControlGroup<WaypointInputProps> {
    private readonly inputComponentRef;
    private readonly store;
    private readonly controller;
    /**
     * A callback which is called when the input text value needs to be overridden.
     * @param value The new input text value.
     */
    private onInputTextValueOverride;
    /**
     * A callback which is called when Enter is pressed on this component's InputComponent child.
     * @returns whether the Enter event was handled.
     */
    private onInputEnterPressed;
    /** @inheritdoc */
    render(): VNode;
}
export {};
//# sourceMappingURL=WaypointInput.d.ts.map