import { Facility, FacilityWaypoint, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { UiControl, UiControlProps } from '../UiControl';
import './WptDupListItem.css';
/**
 * Component props for WaypointDuplicateFacilityItem.
 */
export interface WptDupListItemProps extends UiControlProps {
    /** A subject which provides a facility waypoint to bind. */
    waypoint: Subscribable<FacilityWaypoint<Facility> | null>;
    /** CSS class(es) to add to the root of the list item component. */
    class?: string;
}
/**
 * An item in a list of duplicate facility waypoints. Displays the type of the waypoint, an icon, and the region in
 * which the waypoint is located.
 */
export declare class WptDupListItem extends UiControl<WptDupListItemProps> {
    private static readonly FACILITY_TYPE_TEXT;
    private readonly iconRef;
    private readonly regionContainerRef;
    private readonly regionRef;
    private readonly facilityType;
    private waypointSub?;
    /** @inheritdoc */
    constructor(props: WptDupListItemProps);
    /** @inheritDoc */
    getHighlightElement(): Element | null;
    /**
     * A callback which is called when this item's waypoint changes.
     * @param waypoint The new waypoint.
     */
    protected onWaypointChanged(waypoint: FacilityWaypoint<Facility> | null): void;
    /**
     * Renders this control.
     * @returns this control's VNode.
     */
    renderControl(): VNode;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=WptDupListItem.d.ts.map