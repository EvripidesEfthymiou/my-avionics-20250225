import { AirspeedDefinitionContext } from '@microsoft/msfs-garminsdk';
import { LookupTableConfig } from './LookupTableConfig';
import { NumericConfig, NumericConfigResult } from './NumericConfig';
import { VSpeedValueKey } from '../VSpeed/VSpeed';
/**
 * Types of speed configs.
 */
export declare enum SpeedConfigType {
    Ias = "Ias",
    Mach = "Mach",
    Tas = "Tas",
    Aoa = "Aoa",
    Reference = "Reference",
    Bus = "Bus"
}
/**
 * A configuration object which defines a factory for an airspeed value presented as knots indicated airspeed.
 *
 * The airspeed value can be defined from a specific indicated airspeed, mach number, true airspeed, or angle-of-attack
 * value, from a one-dimensional lookup table of any of the previous value types keyed on pressure altitude, from an
 * aircraft reference speed, or from an arbitrary event bus topic.
 */
export declare class SpeedConfig implements NumericConfig {
    /** @inheritDoc */
    readonly isResolvableConfig = true;
    /** @inheritDoc */
    readonly isNumericConfig = true;
    /** The type of this config. */
    readonly type: SpeedConfigType;
    /** The value of this config. */
    readonly value: number | LookupTableConfig | VSpeedValueKey | string;
    /**
     * Creates a new SpeedConfig from a configuration document element.
     * @param element A configuration document element.
     */
    constructor(element: Element);
    /** @inheritDoc */
    resolve(): (context: AirspeedDefinitionContext) => NumericConfigResult;
    /**
     * Resolves this config as a factory for an airspeed value defined from indicated airspeed.
     * @returns A factory for an airspeed value defined from indicated airspeed.
     */
    private resolveIas;
    /**
     * Resolves this config as a factory for an airspeed value defined from mach number.
     * @returns A factory for an airspeed value defined from mach number.
     */
    private resolveMach;
    /**
     * Resolves this config as a factory for an airspeed value defined from true airspeed.
     * @returns A factory for an airspeed value defined from true airspeed.
     */
    private resolveTas;
    /**
     * Resolves this config as a factory for an airspeed value defined from angle of attack.
     * @returns A factory for an airspeed value defined from angle of attack.
     */
    private resolveAoa;
    /**
     * Resolves this config as a factory for an airspeed value defined from a reference speed.
     * @returns A factory for an airspeed value defined from a reference speed.
     */
    private resolveReference;
    /**
     * Resolves this config as a factory for an airspeed value defined from an event bus topic.
     * @returns A factory for an airspeed value defined from an event bus topic.
     */
    private resolveBus;
}
//# sourceMappingURL=SpeedConfig.d.ts.map