import { DefaultUserSettingManager, EventBus, UserSettingManager } from '@microsoft/msfs-sdk';
import { MapDeclutterSettingMode, MapTerrainSettingMode, MapUserSettingTypes } from '@microsoft/msfs-garminsdk';
/**
 * Map user settings that are independent between the PFD and MFD.
 */
export type SplitMapUserSettingTypes = {
    /** The map range index setting. */
    mapRangeIndex: number;
    /** Declutter setting. */
    mapDeclutter: MapDeclutterSettingMode;
    /** The terrain display setting. */
    mapTerrainMode: MapTerrainSettingMode;
    /** Whether to show traffic. */
    mapTrafficShow: boolean;
    /** Whether to show NEXRAD weather or not. */
    mapNexradShow: boolean;
};
/**
 * All map user settings.
 */
export type AllMapUserSettingTypes = Omit<MapUserSettingTypes, keyof SplitMapUserSettingTypes> & {
    /** The map range index setting for the MFD. */
    mapMfdRangeIndex: number;
    /** The map range index setting for the PFD. */
    mapPfdRangeIndex: number;
    /** Declutter setting for the MFD. */
    mapMfdDeclutter: MapDeclutterSettingMode;
    /** Declutter setting for the PFD. */
    mapPfdDeclutter: MapDeclutterSettingMode;
    /** The terrain display setting for the MFD. */
    mapMfdTerrainMode: MapTerrainSettingMode;
    /** The terrain display setting for the PFD. */
    mapPfdTerrainMode: MapTerrainSettingMode;
    /** Whether to show NEXRAD weather or not on the MFD. */
    mapMfdNexradShow: boolean;
    /** Whether to show NEXRAD weather or not on the PFD. */
    mapPfdNexradShow: boolean;
    /** Whether to show traffic on the MFD. */
    mapMfdTrafficShow: boolean;
    /** Whether to show traffic on the PFD. */
    mapPfdTrafficShow: boolean;
};
/**
 * Utility class for retrieving map user setting managers.
 */
export declare class MapUserSettings {
    private static INSTANCE;
    private static PFD_INSTANCE;
    private static MFD_INSTANCE;
    /**
     * Retrieves a manager for map user settings.
     * @param bus The event bus.
     * @returns a manager for map user settings.
     */
    static getManager(bus: EventBus): DefaultUserSettingManager<AllMapUserSettingTypes>;
    /**
     * Retrieves a manager for PFD map user settings.
     * @param bus The event bus.
     * @returns a manager for PFD map user settings.
     */
    static getPfdManager(bus: EventBus): UserSettingManager<MapUserSettingTypes>;
    /**
     * Retrieves a manager for MFD map user settings.
     * @param bus The event bus.
     * @returns a manager for PFD map user settings.
     */
    static getMfdManager(bus: EventBus): UserSettingManager<MapUserSettingTypes>;
}
//# sourceMappingURL=MapUserSettings.d.ts.map