import { AirspeedIndicatorBottomDisplayOptions, AirspeedIndicatorColorRange, AirspeedIndicatorDataProviderOptions, AirspeedTapeScaleOptions } from '@microsoft/msfs-garminsdk';
import { Config, ConfigFactory } from '../../Config/Config';
import { VSpeedBugConfig } from './VSpeedBugConfig';
/**
 * A configuration object which defines airspeed indicator options.
 */
export declare class AirspeedIndicatorConfig implements Config {
    private static readonly DEFAULT_DATA_OPTIONS;
    private static readonly DEFAULT_TAPE_SCALE_OPTIONS;
    private static readonly DEFAULT_BOTTOM_OPTIONS;
    /** Options for the airspeed indicator data provider. */
    readonly dataProviderOptions: Readonly<AirspeedIndicatorDataProviderOptions>;
    /** Options for the airspeed tape scale. */
    readonly tapeScaleOptions: Readonly<AirspeedTapeScaleOptions>;
    /** Color range definitions for the airspeed tape. */
    readonly colorRangeDefinitions: readonly AirspeedIndicatorColorRange[];
    /** Options for the bottom display box. */
    readonly bottomDisplayOptions: Readonly<AirspeedIndicatorBottomDisplayOptions>;
    /** Reference V-speed bug config options for the airspeed indicator. */
    readonly vSpeedBugConfigs: readonly VSpeedBugConfig[];
    /**
     * Creates a new AirspeedIndicatorConfig from a configuration document element.
     * @param element A configuration document element.
     * @param factory A configuration object factory to use to create child configuration objects.
     */
    constructor(element: Element | undefined, factory: ConfigFactory);
    /**
     * Parses data provider options from a configuration document element.
     * @param element A configuration document element.
     * @param factory A configuration object factory to use to create child configuration objects.
     * @returns Data provider options defined by the specified element.
     * @throws Error if the specified element has an invalid format.
     */
    private parseDataProviderOptions;
    /**
     * Parses a factory for a speed alert threshold airspeed value from a configuration document element.
     * @param element A configuration document element.
     * @param factory A configuration object factory to use to create child configuration objects.
     * @returns A factory for a speed alert threshold airspeed value defined by the specified element, or `undefined` if
     * `element` is `undefined`.
     * @throws Error if the specified element has an invalid format.
     */
    private parseSpeedAlertThreshold;
    /**
     * Parses tape scale options from a configuration document element.
     * @param element A configuration document element.
     * @returns Tape scale options defined by the specified element.
     * @throws Error if the specified element has an invalid format.
     */
    private parseScaleOptions;
    /**
     * Parses color range definitions from a configuration document element.
     * @param element A configuration document element.
     * @param factory A configuration object factory to use to create child configuration objects.
     * @param tapeScaleOptions Options describing the airspeed tape scale.
     * @returns Color range definitions defined by the specified element.
     */
    private parseColorRangeDefinitions;
    /**
     * Gets a default set of color range definitions. The set includes the following ranges (in order):
     * 1. RED: Flaps extended stall range (tape minimum to Vs0).
     * 2. WHITE: Flaps extended operating range (Vs0 to Vfe).
     * 3. GREEN (half): Flaps extended or retracted operating range (Vs1 to Vfe).
     * 4. GREEN (full): Flaps retracted operating range (Vfe to Vno).
     * 5. YELLOW: Overspeed caution range (Vno to Vne).
     * 6. BARBER POLE: Overspeed range (Vne to tape maximum).
     * @param tapeScaleOptions Options describing the airspeed tape scale.
     * @returns A array containing a default set of color range definitions.
     */
    private getDefaultColorRangeDefinitions;
    /**
     * Parses bottom display box options from a configuration document element.
     * @param element A configuration document element.
     * @returns Bottom display box options defined by the specified element.
     * @throws Error if the specified element has an invalid format.
     */
    private parseBottomDisplayOptions;
    /**
     * Parses reference V-speed bug configuration objects from a configuration document element.
     * @param element A configuration document element.
     * @returns Reference V-speed bug configuration objects defined by the specified element.
     */
    private parseVSpeedBugOptions;
    /**
     * Gets a default set of V-speed bug configuration objects. The set includes configurations for the following bugs
     * (in order):
     * 1. V-speed name: `glide`, Bug label: `G`.
     * 2. V-speed name: `r`, Bug label: `R`.
     * 3. V-speed name: `x`, Bug label: `X`.
     * 4. V-speed name: `y`, Bug label: `Y`.
     * @returns A array containing a default set of V-speed bug configuration objects.
     */
    private getDefaultVSpeedBugOptions;
}
//# sourceMappingURL=AirspeedIndicatorConfig.d.ts.map