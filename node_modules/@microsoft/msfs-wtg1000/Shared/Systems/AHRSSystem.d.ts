import { EventBus } from '@microsoft/msfs-sdk';
import { BasicAvionicsSystem } from './BasicAvionicsSystem';
import { AvionicsSystemStateEvent } from './G1000AvionicsSystem';
/**
 * The AHRS system.
 */
export declare class AHRSSystem extends BasicAvionicsSystem<AHRSSystemEvents> {
    readonly index: number;
    protected readonly bus: EventBus;
    protected initializationTime: number;
    private magState;
    private readonly rollSub;
    /**
     * Creates an instance of an AHRS system.
     * @param index The index of the AHRS (1 or 2)
     * @param bus An instance of the event bus.
     */
    constructor(index: number, bus: EventBus);
    /** @inheritdoc */
    onUpdate(): void;
    /**
     * A callback called when the source states change that are upstream of this system.
     * @param isPowered Whether or not the AHRS is powered.
     * @param magState The current state of the magnetometer.
     */
    private onStatesChanged;
    /**
     * Handles when the bank angle changes while AHRS is initializing.
     * @param bankAngle The bank angle of the aircraft.
     */
    private onRollChanged;
}
/**
 * Events fired by the AHRS system.
 */
export interface AHRSSystemEvents {
    /** An event fired when the AHRS system state changes. */
    'ahrs_state': AvionicsSystemStateEvent;
}
//# sourceMappingURL=AHRSSystem.d.ts.map