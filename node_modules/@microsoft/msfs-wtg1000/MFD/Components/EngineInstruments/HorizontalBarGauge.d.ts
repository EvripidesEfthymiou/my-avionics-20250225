import { VNode, XMLDoubleHorizontalGaugeProps, XMLHorizontalGaugeProps, XMLHostedLogicGauge } from '@microsoft/msfs-sdk';
import { BaseGauge } from './BaseGauge';
import './Gauge.css';
/** A horizontal bar gauge for displaying a single value. */
export declare class XMLHorizontalGauge extends BaseGauge<Partial<XMLHorizontalGaugeProps> & XMLHostedLogicGauge> {
    private svgRef;
    private zoneGroupRef;
    private lineGroupRef;
    private minValue;
    private maxValue;
    private geometry;
    private alertSubject;
    private valueSubject;
    /**
     * Create a horizontal gauge.
     * @param props The properties for the gauge.
     */
    constructor(props: Partial<XMLHorizontalGaugeProps> & XMLHostedLogicGauge);
    /**
     * Initialize the rendered gauge.
     */
    protected initGauge(): void;
    /**
     * Render a horizontal bar gauge
     * @returns A VNode
     */
    protected renderGauge(): VNode;
}
/** A horizontal bar gauge for displaying two distinct values. */
export declare class XMLDoubleHorizontalGauge extends BaseGauge<Partial<XMLDoubleHorizontalGaugeProps> & XMLHostedLogicGauge> {
    private svgRef;
    private zoneGroupRef;
    private lineGroupRef;
    private minValue;
    private maxValue;
    private geometry;
    private alertSubject;
    private valueSubjects;
    /**
     * Create a horizontal gauge.
     * @param props The properties for the gauge.
     */
    constructor(props: Partial<XMLDoubleHorizontalGaugeProps> & XMLHostedLogicGauge);
    /**
     * Initialize the rendered gauge.
     */
    protected initGauge(): void;
    /**
     * Render a horizontal bar gauge
     * @returns A VNode
     */
    protected renderGauge(): VNode;
}
//# sourceMappingURL=HorizontalBarGauge.d.ts.map