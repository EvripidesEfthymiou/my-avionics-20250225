import { VNode } from '@microsoft/msfs-sdk';
import { FmsHEvent } from '../../../Shared/UI/FmsHEvent';
import { SoftKeyMenuSystem } from '../../../Shared/UI/Menus/SoftKeyMenuSystem';
import { UiPage, UiPageProps } from '../../../Shared/UI/UiPage';
import './MFDUiPage.css';
/**
 * Component props for MFDUiPage.
 */
export interface MFDUiPageProps extends UiPageProps {
    /** The softkey menu system. */
    menuSystem: SoftKeyMenuSystem;
}
/**
 * An MFD page.
 */
export declare abstract class MFDUiPage<T extends MFDUiPageProps = MFDUiPageProps> extends UiPage<T> {
    protected isSoftkeyMenuHidden: boolean;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /**
     * This method is called when a MENU button event occurs.
     * @returns whether the event was handled.
     */
    protected onMenuPressed(): boolean;
    /**
     * This method is called when a HOME button event occurs.
     * @returns whether the event was handled.
     */
    protected onHomePressed(): boolean;
    /**
     * This method is called when a PROC button event occurs.
     * @returns whether the event was handled.
     */
    protected onDirectToPressed(): boolean;
    /**
     * This method is called when a FPL button event occurs.
     * @returns whether the event was handled.
     */
    protected onFPLPressed(): boolean;
    /**
     * This method is called when a PROC button event occurs.
     * @returns whether the event was handled.
     */
    protected onPROCPressed(): boolean;
    /** @inheritdoc */
    protected onViewClosed(): void;
    /**
     * Sets whether the softkey menu is hidden.
     * @param hide Whether to hide the softkey menu.
     */
    protected setSoftkeyMenuHidden(hide: boolean): void;
}
//# sourceMappingURL=MFDUiPage.d.ts.map