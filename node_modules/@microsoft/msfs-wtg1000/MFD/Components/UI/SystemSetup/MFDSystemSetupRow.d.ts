import { ComponentProps, DisplayComponent, UserSettingRecord, UserSettingValueFilter, VNode } from '@microsoft/msfs-sdk';
import { UserSettingSelectControlProps } from '../../../../Shared/UI/UserSettings/UserSettingSelectControl';
import { UserSettingToggleControlProps } from '../../../../Shared/UI/UserSettings/UserSettingToggleControl';
import './MFDSystemSetupRow.css';
/**
 * Component props for MFDSystemSetupRow.
 */
export interface MFDSystemSetupRowProps extends ComponentProps {
    /** The title of the row. */
    title: string;
    /** CSS class(es) to apply to the root of the row. */
    class?: string;
}
/**
 * A row in the MFD System Setup page. Consists of a title and two optional components displayed one each to left and
 * right of the title.
 */
export declare abstract class MFDSystemSetupRow<P extends MFDSystemSetupRowProps = MFDSystemSetupRowProps> extends DisplayComponent<P> {
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders the component to the left of the title.
     * @returns The component to the left of the title, as a VNode, or null if there is no such component.
     */
    protected renderLeft(): VNode | null;
    /**
     * Renders the component to the right of the title.
     * @returns The component to the right of the title, as a VNode, or null if there is no such component.
     */
    protected renderRight(): VNode | null;
}
/**
 * Component props for MFDSystemSetupGenericRow.
 */
export interface MFDSystemSetupGenericRowProps extends MFDSystemSetupRowProps {
    /** The component to display to the left of the title, if any. */
    left?: VNode;
    /** The component to display to the right of the title, if any. */
    right?: VNode;
}
/**
 * A generic row which displays arbitrary left and right components specified by props.
 */
export declare class MFDSystemSetupGenericRow<P extends MFDSystemSetupGenericRowProps = MFDSystemSetupGenericRowProps> extends MFDSystemSetupRow<P> {
    /** @inheritdoc */
    protected renderLeft(): VNode | null;
    /** @inheritdoc */
    protected renderRight(): VNode | null;
}
/**
 * Component props for MFDSystemSetupSelectRow.
 */
export interface MFDSystemSetupSelectRowProps<T extends UserSettingRecord, K extends keyof T & string> extends MFDSystemSetupRowProps {
    /** Props required for the select control. */
    selectControlProps: UserSettingSelectControlProps<T, K>;
}
/**
 * A row which displays to the right of the title a select control component which controls the value of a user setting.
 */
export declare class MFDSystemSetupSelectRow<T extends UserSettingRecord, K extends keyof T & string, P extends MFDSystemSetupSelectRowProps<T, K> = MFDSystemSetupSelectRowProps<T, K>> extends MFDSystemSetupRow<P> {
    /** @inheritdoc */
    protected renderRight(): VNode | null;
}
/**
 * Component props for MFDSystemSetupToggleRow.
 */
export interface MFDSystemSetupToggleRowProps<T extends UserSettingRecord, K extends keyof UserSettingValueFilter<T, boolean> & string> extends MFDSystemSetupRowProps {
    /** Props required for the toggle control.  */
    toggleControlProps: Omit<UserSettingToggleControlProps<T, K>, 'falseText' | 'trueText'>;
}
/**
 * A row which displays to the right of the title an arrow toggle component which controls the value of a boolean user setting.
 */
export declare class MFDSystemSetupToggleRow<T extends UserSettingRecord, K extends keyof UserSettingValueFilter<T, boolean> & string, P extends MFDSystemSetupToggleRowProps<T, K> = MFDSystemSetupToggleRowProps<T, K>> extends MFDSystemSetupRow<P> {
    /** @inheritdoc */
    protected renderRight(): VNode | null;
}
//# sourceMappingURL=MFDSystemSetupRow.d.ts.map