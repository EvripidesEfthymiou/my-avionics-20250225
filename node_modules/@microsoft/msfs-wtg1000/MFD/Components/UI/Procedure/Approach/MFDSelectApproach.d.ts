import { FlightPlan, Subject, VNode } from '@microsoft/msfs-sdk';
import { FlightPlanFocus } from '../../../../../Shared/UI/FPL/FPLTypesAndProps';
import { SelectApproach, SelectApproachProps } from '../../../../../Shared/UI/Procedure/Approach/SelectApproach';
import { SelectApproachController } from '../../../../../Shared/UI/Procedure/Approach/SelectApproachController';
import { MFDSelectProcedure } from '../MFDSelectProcedurePage';
import { MFDSelectApproachStore } from './MFDSelectApproachStore';
import './MFDSelectApproach.css';
/**
 * Component props for MFDSelectApproach.
 */
export interface MFDSelectApproachProps extends SelectApproachProps {
    /** A subject to provide the procedure preview flight plan. */
    procedurePlan: Subject<FlightPlan | null>;
    /** A subject to provide the procedure transition preview flight plan. */
    transitionPlan: Subject<FlightPlan | null>;
    /** A subject to provide the flight plan focus for the selected approach. */
    focus: Subject<FlightPlanFocus>;
}
/**
 * An MFD component for selecting approaches.
 */
export declare class MFDSelectApproach extends SelectApproach<MFDSelectApproachProps> implements MFDSelectProcedure {
    private readonly rootRef;
    private readonly unitsSettingManager;
    /** @inheritdoc */
    protected createStore(): MFDSelectApproachStore;
    /** @inheritdoc */
    protected createController(store: MFDSelectApproachStore): SelectApproachController;
    /** @inheritdoc */
    activate(): void;
    /** @inheritdoc */
    deactivate(): void;
    private buildLegItem;
    /**
     * A callback which is called when the Load action is executed.
     */
    protected onLoadExecuted(): void;
    /**
     * A callback which is called when the Activate action is executed.
     */
    protected onActivateExecuted(): void;
    /**
     * Renders the component.
     * @returns The component VNode.
     */
    render(): VNode;
}
//# sourceMappingURL=MFDSelectApproach.d.ts.map