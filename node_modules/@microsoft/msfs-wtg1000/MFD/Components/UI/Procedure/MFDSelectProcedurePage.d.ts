import { EventBus, FlightPathCalculator, VNode } from '@microsoft/msfs-sdk';
import { Fms, ProcedureType } from '@microsoft/msfs-garminsdk';
import { FmsHEvent } from '../../../../Shared/UI/FmsHEvent';
import { UiControlGroup } from '../../../../Shared/UI/UiControlGroup';
import { MFDUiPage, MFDUiPageProps } from '../MFDUiPage';
import { MFDSelectApproach } from './Approach/MFDSelectApproach';
import { MFDSelectArrival } from './DepArr/MFDSelectArrival';
import { MFDSelectDeparture } from './DepArr/MFDSelectDeparture';
import './MFDSelectProcedurePage.css';
/**
 * An MFD select procedure component.
 */
export interface MFDSelectProcedure extends UiControlGroup {
    /**
     * Activates this component.
     */
    activate(): void;
    /**
     * Deactivates this component.
     */
    deactivate(): void;
}
/**
 * A map of procedure types to MFD select procedure component types.
 */
export type MFDSelectProcedureTypeComponentMap = {
    /** Departures. */
    [ProcedureType.DEPARTURE]: MFDSelectDeparture;
    /** Arrivals. */
    [ProcedureType.ARRIVAL]: MFDSelectArrival;
    /** Approaches. */
    [ProcedureType.APPROACH]: MFDSelectApproach;
    /** Visual approaches. */
    [ProcedureType.VISUALAPPROACH]: MFDSelectApproach;
};
/**
 * Component props for MFDSelectProcedurePage.
 */
export interface MFDSelectProcedurePageProps extends MFDUiPageProps {
    /** The event bus. */
    bus: EventBus;
    /** The flight management system. */
    fms: Fms;
    /** A flight path calculator to use to build preview flight plans. */
    calculator: FlightPathCalculator;
    /** Whether this instance of the G1000 has a Radio Altimeter. */
    hasRadioAltimeter: boolean;
}
/**
 * An MFD select procedure page.
 */
export declare class MFDSelectProcedurePage extends MFDUiPage<MFDSelectProcedurePageProps> {
    protected static readonly MAP_UPDATE_FREQ = 30;
    protected static readonly MAP_POINTER_MOVE_INCREMENT = 5;
    protected readonly selectDepartureRef: import("@microsoft/msfs-sdk").NodeReference<MFDSelectDeparture>;
    protected readonly selectArrivalRef: import("@microsoft/msfs-sdk").NodeReference<MFDSelectArrival>;
    protected readonly selectApproachRef: import("@microsoft/msfs-sdk").NodeReference<MFDSelectApproach>;
    private readonly mapSettingManager;
    private readonly compiledMap;
    private readonly mapRangeModule;
    private readonly mapProcPreviewModule;
    private readonly mapFocusModule;
    private readonly mapPointerModule;
    private readonly mapRangeController;
    private readonly mapPointerController;
    private activeSelectProcedure?;
    private activeProcedureType;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /**
     * Sets the active procedure type for this page, activating the corresponding select procedure component. Procedure
     * selection is restricted to the active procedure type.
     * @param type A procedure type.
     * @returns The select procedure component that was activated, or undefined if this page is not yet initialized.
     */
    setActiveProcedureType<T extends ProcedureType>(type: T): MFDSelectProcedureTypeComponentMap[T] | undefined;
    /**
     * Sets the active procedure type for this page, activating the corresponding select procedure component.
     * @param type A procedure type.
     */
    private _setActiveProcedureType;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /**
     * Changes the MFD map range index setting.
     * @param delta The change in index to apply.
     */
    private changeMapRangeIndex;
    /**
     * Handles events that move the map pointer.
     * @param evt The event.
     * @returns Whether the event was handled.
     */
    private handleMapPointerMoveEvent;
    /** @inheritdoc */
    protected onViewOpened(): void;
    /** @inheritdoc */
    protected onViewClosed(): void;
    /** @inheritdoc */
    render(): VNode;
}
//# sourceMappingURL=MFDSelectProcedurePage.d.ts.map