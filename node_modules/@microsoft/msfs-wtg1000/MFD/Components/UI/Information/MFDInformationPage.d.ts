import { ControlPublisher, EventBus, FacilityLoader, Subject, VNode, Waypoint } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { FmsHEvent } from '../../../../Shared/UI/FmsHEvent';
import { G1000UiControl } from '../../../../Shared/UI/G1000UiControl';
import { SoftKeyMenuSystem } from '../../../../Shared/UI/Menus/SoftKeyMenuSystem';
import { UiPageProps } from '../../../../Shared/UI/UiPage';
import { MFDUiPage } from '../MFDUiPage';
import { FacilityGroup } from './FacilityGroup';
import './MFDInformationPage.css';
/** The properties on the flight plan popout component. */
export interface MFDInformationPageProps extends UiPageProps {
    /** An instance of the event bus. */
    bus: EventBus;
    /** An FMS state manager. */
    fms: Fms;
    /** A facility loader. */
    facilityLoader: FacilityLoader;
    /** The MenuSystem. */
    menuSystem: SoftKeyMenuSystem;
    /** A control system publisher. */
    controlPublisher: ControlPublisher;
}
/**
 * A component that displays a list of the nearest facilities with accompanying information
 * and a map indicating the facilities location.
 */
export declare abstract class MFDInformationPage extends MFDUiPage<MFDInformationPageProps> {
    protected static readonly UPDATE_FREQ = 30;
    protected readonly unitsSettingManager: import("@microsoft/msfs-garminsdk").UnitsUserSettingManager<import("@microsoft/msfs-garminsdk").UnitsUserSettingTypes>;
    protected readonly uiRoot: import("@microsoft/msfs-sdk").NodeReference<G1000UiControl<import("../../../../Shared/UI/G1000UiControl").G1000UiControlProps>>;
    protected readonly facilityGroup: import("@microsoft/msfs-sdk").NodeReference<FacilityGroup<any>>;
    protected readonly waypoint: Subject<Waypoint | null>;
    private readonly mapSettingManager;
    private readonly compiledMap;
    private readonly mapRangeModule;
    private readonly mapWptSelectionModule;
    private readonly mapPointerModule;
    private readonly mapRangeController;
    private readonly mapPointerController;
    private readonly mapWaypointRTRController;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** Renders the other groups to display on the page. */
    protected abstract renderGroups(): VNode;
    /** Gets the class to add to the page display for the groups. */
    protected abstract getPageClass(): string;
    /** Gets the default map range index for this page. */
    protected abstract getDefaultRangeIndex(): number;
    /** @inheritdoc */
    protected onViewOpened(): void;
    /** @inheritdoc */
    protected onViewClosed(): void;
    /** @inheritdoc */
    protected onInputDataSet(icao: string | undefined): void;
    /** @inheritdoc */
    processHEvent(evt: FmsHEvent): boolean;
    /**
     * Changes the MFD map range index setting.
     * @param delta The change in index to apply.
     */
    private changeMapRangeIndex;
    /** @inheritdoc */
    render(): VNode;
}
//# sourceMappingURL=MFDInformationPage.d.ts.map