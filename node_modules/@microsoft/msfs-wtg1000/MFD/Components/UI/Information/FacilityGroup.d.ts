import { EventBus, FacilityLoader, FacilityType, FacilityTypeMap, FacilityWaypoint, ScrollDirection, Subject, VNode } from '@microsoft/msfs-sdk';
import { G1000UiControl, G1000UiControlProps } from '../../../../Shared/UI/G1000UiControl';
import { ViewService } from '../../../../Shared/UI/ViewService';
import './FacilityGroup.css';
/** Props for the FacilityGroup component. */
interface FacilityGroupProps<T extends FacilityType> extends G1000UiControlProps {
    /** A callback called when a waypoint has been selected. */
    onSelected: (waypoint: FacilityWaypoint<FacilityTypeMap[T]> | null) => void;
    /** An instance of the event bus. */
    bus: EventBus;
    /** An instance of the facility loader. */
    facilityLoader: FacilityLoader;
    /** An instance of the MFD's view service. */
    viewService: ViewService;
    /** The display class for this group. */
    class?: string;
    /** The title to display on this group. */
    title: string;
    /** The facility type for this group. */
    facilityType: T;
}
/**
 * A component that selects and displays facility waypoint information.
 */
export declare class FacilityGroup<T extends FacilityType> extends G1000UiControl<FacilityGroupProps<T>> {
    private readonly content;
    private readonly input;
    private waypoints;
    /** The input icao into the waypoint input control. */
    readonly inputIcao: Subject<string>;
    /** @inheritdoc */
    protected onFocused(): void;
    /** @inheritdoc */
    protected onBlurred(): void;
    /** @inheritdoc */
    onUpperKnobInc(): boolean;
    /** @inheritdoc */
    onUpperKnobDec(): boolean;
    /** @inheritdoc */
    onLowerKnobInc(): boolean;
    /** @inheritdoc */
    onLowerKnobDec(): boolean;
    /** @inheritdoc */
    onClr(): boolean;
    /** @inheritdoc */
    onEnter(): boolean;
    /** @inheritdoc */
    protected onScroll(direction: ScrollDirection): boolean;
    /**
     * A callback called when the waypoint input search list changes.
     * @param waypoints The waypoints returned in the search.
     */
    private onWaypointsChanged;
    /**
     * A callback called when a waypoint is selected in the waypoint input.
     */
    private onWaypointSelected;
    /**
     * Sets the waypoint in the waypoint information group and calls the selection callback.
     * @param waypoint The waypoint to set.
     */
    protected setWaypoint(waypoint: FacilityWaypoint<FacilityTypeMap[T]> | null): void;
    /** @inheritdoc */
    render(): VNode;
}
export {};
//# sourceMappingURL=FacilityGroup.d.ts.map