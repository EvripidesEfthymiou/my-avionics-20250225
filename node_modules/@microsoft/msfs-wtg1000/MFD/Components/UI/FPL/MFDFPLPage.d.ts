import { EventBus, VNode } from '@microsoft/msfs-sdk';
import { Fms, TrafficAdvisorySystem } from '@microsoft/msfs-garminsdk';
import { FmsHEvent } from '../../../../Shared/UI/FmsHEvent';
import { MFDUiPage, MFDUiPageProps } from '../MFDUiPage';
import './MFDFPLPage.css';
/**
 * Component props for MFDFPLPage.
 */
export interface MFDFPLPageProps extends MFDUiPageProps {
    /** The event bus. */
    bus: EventBus;
    /** An instance of the flight planner. */
    fms: Fms;
    /** The G1000 traffic advisory system. */
    tas: TrafficAdvisorySystem;
}
/**
 * A page which displays the flight plan map and active flight plan information.
 */
export declare class MFDFPLPage extends MFDUiPage<MFDFPLPageProps> {
    private static readonly UPDATE_FREQ;
    private static readonly POINTER_MOVE_INCREMENT;
    private readonly fplRef;
    private readonly mapSettingManager;
    private readonly drawEntirePlan;
    private readonly compiledMap;
    private readonly mapRangeModule;
    private readonly mapPointerModule;
    private readonly mapFocusModule;
    private readonly mapRangeController;
    private readonly mapPointerController;
    /** @inheritdoc */
    constructor(props: MFDFPLPageProps);
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    processHEvent(evt: FmsHEvent): boolean;
    /** @inheritdoc */
    setScrollEnabled(enabled: boolean): void;
    /**
     * Changes the MFD map range index setting.
     * @param delta The change in index to apply.
     */
    private changeMapRangeIndex;
    /**
     * Handles events that move the map pointer.
     * @param evt The event.
     * @returns Whether the event was handled.
     */
    private handleMapPointerMoveEvent;
    /** @inheritdoc */
    protected onViewOpened(): void;
    /** @inheritdoc */
    protected onViewClosed(): void;
    /** @inheritdoc */
    protected onViewResumed(): void;
    /** @inheritdoc */
    protected onFPLPressed(): boolean;
    /**
     * Responds to when this page's FPL component is focused.
     */
    private onFPLFocused;
    /** @inheritdoc */
    render(): VNode;
}
//# sourceMappingURL=MFDFPLPage.d.ts.map