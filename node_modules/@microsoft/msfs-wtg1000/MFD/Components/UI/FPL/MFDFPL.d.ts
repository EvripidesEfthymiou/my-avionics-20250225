import { EventBus, Subject, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { FmsHEvent } from '../../../../Shared/UI/FmsHEvent';
import { FlightPlanFocus } from '../../../../Shared/UI/FPL/FPLTypesAndProps';
import { G1000UiControl, G1000UiControlProps } from '../../../../Shared/UI/G1000UiControl';
import { ViewService } from '../../../../Shared/UI/ViewService';
import './MFDFPL.css';
/**
 * Component props for MFDFPL.
 */
export interface MFDFPLProps extends G1000UiControlProps {
    /** An instance of the event bus. */
    bus: EventBus;
    /** The view service. */
    viewService: ViewService;
    /** The flight management system. */
    fms: Fms;
    /** A subject to provide the flight plan focus. */
    focus: Subject<FlightPlanFocus>;
}
/**
 * The FPL popup container encapsulates the actual popup logic.
 */
export declare class MFDFPL extends G1000UiControl<MFDFPLProps> {
    private readonly fplDetailsRef;
    private readonly vnavProfileRef;
    private readonly selectionSub;
    /** Called when the view is resumed. */
    onViewResumed(): void;
    /** Called when the view is opened. */
    onViewOpened(): void;
    /** Called when the view is closed. */
    onViewClosed(): void;
    /** @inheritdoc */
    protected onBlurred(): void;
    /**
     * Scrolls to the active leg in the flight plan.
     * @param focusActiveLeg Whether to focus the active leg.
     */
    scrollToActiveLeg(focusActiveLeg: boolean): void;
    /** @inheritdoc */
    onInteractionEvent(evt: FmsHEvent): boolean;
    /**
     * Renders the component.
     * @returns The component VNode.
     */
    render(): VNode;
}
//# sourceMappingURL=MFDFPL.d.ts.map