import { EventBus, FlightPlanner, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { G1000UiControl, G1000UiControlProps } from '../../../../Shared/UI/G1000UiControl';
import './MFDFPLVNavProfile.css';
/**
 * The props on the MFDFPLVNavProfile component.
 */
interface MFDFPLVNavProfileProps extends G1000UiControlProps {
    /** The event bus to use. */
    bus: EventBus;
    /** An instance of the flight planner. */
    flightPlanner: FlightPlanner;
    /** An instance of the FMS. */
    fms: Fms;
}
/**
 * A component that displays the active VNAV profile on the MFD flight plan page.
 */
export declare class MFDFPLVNavProfile extends G1000UiControl<MFDFPLVNavProfileProps> {
    private readonly waypointSubject;
    private readonly targetAlt;
    private readonly timeToTarget;
    private readonly targetVs;
    private readonly requiredVs;
    private readonly verticalDev;
    private readonly groundSpeed;
    private readonly altitude;
    private readonly vnavState;
    private readonly fpa;
    private readonly timeToTod;
    private readonly timeToBod;
    private readonly distanceToTod;
    private vnavDataProvider;
    private isPaused;
    private detailsSubject;
    private todBodLabel;
    private secsToTarget;
    /** @inheritdoc */
    onAfterRender(node: VNode): void;
    /**
     * Pauses updates for this component. While paused, this component will not update its displayed values.
     */
    pause(): void;
    /**
     * Resumes updates for this component. When resumed, this component will periodically update its displayed values.
     */
    resume(): void;
    /**
     * Sets a vnav segment FPA manually.
     * @param fpa The FPA Value to set.
     */
    private setFpa;
    /** @inheritdoc */
    render(): VNode;
}
export {};
//# sourceMappingURL=MFDFPLVNavProfile.d.ts.map