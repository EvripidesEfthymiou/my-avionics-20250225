import { ComponentProps, DisplayComponent, UserSettingValueFilter, VNode } from '@microsoft/msfs-sdk';
import { MapUserSettingTypes } from '@microsoft/msfs-garminsdk';
import { MapEnumSettingControlProps, MapRangeSettingControlProps, MapSettingControlProps } from '../../../../Shared/UI/MapSettings/MapSettingControls';
import { ViewService } from '../../../../Shared/UI/ViewService';
import './MFDMapSettingsRow.css';
/**
 * Component props for MFDMapSettingsRow.
 */
export interface MFDMapSettingsRowProps extends ComponentProps {
    /** The view service. */
    viewService: ViewService;
    /** The title of this row. */
    title: string;
}
/**
 * A settings row for a MFDMapSettingsMapGroup. Each row has a title and up to two setting controls.
 */
export declare abstract class MFDMapSettingsRow<P extends MFDMapSettingsRowProps> extends DisplayComponent<P> {
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders this row's left setting control.
     */
    protected abstract renderLeftControl(): VNode | null;
    /**
     * Renders this row's right setting control.
     */
    protected abstract renderRightControl(): VNode | null;
}
/**
 * Component props for MFDMapSingleEnumSettingRow.
 */
export interface MFDMapSingleEnumSettingRowProps<K extends keyof MapUserSettingTypes> extends MFDMapSettingsRowProps {
    /** Component props for the enum setting control. */
    controlProps: MapEnumSettingControlProps<K>;
}
/**
 * A row which contains a single enum setting control.
 */
export declare class MFDMapSingleEnumSettingRow<K extends keyof MapUserSettingTypes> extends MFDMapSettingsRow<MFDMapSingleEnumSettingRowProps<K>> {
    /** @inheritdoc */
    protected renderLeftControl(): VNode | null;
    /** @inheritdoc */
    protected renderRightControl(): VNode | null;
}
/**
 * Component props for MFDMapToggleSettingRow.
 */
export interface MFDMapToggleSettingRowProps<K extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>> extends MFDMapSettingsRowProps {
    /** Component props for the toggle setting control. */
    toggleProps: MapSettingControlProps<K>;
}
/**
 * A map settings row which contains a toggle setting control.
 */
export declare class MFDMapToggleSettingRow<T extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>, P extends MFDMapToggleSettingRowProps<T> = MFDMapToggleSettingRowProps<T>> extends MFDMapSettingsRow<P> {
    /** @inheritdoc */
    protected renderLeftControl(): VNode | null;
    /** @inheritdoc */
    protected renderRightControl(): VNode | null;
}
/**
 * Component props for MFDMapToggleEnumSettingsRow.
 */
export interface MFDMapToggleEnumSettingsRowProps<T extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>, E extends keyof MapUserSettingTypes> extends MFDMapToggleSettingRowProps<T> {
    /** Component props for the enum setting control. */
    enumProps: MapEnumSettingControlProps<E>;
}
/**
 * A map settings row which controls track vector settings.
 */
export declare class MFDMapToggleEnumSettingsRow<T extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>, E extends keyof MapUserSettingTypes> extends MFDMapToggleSettingRow<T, MFDMapToggleEnumSettingsRowProps<T, E>> {
    /** @inheritdoc */
    protected renderRightControl(): VNode | null;
}
/**
 * Component props for MFDMapRangeSettingRow.
 */
export interface MFDMapRangeSettingRowProps<R extends keyof UserSettingValueFilter<MapUserSettingTypes, number>> extends MFDMapSettingsRowProps {
    /** Component props for the range setting control. */
    rangeProps: MapRangeSettingControlProps<R>;
}
/**
 * A map settings row which contains a map range setting control.
 */
export declare class MFDMapRangeSettingRow<R extends keyof UserSettingValueFilter<MapUserSettingTypes, number>> extends MFDMapSettingsRow<MFDMapRangeSettingRowProps<R>> {
    /** @inheritdoc */
    protected renderLeftControl(): VNode | null;
    /** @inheritdoc */
    protected renderRightControl(): VNode | null;
}
/**
 * Component props for MFDMapToggleRangeSettingsRow.
 */
export interface MFDMapToggleRangeSettingsRowProps<T extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>, R extends keyof UserSettingValueFilter<MapUserSettingTypes, number>> extends MFDMapToggleSettingRowProps<T> {
    /** Component props for the range setting control. */
    rangeProps: MapRangeSettingControlProps<R>;
}
/**
 * A map settings row which contains a toggle setting control and a map range setting control.
 */
export declare class MFDMapToggleRangeSettingsRow<T extends keyof UserSettingValueFilter<MapUserSettingTypes, boolean>, R extends keyof UserSettingValueFilter<MapUserSettingTypes, number>> extends MFDMapToggleSettingRow<T, MFDMapToggleRangeSettingsRowProps<T, R>> {
    /** @inheritdoc */
    protected renderRightControl(): VNode | null;
}
//# sourceMappingURL=MFDMapSettingsRow.d.ts.map