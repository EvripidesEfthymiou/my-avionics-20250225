import { ComponentProps, CompositeLogicXMLHost, DisplayComponent, EventBus, VNode, XMLExtendedGaugeConfig } from '@microsoft/msfs-sdk';
import './EIS.css';
export declare enum EISPageTypes {
    Engine = 0,
    Lean = 1,
    System = 2
}
/** The props for an EIS display. */
export interface EISProps extends ComponentProps {
    /** the event bus */
    bus: EventBus;
    /** the logic handler */
    logicHandler: CompositeLogicXMLHost;
    /** our gauges */
    gaugeConfig: XMLExtendedGaugeConfig;
}
/**
 * This EIS is a shorcut for creating the base EIS display on the plane.  All the actual rendering and
 * management is hadled within an XMLGaugeColumn, but that's a litter more tedious to create.  This
 * component instantiates the EIS as a simple XMLColumnGroup with a single column that consists in
 * its entiretly of all the top-level gauges in the EIS.   Further nesting is handed by the internal
 * columns logic.
 */
export declare class EIS extends DisplayComponent<EISProps> {
    private enginePage;
    private leanPage;
    private systemPage;
    /**
     * Initial config after rendering.
     */
    onAfterRender(): void;
    /**
     * Shortcut for changing the display of an EIS data page, if it exists.
     * @param page The reference to the div containing the page.
     * @param display A string to set as the display style parameter.
     */
    private setDisplay;
    /**
     * Render an EIS as a single XMLColumnGroup.
     * @returns a VNode
     */
    render(): VNode;
}
//# sourceMappingURL=EIS.d.ts.map