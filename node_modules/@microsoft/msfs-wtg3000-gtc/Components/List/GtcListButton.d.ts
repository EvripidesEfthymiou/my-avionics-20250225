import { DisplayComponent, VNode, SubscribableSet, ToggleableClassNameRecord } from '@microsoft/msfs-sdk';
import { GtcTouchButtonProps } from '../TouchButton/GtcTouchButton';
import { GtcListItemProps } from './GtcListItem';
/** The props for GtcListButton. */
export interface GtcListButtonProps extends Omit<GtcListItemProps, 'class'>, Pick<GtcTouchButtonProps, 'isEnabled' | 'isHighlighted' | 'onPressed' | 'label' | 'gtcOrientation'> {
    /**
     * Whether the button should fill the entire list item.
     * Overrides hideBorder to be true when true.
     * Defaults to false. */
    fullSizeButton?: boolean;
    /** A callback function to execute when the list item is destroyed. */
    onDestroy?: () => void;
    /** CSS class(es) to apply to the list item div element. */
    listItemClasses?: string | SubscribableSet<string> | ToggleableClassNameRecord;
    /** CSS class(es) to apply to the list item div element. */
    touchButtonClasses?: string | SubscribableSet<string>;
}
/** A TouchButton used at the top level of a GtcList list item.
 * Handles cleaning up the TouchButton on destroy. */
export declare class GtcListButton extends DisplayComponent<GtcListButtonProps> {
    private static readonly RESERVED_CLASSES;
    private static readonly BASE_CLASSES;
    private readonly listItemRef;
    private cssClassSub?;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcListButton.d.ts.map