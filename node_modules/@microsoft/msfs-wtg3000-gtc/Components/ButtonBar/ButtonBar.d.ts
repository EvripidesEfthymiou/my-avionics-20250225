import { ComponentProps, DisplayComponent, VNode } from '@microsoft/msfs-sdk';
import { GtcService } from '../../GtcService/GtcService';
import './ButtonBar.css';
/**
 * Component props for {@link ButtonBar}.
 */
export interface ButtonBarProps extends ComponentProps {
    /** The GtcService. */
    gtcService: GtcService;
    /**
     * Whether the button bar should include support for the CAS master caution and warning acknowledge buttons. If
     * `true`, then a master caution (CAUT) and/or master warning (WARN) acknowledge button will be displayed in place of
     * the MSG button whenever there are unacknowledged CAS caution and warning alerts, respectively.
     */
    supportCasAcknowledge: boolean;
}
/** The ButtonBar component. */
export declare class ButtonBar extends DisplayComponent<ButtonBarProps> {
    private readonly publisher;
    private readonly sidebarState;
    private activeViewSidebarStateSubs;
    private readonly slot2ButtonState;
    private readonly slot3ButtonState;
    private readonly slot4ButtonState;
    private readonly pfdDisplayPaneSettings;
    private readonly mfdLeftDisplayPaneSettings;
    private readonly mfdRightDisplayPaneSettings;
    private readonly selectedPane;
    private readonly casMasterCautionActive;
    private readonly casMasterWarningActive;
    private readonly casMasterAlertState;
    private isMessageButtonFlashing;
    private readonly slot3ButtonHighlight;
    private lastSlot3ButtonTransitionTime;
    /** @inheritDoc */
    onAfterRender(): void;
    /**
     * Responds to when the active view changes.
     * @param view The new active view.
     */
    private onActiveViewChanged;
    /**
     * Updates the state of this button bar's slot 3 button.
     */
    private updateSlot3ButtonState;
    /**
     * Updates the state of this button bar's slot 4 button.
     */
    private updateSlot4ButtonState;
    /**
     * Updates this button bar.
     * @param time The current real (operating system) time, as a Javascript timestamp.
     */
    private update;
    /**
     * Updates the flashing animation of this button bar's slot 3 button.
     * @param time The current real (operating system) time, as a Javascript timestamp.
     */
    private updateSlot3ButtonFlash;
    private onSlot4ButtonPressed;
    /** @inheritDoc */
    render(): VNode;
}
//# sourceMappingURL=ButtonBar.d.ts.map