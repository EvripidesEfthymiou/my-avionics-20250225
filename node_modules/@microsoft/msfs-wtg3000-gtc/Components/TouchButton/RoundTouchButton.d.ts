import { DisplayComponent, SetSubject, Subscription, VNode } from '@microsoft/msfs-sdk';
import { TouchButton, TouchButtonProps } from '@microsoft/msfs-garminsdk';
import { GtcOrientation } from '@microsoft/msfs-wtg3000-common';
import './RoundTouchButton.css';
/** Component props for RoundTouchButton */
export interface RoundButtonProps extends TouchButtonProps {
    /** Whether the button is to be used in the vertical or horizontal orientation. */
    orientation: GtcOrientation;
}
/** A round numpad button that uses up- and down-state background images. */
export declare class RoundTouchButton extends DisplayComponent<RoundButtonProps> {
    protected static readonly RESERVED_CSS_CLASSES: Set<string>;
    protected readonly buttonRef: import("@microsoft/msfs-sdk").NodeReference<TouchButton<TouchButtonProps>>;
    protected readonly cssClassSet: SetSubject<string>;
    protected cssClassSub?: Subscription;
    /**
     * Simulates this button being pressed. This will execute the `onPressed()` callback if one is defined.
     * @param ignoreDisabled Whether to simulate the button being pressed regardless of whether the button is disabled.
     * Defaults to `false`.
     */
    simulatePressed(ignoreDisabled?: boolean): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=RoundTouchButton.d.ts.map