import { EventBus, UserSettingManager } from '@microsoft/msfs-sdk';
import { ControllableDisplayPaneIndex, DisplayPaneIndex, GtcIndex } from '@microsoft/msfs-wtg3000-common';
/** A type of DataField to display in the right most column on the flight plan page. */
export declare enum FlightPlanDataFieldType {
    CUM_CumulativeDistance = "CUM",
    DIS_Distance = "DIS",
    DTK_DesiredTrack = "DTK",
    ESA_EnrouteSafeAltitude = "ESA",
    ETA_EstTimeOfArrival = "ETA",
    ETE_EstTimeEnroute = "ETE",
    FUEL_FuelToDestination = "FUEL"
}
/**
 * GTC user settings aliased by instrument.
 */
type GtcInstrumentAliasedUserSettingTypes = {
    /** The data to show for data field 1. */
    flightPlanDataField1: FlightPlanDataFieldType;
    /** The data to show for data field 2. */
    flightPlanDataField2: FlightPlanDataFieldType;
    /** Whether to sort the airway exits alphabetically or not. */
    airwaySelectionSortAZ: boolean;
    /** When true, new airways will load collapsed, if false they will load expanded. */
    loadNewAirwaysCollapsed: boolean;
};
/**
 * GTC user settings aliased by display pane.
 */
type GtcDisplayPaneAliasedUserSettingTypes = {
    /** Whether to show the flight plan preview. */
    gtcShowFlightPlanPreview: boolean;
};
/**
 * True display pane-indexed GTC user settings.
 */
type GtcDisplayPaneIndexedUserSettingTypes<Index extends ControllableDisplayPaneIndex> = {
    [Name in keyof GtcDisplayPaneAliasedUserSettingTypes as `${Name}${Index}`]: GtcDisplayPaneAliasedUserSettingTypes[Name];
};
/**
 * Non-instrument-indexed GTC user settings.
 */
type GtcNonInstrumentIndexedUserSettingTypes = GtcDisplayPaneIndexedUserSettingTypes<DisplayPaneIndex.LeftPfd> & GtcDisplayPaneIndexedUserSettingTypes<DisplayPaneIndex.LeftMfd> & GtcDisplayPaneIndexedUserSettingTypes<DisplayPaneIndex.RightMfd> & GtcDisplayPaneIndexedUserSettingTypes<DisplayPaneIndex.RightPfd>;
/**
 * True instrument-indexed GTC user settings.
 */
type GtcInstrumentIndexedUserSettingTypes<Index extends GtcIndex> = {
    [Name in keyof GtcInstrumentAliasedUserSettingTypes as `${Name}_${Index}`]: GtcAliasedUserSettingTypes[Name];
};
/**
 * Aliased GTC user settings.
 */
export type GtcAliasedUserSettingTypes = GtcInstrumentAliasedUserSettingTypes & GtcNonInstrumentIndexedUserSettingTypes;
/**
 * All true GTC user settings.
 */
export type GtcAllUserSettingTypes = GtcInstrumentIndexedUserSettingTypes<GtcIndex> & GtcNonInstrumentIndexedUserSettingTypes;
/**
 * Utility class for retrieving GTC user setting managers.
 */
export declare class GtcUserSettings {
    private static readonly INDEXED_SETTING_NAMES;
    private static masterInstance?;
    private static readonly aliasedInstances;
    /**
     * Retrieves a manager for all true GTC settings.
     * @param bus The event bus.
     * @returns A manager for all true GTC settings.
     */
    static getMasterManager(bus: EventBus): UserSettingManager<GtcAllUserSettingTypes>;
    /**
     * Retrieves a manager for aliased GTC settings for a single GTC.
     * @param bus The event bus.
     * @param index The index of the GTC.
     * @returns A manager for aliased GTC settings for the specified GTC.
     */
    static getAliasedManager<Index extends GtcIndex>(bus: EventBus, index: Index): UserSettingManager<GtcAliasedUserSettingTypes>;
    /**
     * Gets an array of definitions for true GTC settings for a single GTC.
     * @param index The index of the display pane.
     * @returns An array of definitions for true GTC settings for the specified GTC.
     */
    private static getIndexedSettingDefs;
    /**
     * Gets an array of definitions for non-indexed GTC settings.
     * @returns An array of definitions for non-indexed GTC settings.
     */
    private static getNonIndexedSettingDefs;
    /**
     * Gets the default values for a full set of aliased indexed GTC settings.
     * @returns The default values for a full set of aliased indexed GTC settings.
     */
    private static getIndexedDefaultValues;
    /**
     * Gets the default values for all non-indexed GTC settings.
     * @returns The default values for all non-indexed GTC settings.
     */
    private static getNonIndexedDefaultValues;
    /**
     * Gets a setting name alias mapping for a GTC.
     * @param index The index of the GTC.
     * @returns A setting name alias mapping for the specified GTC.
     */
    private static getAliasMap;
}
export {};
//# sourceMappingURL=GtcUserSettings.d.ts.map