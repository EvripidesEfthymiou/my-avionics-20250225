import { VNode } from '@microsoft/msfs-sdk';
import { AuralAlertsConfig, EspConfig, HorizonDirectorCueOption, TouchdownCalloutsConfig } from '@microsoft/msfs-wtg3000-common';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
import './GtcAvionicsSettingsPage.css';
/**
 * Component props for GtcAvionicsSettingsPage.
 */
export interface GtcAvionicsSettingsPageProps extends GtcViewProps {
    /** PFD horizon display flight director cue style support. */
    horizonDirectorCueOption: HorizonDirectorCueOption;
    /** An aural alerts configuration object. */
    auralAlertsConfig: AuralAlertsConfig;
    /**
     * A touchdown callouts configuration object. If not defined, then the page will not support user configuration of
     * touchdown callout alerts.
     */
    touchdownCalloutsConfig?: TouchdownCalloutsConfig;
    /** An ESP configuration object. If not defined, then the page will not support user configuration of ESP settings. */
    espConfig?: EspConfig;
}
/**
 * A GTC avionics settings page.
 */
export declare class GtcAvionicsSettingsPage extends GtcView<GtcAvionicsSettingsPageProps> {
    private static readonly DATE_TIME_FORMAT_SETTING_MAP;
    private static readonly DATE_FORMATTER;
    private readonly timeDisplayRef;
    private readonly tabContainerRef;
    private readonly simTime;
    private readonly dateTimeSettingManager;
    private readonly dateTimeFormat;
    private readonly time;
    private readonly dateTimeOffset;
    private readonly dateTime;
    private readonly listItemHeight;
    private readonly listItemSpacing;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritDoc */
    onOpen(): void;
    /** @inheritdoc */
    onResume(): void;
    /** @inheritdoc */
    onPause(): void;
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders this page's date/time header.
     * @returns This page's date/time header, as a VNode.
     */
    private renderHeader;
    /**
     * Renders a settings tab for this page's tab container.
     * @param position The position of the tab.
     * @param label The tab label.
     * @param renderContent A function which renders the tab contents.
     * @returns A settings tab for this page's tab container, as a VNode.
     */
    private renderTab;
    /**
     * Renders the system tab.
     * @param contentRef A reference to assign to the tab's content.
     * @param sidebarState The sidebar state to use.
     * @returns The sensor tab, as a VNode.
     */
    private renderSystemTab;
    /**
     * Renders the units tab.
     * @param contentRef A reference to assign to the tab's content.
     * @param sidebarState The sidebar state to use.
     * @returns The units tab, as a VNode.
     */
    private renderUnitsTab;
    /**
     * Renders the alerts tab.
     * @param contentRef A reference to assign to the tab's content.
     * @param sidebarState The sidebar state to use.
     * @returns The alerts tab, as a VNode.
     */
    private renderAlertsTab;
    /**
     * Renders the MFD data fields tab.
     * @param contentRef A reference to assign to the tab's content.
     * @param sidebarState The sidebar state to use.
     * @returns The MFD data fields tab, as a VNode.
     */
    private renderMfdFieldsTab;
    /**
     * Renders the audio tab.
     * @param contentRef A reference to assign to the tab's content.
     * @param sidebarState The sidebar state to use.
     * @returns The audio tab, as a VNode.
     */
    private renderAudioTab;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcAvionicsSettingsPage.d.ts.map