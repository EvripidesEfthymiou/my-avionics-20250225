import { ComponentProps, DisplayComponent, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { GtcInteractionEvent } from '../../GtcService/GtcInteractionEvent';
import { GtcService } from '../../GtcService/GtcService';
import { SidebarState } from '../../GtcService/Sidebar';
import { GtcAvionicsSettingsPageTabContent } from './GtcAvionicsSettingsPageTabContent';
/**
 * Component props for GtcAvionicsSettingsPageUnitsList.
 */
export interface GtcAvionicsSettingsPageUnitsListProps extends ComponentProps {
    /** The GTC service. */
    gtcService: GtcService;
    /** The height of each list item, in pixels. */
    listItemHeight: number;
    /** The spacing between each list item, in pixels. */
    listItemSpacing: number;
    /** The SidebarState to use. */
    sidebarState?: SidebarState | Subscribable<SidebarState | null>;
}
/**
 * A GTC avionics setting page units settings list.
 */
export declare class GtcAvionicsSettingsPageUnitsList extends DisplayComponent<GtcAvionicsSettingsPageUnitsListProps> implements GtcAvionicsSettingsPageTabContent {
    private readonly listRef;
    private readonly unitsSettingManager;
    private readonly magVar;
    /**
     * Coerce the weight unit to equal the fuel unit, if the fuel unit selected is weight-based rather than volumetric.
     * @param value The fuel unit selected.
     * @param state The current fuel unit.
     */
    private coerceWeightUnitToFuelUnit;
    /**
     * Coerce the fuel unit to equal the weight unit, even when the current weight unit is reselected.
     * @param value The weight unit selected.
     * @param state The current weight unit.
     */
    private coerceFuelUnitToWeightUnit;
    /** @inheritdoc */
    onGtcInteractionEvent(event: GtcInteractionEvent): boolean;
    /** @inheritdoc */
    onPause(): void;
    /** @inheritdoc */
    onResume(): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcAvionicsSettingsPageUnitsList.d.ts.map