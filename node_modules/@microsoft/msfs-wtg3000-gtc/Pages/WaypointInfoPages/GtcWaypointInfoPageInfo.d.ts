import { ComponentProps, DisplayComponent, LatLonInterface, NavAngleUnit, NavAngleUnitFamily, NumberUnitInterface, Subscribable, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import './GtcWaypointInfoPageInfo.css';
/**
 * Component props for GtcWaypointInfoPageInfo.
 */
export interface GtcWaypointInfoPageInfoProps extends ComponentProps {
    /** The city associated with the waypoint. If not defined, the city field will not be displayed. */
    city?: Subscribable<string | undefined>;
    /** The region in which the waypoint is located. */
    region: Subscribable<string | undefined>;
    /** The location of the waypoint. */
    location: Subscribable<LatLonInterface>;
    /** The true bearing from the airplane's current position to the waypoint, or `NaN` if the bearing cannot be determined. */
    bearing: Subscribable<NumberUnitInterface<NavAngleUnitFamily, NavAngleUnit>>;
    /**
     * The bearing from the airplane's current position to the waypoint, relative to the airplane's current heading, in
     * degrees, or `NaN` if the bearing cannot be determined.
     */
    relativeBearing: Subscribable<number>;
    /** The distance from the airplane's current position to the waypoint, or `NaN` if the distance cannot be determined. */
    distance: Subscribable<NumberUnitInterface<UnitFamily.Distance>>;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
}
/**
 *
 */
export declare class GtcWaypointInfoPageInfo extends DisplayComponent<GtcWaypointInfoPageInfoProps> {
    private static readonly BEARING_FORMATTER;
    private static readonly DISTANCE_FORMATTER;
    private thisNode?;
    private readonly cityText;
    private readonly regionText;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcWaypointInfoPageInfo.d.ts.map