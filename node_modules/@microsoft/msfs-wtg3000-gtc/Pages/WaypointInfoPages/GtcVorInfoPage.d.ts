import { FacilitySearchType, FacilityWaypoint, IcaoValue, MutableSubscribable, VNode, VorFacility } from '@microsoft/msfs-sdk';
import { GtcWaypointInfoPage, GtcWaypointInfoPageProps } from './GtcWaypointInfoPage';
import './GtcVorInfoPage.css';
/**
 * Component props for GtcVorInfoPage.
 */
export interface GtcVorInfoPageProps extends GtcWaypointInfoPageProps {
    /** A mutable subscribable from and to which to sync the page's selected VOR waypoint. */
    selectedVor: MutableSubscribable<FacilityWaypoint<VorFacility> | null>;
}
/**
 * GTC view keys for popups owned by VOR information pages.
 */
declare enum GtcVorInfoPagePopupKeys {
    Options = "VorInfoOptions"
}
/**
 * A GTC VOR information page.
 */
export declare class GtcVorInfoPage extends GtcWaypointInfoPage<FacilitySearchType.Vor, GtcVorInfoPageProps> {
    private static readonly CLASS_TEXT;
    private static readonly TYPE_TEXT;
    private static readonly FREQ_FORMATTER;
    protected readonly waypointSelectType = FacilitySearchType.Vor;
    protected readonly optionsPopupKey = GtcVorInfoPagePopupKeys.Options;
    private readonly infoRef;
    private readonly classText;
    private readonly typeText;
    private readonly magVar;
    private readonly freqText;
    private initSelectionOpId;
    private selectedVorPipeOut?;
    /** @inheritdoc */
    onAfterRender(): void;
    /**
     * Initializes this page's VOR selection.
     * @param facility The VOR facility to select, or its ICAO. If not defined, the selection will be initialized to the
     * most recently selected VOR.
     */
    initSelection(facility?: VorFacility | IcaoValue): Promise<void>;
    /** @inheritdoc */
    onOpen(): void;
    /** @inheritdoc */
    onClose(): void;
    /** @inheritdoc */
    protected getCssClass(): string;
    /** @inheritdoc */
    protected renderContent(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
export {};
//# sourceMappingURL=GtcVorInfoPage.d.ts.map