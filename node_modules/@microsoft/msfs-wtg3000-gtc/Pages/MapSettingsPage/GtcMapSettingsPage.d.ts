import { VNode } from '@microsoft/msfs-sdk';
import { TerrainSystemStateDataProvider } from '@microsoft/msfs-garminsdk';
import { AvionicsConfig } from '@microsoft/msfs-wtg3000-common';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
import './GtcMapSettingsPage.css';
import './GtcMapSettingsPopups.css';
/**
 * Component props for GtcMapSettingsPage.
 */
export interface GtcMapSettingsPageProps extends GtcViewProps {
    /** The general avionics configuration object. */
    config: AvionicsConfig;
    /** A provider of terrain system state data. */
    terrainSystemStateDataProvider: TerrainSystemStateDataProvider;
}
/**
 * A GTC map settings page.
 */
export declare class GtcMapSettingsPage extends GtcView<GtcMapSettingsPageProps> {
    private static readonly PANE_TEXT;
    private thisNode?;
    private readonly tabContainerRef;
    private readonly displayPaneIndex;
    private readonly allPaneIndexes;
    private readonly onsidePaneIndexes;
    private readonly unitsSettingManager;
    private readonly allMapSettingManagers;
    private readonly onsideMapSettingManagers;
    private readonly mapReadSettingManager;
    private readonly mapWriteSettingManagers;
    private readonly onsideMapSyncSetting;
    private readonly crossSideMapSyncSetting;
    private readonly mapRangeArray;
    private readonly listItemHeight;
    private syncSub?;
    /**
     * Constructor.
     * @param props This component's props.
     * @throws Error if a display pane index is not defined for this view.
     */
    constructor(props: GtcMapSettingsPageProps);
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    onOpen(): void;
    /** @inheritdoc */
    onClose(): void;
    /** @inheritdoc */
    onResume(): void;
    /** @inheritdoc */
    onPause(): void;
    /**
     * Writes a value to a map user setting, taking into account the current map setting sync mode.
     * @param settingName The name of the setting to which to write.
     * @param value The value to write.
     */
    private writeToSetting;
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders the left column (orientation, sync, and detail buttons).
     * @returns The left column, as a VNode.
     */
    private renderLeftColumn;
    /**
     * Renders a settings tab for this page's right-side settings tab container.
     * @param position The position of the tab.
     * @param label The tab label.
     * @param renderContent A function which renders the tab contents.
     * @returns A settings tab for this page's right-side settings tab container, as a VNode.
     */
    private renderTab;
    /**
     * Renders the sensor tab.
     * @param listRef A reference to assign to the tab's list.
     * @param sidebarState The sidebar state to use.
     * @returns The sensor tab, as a VNode.
     */
    private renderSensorTab;
    /**
     * Renders the inset window tab.
     * @param listRef A reference to assign to the tab's list.
     * @param sidebarState The sidebar state to use.
     * @returns The inset window tab, as a VNode.
     */
    private renderInsetTab;
    /**
     * Renders the aviation tab.
     * @param listRef A reference to assign to the tab's list.
     * @param sidebarState The sidebar state to use.
     * @returns The aviation tab, as a VNode.
     */
    private renderAviationTab;
    /**
     * Renders the other tab.
     * @param listRef A reference to assign to the tab's list.
     * @param sidebarState The sidebar state to use.
     * @returns The other tab, as a VNode.
     */
    private renderOtherTab;
    /**
     * Renders the onside setting sync initialization popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The onside setting sync initialization popup, as a VNode.
     */
    private renderSettingSyncOnsideInitPopup;
    /**
     * Renders the all setting sync initialization popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The all setting sync initialization popup, as a VNode.
     */
    private renderSettingSyncAllInitPopup;
    /**
     * Renders the detail settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The detail settings popup, as a VNode.
     */
    private renderDetailSettingsPopup;
    /**
     * Renders the traffic settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The traffic settings popup, as a VNode.
     */
    private renderTrafficSettingsPopup;
    /**
     * Renders the terrain settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The terrain settings popup, as a VNode.
     */
    private renderTerrainSettingsPopup;
    /**
     * Renders the airspace settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The airspace settings popup, as a VNode.
     */
    private renderAirspaceSettingsPopup;
    /**
     * Renders the airport settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The airport settings popup, as a VNode.
     */
    private renderAirportSettingsPopup;
    /**
     * Renders the VOR settings popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns The VOR settings popup, as a VNode.
     */
    private renderVorSettingsPopup;
    /**
     * Renders a map range select button.
     * @param settingName The name of the setting to which to bind the button.
     * @param startIndex The index of the lowest selectable range, inclusive.
     * @param endIndex The index of the highest selectable range, inclusive.
     * @param isInList Whether the button is in a scrollable list.
     * @param label The button's label.
     * @param title The title of the selection list dialog.
     * @param buttonCssClass CSS class(es) to apply to the button's root element.
     * @param dialogCssClass CSS class(es) to apply to the selection list dialog.
     * @param ref A reference to which to assign the rendered button.
     * @returns A map range selection button, as a VNode.
     */
    private renderRangeSelectButton;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcMapSettingsPage.d.ts.map