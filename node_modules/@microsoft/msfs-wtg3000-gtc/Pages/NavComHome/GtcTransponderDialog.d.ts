import { VNode } from '@microsoft/msfs-sdk';
import { GtcDialogResult, GtcDialogView } from '../../Dialog/GtcDialogView';
import { GtcInteractionEvent } from '../../GtcService/GtcInteractionEvent';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
import '../../Components/TouchButton/NumPadTouchButton.css';
import './GtcTransponderDialog.css';
/** Transponder dialog layouts */
export type TransponderDialogLayout = 'MODE_AND_CODE' | 'CODE_ONLY';
/** Component props for the Transponder dialog. */
export interface GtcTransponderDialogProps extends GtcViewProps {
    /** Which layout version to display. */
    layout: TransponderDialogLayout;
}
/**
 * A GTC dialog which allows the user to select a transponder code and optionally a transponder mode.
 */
export declare class GtcTransponderDialog extends GtcView<GtcTransponderDialogProps> implements GtcDialogView<number, number> {
    private thisNode?;
    private readonly inputRef;
    private readonly controlPublisher;
    private readonly xpdrMode;
    private activeTransponder;
    private readonly xpdrCodeValue;
    private readonly isXpdrCodeValueValid;
    protected resolveFunction?: (value: any) => void;
    protected resultObject: GtcDialogResult<number>;
    private isAlive;
    private xpdrModeSub?;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    private onIdentPressed;
    /** Handles transponder VFR button presses */
    private onVFRPressed;
    /** @inheritdoc */
    request(input: number): Promise<GtcDialogResult<number>>;
    /** @inheritdoc */
    onGtcInteractionEvent(event: GtcInteractionEvent): boolean;
    /**
     * Validates the currently selected value, and if valid sets the value to be returned for the currently pending
     * request and closes this dialog.
     */
    protected submitDialog(): Promise<void>;
    /** Clears this dialog's pending request and resolves the pending request Promise if one exists. */
    protected cleanupRequest(): void;
    /** @inheritDoc */
    onOpen(): void;
    /** @inheritDoc */
    onClose(): void;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcTransponderDialog.d.ts.map