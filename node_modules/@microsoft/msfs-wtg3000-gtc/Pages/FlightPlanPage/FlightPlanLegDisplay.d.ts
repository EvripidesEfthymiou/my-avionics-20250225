import { ComponentProps, DisplayComponent, VNode } from '@microsoft/msfs-sdk';
import { Fms, GarminFacilityWaypointCache } from '@microsoft/msfs-garminsdk';
import { FlightPlanLegListData } from '@microsoft/msfs-wtg3000-common';
import { GtcService } from '../../GtcService/GtcService';
import './FlightPlanLegDisplay.css';
/** The props for {@link FlightPlanLegDisplay}. */
export interface FlightPlanLegDisplayProps extends ComponentProps {
    /** The leg list item data. */
    legListData: FlightPlanLegListData;
    /** The FMS. */
    fms: Fms;
    /** The waypoint cache to use. */
    waypointCache: GarminFacilityWaypointCache;
    /** The GtcService. */
    gtcService: GtcService;
}
/** A component that wraps list item content for use with GtcList. */
export declare class FlightPlanLegDisplay extends DisplayComponent<FlightPlanLegDisplayProps> {
    private readonly waypointIconRef;
    private readonly numberUnitDisplayRef;
    private readonly unitsSettingManager;
    private readonly waypoint;
    private readonly superLabelBefore;
    private readonly superLabelAfter;
    private readonly subLabel;
    private readonly subs;
    /** @inheritdoc */
    onAfterRender(): Promise<void>;
    /** Updates the super label. */
    private updateSuperLabel;
    /** Updates the sub label. */
    private updateSubLabel;
    /**
     * Get the facility string for the facility item.
     * @param facility The facility.
     * @returns The facility string for the facility.
     */
    private getFacilityString;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=FlightPlanLegDisplay.d.ts.map