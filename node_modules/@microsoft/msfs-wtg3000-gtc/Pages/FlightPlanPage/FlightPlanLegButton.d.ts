import { DisplayComponent, VNode, MutableSubscribable } from '@microsoft/msfs-sdk';
import { FlightPlanLegListData, SelectableFlightPlanListData } from '@microsoft/msfs-wtg3000-common';
import { GtcService } from '../../GtcService/GtcService';
import { FlightPlanLegDisplayProps } from './FlightPlanLegDisplay';
import './FlightPlanLegButton.css';
/** The props for {@link FlightPlanLegButton}. */
export interface FlightPlanLegButtonProps extends FlightPlanLegDisplayProps {
    /** The leg list item data. */
    legListData: FlightPlanLegListData;
    /** The GtcService. */
    gtcService: GtcService;
    /** Whether this is the direct to random leg. */
    isDirectToRandom?: boolean;
    /**
     * A mutable subscribable which controls the selected list data. If not defined, pressing the button will not cause
     * its list data to become selected or unselected.
     */
    selectedListData?: MutableSubscribable<SelectableFlightPlanListData | null>;
}
/** A component that wraps list item content for use with GtcList. */
export declare class FlightPlanLegButton extends DisplayComponent<FlightPlanLegButtonProps> {
    private readonly touchButtonRef;
    private readonly legDisplayRef;
    private readonly altitudeDisplayRef;
    private readonly isSelected;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=FlightPlanLegButton.d.ts.map