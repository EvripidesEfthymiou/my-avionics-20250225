import { VNode, MutableSubscribable, Subject, MappedSubject, Subscription } from '@microsoft/msfs-sdk';
import { SelectableFlightPlanListData } from '@microsoft/msfs-wtg3000-common';
import { GtcViewEntry } from '../../GtcService/GtcService';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
/**
 * Component props for GtcFlightPlanPageSlideoutMenu.
 */
export interface GtcFlightPlanPageSlideoutMenuProps extends GtcViewProps {
    /**
     * A mutable subscribable which controls the selected list data. If not defined, pressing the list item's leg button
     * will not cause its list data to become selected or unselected.
     */
    selectedListData: MutableSubscribable<SelectableFlightPlanListData | null>;
}
/** OriginOptionsSlideoutMenu. */
export declare abstract class GtcFlightPlanPageSlideoutMenu<Data extends SelectableFlightPlanListData, P extends GtcFlightPlanPageSlideoutMenuProps = GtcFlightPlanPageSlideoutMenuProps> extends GtcView<P> {
    protected static readonly CLOSE_MENU_SELECTOR: (steps: number, stackPeeker: (depth: number) => GtcViewEntry<GtcView<GtcViewProps>> | undefined) => boolean;
    private thisNode?;
    protected readonly listItemData: Subject<Data | null>;
    protected readonly isListDataSelected: MappedSubject<[SelectableFlightPlanListData | null, Data | null], boolean>;
    protected closeWhenUnselectedSub?: Subscription;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /**
     * Pass initial list item data to use.
     * @param listItemData The list item data.
     */
    setData(listItemData: Data): void;
    /** @inheritdoc */
    onResume(): void;
    /** @inheritdoc */
    onClose(): void;
    /**
     * Closes this menu to end up on the flight plan page.
     */
    protected closeMenu(): void;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcFlightPlanPageSlideoutMenu.d.ts.map