import { DisplayComponent, Subscribable, UserSetting, VNode } from '@microsoft/msfs-sdk';
import { FmsSpeedClimbSchedule, FmsSpeedCruiseSchedule, FmsSpeedDescentSchedule } from '@microsoft/msfs-wtg3000-common';
import { GtcTouchButtonProps } from '../../Components/TouchButton/GtcTouchButton';
import { GtcService } from '../../GtcService/GtcService';
import './GtcAdvancedVnavSpeedButton.css';
import './GtcAdvancedVnavScheduleButton.css';
/**
 * Component props for GtcAdvancedVnavScheduleButton.
 */
export interface GtcAdvancedVnavScheduleButtonProps extends Omit<GtcTouchButtonProps, 'label' | 'isHighlighted' | 'gtcOrientation'> {
    /** The GTC service. */
    gtcService: GtcService;
    /** The label for the button. */
    label: string;
    /** The user setting for the name of the selected performance schedule controlled by the button. */
    schedule: Subscribable<FmsSpeedClimbSchedule | FmsSpeedCruiseSchedule | FmsSpeedDescentSchedule>;
    /** The user setting for the IAS value of the selected performance schedule controlled by the button. */
    iasSetting: UserSetting<number>;
    /** The user setting for the mach value of the selected performance schedule controlled by the button. */
    machSetting: UserSetting<number>;
    /**
     * The user setting for the flight path angle of the selected performance schedule controlled by the button. If not
     * defined, a flight path angle will not be displayed.
     */
    fpaSetting?: UserSetting<number>;
}
/**
 * A GTC touchscreen button which displays a VNAV performance schedule.
 */
export declare class GtcAdvancedVnavScheduleButton extends DisplayComponent<GtcAdvancedVnavScheduleButtonProps> {
    private static readonly ROOT_CSS_CLASSES;
    private static readonly RESERVED_CSS_CLASSES;
    private static readonly PARAMS_CSS_CLASSES;
    private readonly paramsCssClass;
    private readonly iasText;
    private readonly machText;
    private readonly fpaText;
    private cssClassSub?;
    private scheduleSub?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcAdvancedVnavScheduleButton.d.ts.map