import { AirportFacility, FlightPathCalculator, LegDefinition, NodeReference, Subject, SubscribableArray, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { Fms } from '@microsoft/msfs-garminsdk';
import { ControllableDisplayPaneIndex, DisplayPaneControlEvents, DisplayPaneSettings, G3000NearestContext, FlightPlanStore, ProcedurePreviewPaneProcData, ProcedurePreviewPaneViewEventTypes } from '@microsoft/msfs-wtg3000-common';
import { GtcList } from '../../Components/List';
import { GtcListDialogParams } from '../../Dialog/GtcListDialog';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
import { SidebarState } from '../../GtcService/Sidebar';
import { GtcProcedurePreviewMode } from './GtcProcedurePreviewMode';
/**
 * The properties for the GtcDeparturePage component.
 */
export interface GtcProcedureSelectionPageProps extends GtcViewProps {
    /** An instance of the Fms. */
    fms: Fms;
    /** Which flight plan index to work with. */
    planIndex: number;
    /** The flight plan store. */
    store: FlightPlanStore;
    /** The calculator to use for generating previews. */
    calculator: FlightPathCalculator;
}
/** Base class for the 3 procedure selection pages. */
export declare abstract class GtcProcedureSelectionPage<P extends GtcProcedureSelectionPageProps = GtcProcedureSelectionPageProps> extends GtcView<P> {
    protected static readonly PREVIEW_MODE_TEXT: {
        Off: string;
        Map: string;
        Chart: string;
    };
    protected readonly publisher: import("@microsoft/msfs-sdk").Publisher<DisplayPaneControlEvents<ProcedurePreviewPaneViewEventTypes>>;
    protected readonly displayPaneIndex: ControllableDisplayPaneIndex;
    protected readonly displayPaneSettings: UserSettingManager<DisplayPaneSettings>;
    protected readonly fms: Fms<any>;
    protected readonly store: FlightPlanStore;
    protected readonly selectedAirport: Subject<AirportFacility | undefined>;
    protected readonly previewMode: Subject<GtcProcedurePreviewMode>;
    protected readonly previewData: Subject<ProcedurePreviewPaneProcData | null>;
    protected readonly canPreview: import("@microsoft/msfs-sdk").MappedSubscribable<boolean>;
    protected readonly listParams: Partial<GtcListDialogParams<any>>;
    private readonly waypointCache;
    protected nearestContext?: G3000NearestContext;
    private previewModeSub?;
    /**
     * Constructor.
     * @param props This component's props.
     * @throws Error if a display pane index is not defined for this view.
     */
    constructor(props: P);
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    onOpen(): void;
    /** @inheritdoc */
    onClose(): void;
    /**
     * Sends procedure preview data to the display pane controlled by this page.
     * @param data The data to send.
     */
    protected sendProcedurePreviewData(data: ProcedurePreviewPaneProcData): void;
    /**
     * Renders the airport select button.
     * @param onAirportSelected Airport selected handler.
     * @returns The airport button.
     */
    protected renderAirportButton(onAirportSelected: () => void): VNode;
    /**
     * Renders the preview button.
     * @returns The preview button.
     */
    protected renderPreviewButton(): VNode;
    /**
     * Renders the sequence box.
     * @param listRef The list ref.
     * @param sidebarState The sidebar state for the view.
     * @param sequence The sequence.
     * @returns The rendered sequence box.
     */
    protected renderSequenceBox(listRef: NodeReference<GtcList<any>>, sidebarState: SidebarState, sequence: SubscribableArray<LegDefinition>): VNode;
    /**
     * Renders a leg for the sequence box.
     * @param leg The leg.
     * @returns The leg VNode.
     */
    private readonly renderLeg;
}
//# sourceMappingURL=GtcProcedureSelectionPage.d.ts.map