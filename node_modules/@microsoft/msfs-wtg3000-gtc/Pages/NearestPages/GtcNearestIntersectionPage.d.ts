import { FacilityType, FacilityWaypoint, IntersectionFacility, NearestSubscription, VNode } from '@microsoft/msfs-sdk';
import { ControllableDisplayPaneIndex, G3000NearestContext, NearestPaneSelectionType, NearestWaypointEntry } from '@microsoft/msfs-wtg3000-common';
import { GtcControlMode, GtcService } from '../../GtcService/GtcService';
import { GtcNearestWaypointPage } from './GtcNearestWaypointPage';
/**
 * GTC view keys for popups owned by nearest intersection pages.
 */
declare enum GtcNearestIntersectionPagePopupKeys {
    Options = "NearestIntersectionOptions"
}
/**
 * A GTC nearest intersection page.
 */
export declare class GtcNearestIntersectionPage extends GtcNearestWaypointPage<FacilityType.Intersection> {
    /** @inheritdoc */
    protected readonly optionsPopupKey = GtcNearestIntersectionPagePopupKeys.Options;
    /** @inheritdoc */
    protected readonly showOnMapType = NearestPaneSelectionType.Intersection;
    /** @inheritdoc */
    protected getNearestSubscription(context: G3000NearestContext): NearestSubscription<IntersectionFacility>;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    protected getCssClass(): string;
    /** @inheritdoc */
    protected getHeaderTypeLabel(): string;
    /** @inheritdoc */
    protected renderAdditionalHeaderColumns(): VNode | null;
    /** @inheritdoc */
    protected renderListItem(data: NearestWaypointEntry<FacilityWaypoint<IntersectionFacility>>): VNode;
    /**
     * Renders this page's options popup.
     * @param gtcService The GTC service.
     * @param controlMode The control mode to which the popup belongs.
     * @param displayPaneIndex The index of the display pane associated with the popup.
     * @returns This page's options popup, as a VNode.
     */
    protected renderOptionsPopup(gtcService: GtcService, controlMode: GtcControlMode, displayPaneIndex?: ControllableDisplayPaneIndex): VNode;
}
export {};
//# sourceMappingURL=GtcNearestIntersectionPage.d.ts.map