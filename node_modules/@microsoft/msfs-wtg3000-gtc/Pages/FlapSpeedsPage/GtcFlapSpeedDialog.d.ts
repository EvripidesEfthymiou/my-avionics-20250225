import { NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../../Components/NumberInput/NumberInput';
import { GtcNumberDialogInput } from '../../Dialog/AbstractGtcNumberDialog';
import { AbstractSimpleGtcNumberDialog } from '../../Dialog/AbstractSimpleGtcNumberDialog';
import './GtcFlapSpeedDialog.css';
/**
 * A request input for {@link GtcFlapSpeedDialog}.
 */
export interface GtcFlapSpeedDialogInput extends GtcNumberDialogInput {
    /** The name of the flap speed for which the request is made. */
    flapSpeedName: string;
    /** A function which gets the minimum valid value for the request. */
    minimumValue: () => number;
    /** A function which gets the maximum valid value for the request. */
    maximumValue: () => number;
}
/**
 * A pop-up dialog which allows the user to select an aircraft configuration speed limit ("flap speed").
 */
export declare class GtcFlapSpeedDialog extends AbstractSimpleGtcNumberDialog<GtcFlapSpeedDialogInput> {
    private minimumValue;
    private maximumValue;
    /** @inheritdoc */
    protected onRequest(input: GtcFlapSpeedDialogInput): number;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, valueToBind: Subject<number>, rootCssClassName: string | undefined): VNode;
}
//# sourceMappingURL=GtcFlapSpeedDialog.d.ts.map