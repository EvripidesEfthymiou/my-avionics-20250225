import { VNode } from '@microsoft/msfs-sdk';
import { WeatherRadarDefinition } from '@microsoft/msfs-wtg3000-common';
import { GtcView, GtcViewProps } from '../../GtcService/GtcView';
import './GtcWeatherRadarSettingsPage.css';
/**
 * Component props for {@link GtcWeatherRadarSettingsPage}.
 */
export interface GtcWeatherRadarSettingsPageProps extends GtcViewProps {
    /** Configuration options for the weather radar. */
    weatherRadarConfig: WeatherRadarDefinition;
}
/**
 * A GTC weather radar settings page.
 */
export declare class GtcWeatherRadarSettingsPage extends GtcView<GtcWeatherRadarSettingsPageProps> {
    private thisNode?;
    private readonly displayPaneIndex;
    private readonly radarSettingManager;
    private readonly gainSetting;
    private readonly bearingTiltLineButtonState;
    private readonly bearingTiltLineButtonLabel;
    private readonly gainSettingMin;
    private readonly gainSettingMax;
    private readonly gainSettingRange;
    private readonly gainSliderState;
    private readonly isGainSliderEnabled;
    private readonly isOnGround;
    private readonly isRadarScanActive;
    private gainSettingSub?;
    /**
     * Constructor.
     * @param props This component's props.
     * @throws Error if a display pane index is not defined for this view.
     */
    constructor(props: GtcWeatherRadarSettingsPageProps);
    /** @inheritDoc */
    onAfterRender(thisNode: VNode): void;
    /**
     * Responds to when the user selects an operating mode.
     * @param value The selected operating mode.
     * @param setting The operating mode user setting.
     */
    private onOperatingModeSelected;
    /**
     * Responds to when the value of the gain user setting changes.
     * @param gain The new gain user setting value, in dBZ.
     */
    private onGainSettingChanged;
    /**
     * Responds to when the gain slider's value changes from user input.
     * @param value The new value.
     */
    private onGainSliderValueChanged;
    /**
     * Increments the gain setting.
     * @param increment The increment to apply, in dBZ.
     */
    private incrementGain;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcWeatherRadarSettingsPage.d.ts.map