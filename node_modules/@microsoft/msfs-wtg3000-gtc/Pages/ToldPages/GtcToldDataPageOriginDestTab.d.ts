import { ComponentProps, DisplayComponent, MutableSubscribable, OneWayRunway, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { AirportWaypoint, GarminFacilityWaypointCache, UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { ToldUserSettingTypes } from '@microsoft/msfs-wtg3000-common';
import { GtcService } from '../../GtcService/GtcService';
import { GtcToldDataPageTabContent } from './GtcToldDataPageTabContent';
import '../../Components/TouchButton/GtcDirectoryButton.css';
import './GtcToldDataPageOriginDestTab.css';
/**
 * Component props for GtcToldDataPageOriginDestTab.
 */
export interface GtcToldDataPageOriginDestTabProps extends ComponentProps {
    /** The GTC service. */
    gtcService: GtcService;
    /** The cache from which to retrieve facility waypoints. */
    facWaypointCache: GarminFacilityWaypointCache;
    /** The selected airport. */
    selectedAirport: MutableSubscribable<AirportWaypoint | null>;
    /** The selected runway. */
    selectedRunway: MutableSubscribable<OneWayRunway | null>;
    /** A manager for TOLD performance calculation user settings. */
    toldSettingManager: UserSettingManager<ToldUserSettingTypes>;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
    /** Whether the tab is for the takeoff data page. */
    isTakeoff: boolean;
    /** Whether to render a version of the tab that supports performance calculations. */
    supportPerformance: boolean;
}
/**
 * A GTC TOLD (takeoff/landing) data page origin/destination tab.
 */
export declare class GtcToldDataPageOriginDestTab extends DisplayComponent<GtcToldDataPageOriginDestTabProps> implements GtcToldDataPageTabContent {
    private static readonly LENGTH_FORMATTER;
    private static readonly WEIGHT_FORMATTER;
    private thisNode?;
    private readonly settingString;
    private readonly requiredDistanceSetting;
    private readonly weightSetting;
    private readonly runways;
    private readonly runwayListItemHeightPx;
    private readonly runwayListItemSpacingPx;
    private readonly distanceRequired;
    private readonly weight;
    private distanceRequiredPipe?;
    private weightPipe?;
    /** @inheritDoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritDoc */
    onGtcInteractionEvent(): boolean;
    /** @inheritDoc */
    onPause(): void;
    /** @inheritDoc */
    onResume(): void;
    /**
     * Sends a command to the TOLD computer to load takeoff data into landing data for an emergency return.
     */
    private loadEmergencyReturn;
    /**
     * Opens a dialog chain to select this tab's distance required parameter.
     */
    private selectDistanceRequired;
    /** @inheritDoc */
    render(): VNode;
    /** @inheritDoc */
    destroy(): void;
}
//# sourceMappingURL=GtcToldDataPageOriginDestTab.d.ts.map