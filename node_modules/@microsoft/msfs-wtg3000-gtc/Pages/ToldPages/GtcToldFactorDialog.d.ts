import { MutableSubscribable, NodeReference, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../../Components/NumberInput/NumberInput';
import { GtcViewProps } from '../../GtcService/GtcView';
import { GtcNumberDialogInput } from '../../Dialog/AbstractGtcNumberDialog';
import { AbstractSimpleGtcNumberDialog } from '../../Dialog/AbstractSimpleGtcNumberDialog';
import './GtcToldFactorDialog.css';
/**
 * A request input for {@link GtcToldFactorDialog}.
 */
export interface GtcToldFactorDialogInput extends GtcNumberDialogInput {
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A dialog which allows the user to enter a takeoff/landing factor between 0.01 and 9.99 to a precision of 0.01. The
 * dialog operates in percent (so a dialog value of 100 corresponds to a factor of 1.00).
 */
export declare class GtcToldFactorDialog extends AbstractSimpleGtcNumberDialog<GtcToldFactorDialogInput> {
    private static readonly MAX_VALUE;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcToldFactorDialogInput): number;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected onDecimalPressed(): void;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, value: MutableSubscribable<number>, rootCssClassName: string | undefined): VNode;
}
//# sourceMappingURL=GtcToldFactorDialog.d.ts.map