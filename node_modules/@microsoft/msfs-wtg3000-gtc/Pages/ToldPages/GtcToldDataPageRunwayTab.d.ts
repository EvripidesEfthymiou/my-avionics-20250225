import { ComponentProps, DisplayComponent, MutableSubscribable, OneWayRunway, Subscribable, UserSettingManager, VNode } from '@microsoft/msfs-sdk';
import { AirportWaypoint, UnitsUserSettingManager } from '@microsoft/msfs-garminsdk';
import { ControllableDisplayPaneIndex, ToldUserSettingTypes } from '@microsoft/msfs-wtg3000-common';
import { GtcControlMode, GtcService } from '../../GtcService/GtcService';
import { GtcToldDataPageTabContent } from './GtcToldDataPageTabContent';
import './GtcToldDataPageRunwayTab.css';
/**
 * Component props for GtcToldDataPageRunwayTab.
 */
export interface GtcToldDataPageRunwayTabProps extends ComponentProps {
    /** The GTC service. */
    gtcService: GtcService;
    /** The GTC control mode to which the view belongs. */
    controlMode: GtcControlMode;
    /** The index of the display pane that this view is tied to. */
    displayPaneIndex?: ControllableDisplayPaneIndex;
    /** The selected origin airport. */
    selectedAirport: Subscribable<AirportWaypoint | null>;
    /** The selected origin runway. */
    selectedRunway: MutableSubscribable<OneWayRunway | null>;
    /** The magnetic variation, in degrees, at the selected runway or airport. */
    magVar: Subscribable<number>;
    /** A manager for TOLD performance calculation user settings. */
    toldSettingManager: UserSettingManager<ToldUserSettingTypes>;
    /** A manager for display units user settings. */
    unitsSettingManager: UnitsUserSettingManager;
    /** Whether the tab is for the takeoff data page. */
    isTakeoff: boolean;
}
/**
 * A GTC TOLD (takeoff/landing) data page runway tab.
 */
export declare class GtcToldDataPageRunwayTab extends DisplayComponent<GtcToldDataPageRunwayTabProps> implements GtcToldDataPageTabContent {
    private static readonly BEARING_FORMATTER;
    private static readonly LENGTH_FORMATTER;
    private static readonly ELEVATION_FORMATTER;
    private static readonly GRADIENT_FORMATTER;
    private static readonly MAX_ELEVATION_FEET;
    private static readonly MAX_ELEVATION_METERS;
    private thisNode?;
    private readonly settingString;
    private readonly lengthSetting;
    private readonly elevationSetting;
    private readonly headingSetting;
    private readonly gradientSetting;
    private readonly length;
    private readonly elevation;
    private readonly heading;
    private readonly gradient;
    private readonly canLoadRunway;
    private readonly canEditParameters;
    private magVarSub?;
    private lengthPipe?;
    private elevationPipe?;
    private headingPipe?;
    private gradientPipe?;
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    onGtcInteractionEvent(): boolean;
    /** @inheritdoc */
    onPause(): void;
    /** @inheritdoc */
    onResume(): void;
    /**
     * Loads database runway data into this tab's parameters.
     */
    private loadFromDatabase;
    /**
     * Removes the selected runway.
     */
    private removeRunway;
    /**
     * Opens a dialog chain to select this tab's runway length parameter.
     */
    private selectLength;
    /**
     * Opens a dialog chain to select this tab's runway elevation parameter.
     */
    private selectElevation;
    /**
     * Opens a dialog chain to select this tab's runway heading parameter.
     */
    private selectHeading;
    /**
     * Opens a dialog chain to select this tab's runway gradient parameter.
     */
    private selectGradient;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcToldDataPageRunwayTab.d.ts.map