import { FacilityLoader, FacilityRepository, IcaoValue, LatLonInterface, UserFacility, VNode } from '@microsoft/msfs-sdk';
import { GtcInteractionEvent } from '../GtcService/GtcInteractionEvent';
import { GtcView, GtcViewProps } from '../GtcService/GtcView';
import { GtcPositionHeadingDataProvider } from '../Navigation/GtcPositionHeadingDataProvider';
import { GtcUserWaypointEditController } from '../Navigation/GtcUserWaypointEditController';
import { GtcDialogResult, GtcDialogView } from './GtcDialogView';
import './GtcUserWaypointDialog.css';
/**
 * A request for {@link GtcUserWaypointDialog} to edit an existing user waypoint facility.
 */
export type GtcUserWaypointDialogEditInput = {
    /** The facility to edit, or the ICAO of the facility to edit. */
    editFacility: IcaoValue | UserFacility;
};
/**
 * A request for {@link GtcUserWaypointDialog} to create a new user waypoint.
 */
export type GtcUserWaypointDialogCreateInput = {
    /**
     * The latitude/longitude coordinates initially loaded into the dialog at the start of the request. If defined, the
     * dialog will also initialize to LAT/LON mode. If not defined, the dialog will initialize to RAD/DIS mode with the
     * initial coordinates set to match the airplane's current position.
     */
    initialLatLon?: LatLonInterface;
};
/**
 * A request input for {@link GtcUserWaypointDialog}.
 */
export type GtcUserWaypointDialogInput = GtcUserWaypointDialogEditInput | GtcUserWaypointDialogCreateInput;
/**
 * Component props for GtcUserWaypointDialog.
 */
export interface GtcUserWaypointDialogProps extends GtcViewProps {
    /** The facility repository. */
    facRepo: FacilityRepository;
    /** The facility loader. */
    facLoader: FacilityLoader;
    /** A controller for editing user waypoints. */
    controller: GtcUserWaypointEditController;
    /** A provider of airplane position data. */
    posHeadingDataProvider: GtcPositionHeadingDataProvider;
}
/**
 * A GTC dialog which allows the user to create and edit user waypoints.
 */
export declare class GtcUserWaypointDialog extends GtcView<GtcUserWaypointDialogProps> implements GtcDialogView<GtcUserWaypointDialogInput, UserFacility> {
    private static readonly REFERENCE_FORMATTER;
    private static readonly BEARING_FORMATTER;
    private static readonly DISTANCE_FORMATTER;
    private static readonly MAX_DISTANCE;
    private thisNode?;
    private readonly rootCssClass;
    private readonly unitsSettingManager;
    private readonly store;
    private readonly editingFacility;
    private nearestVors?;
    private readonly nearestSortFunc;
    protected resolveFunction?: (value: any) => void;
    protected resultObject: GtcDialogResult<UserFacility | null>;
    protected isAlive: boolean;
    /** @inheritdoc */
    constructor(props: GtcUserWaypointDialogProps);
    /** @inheritdoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritdoc */
    request(input: GtcUserWaypointDialogInput): Promise<GtcDialogResult<UserFacility>>;
    /**
     * Initializes this view to edit an existing user waypoint.
     * @param fac The existing user waypoint facility to edit, or its ICAO string.
     */
    private initEditing;
    /** @inheritdoc */
    onClose(): void;
    /** @inheritdoc */
    onGtcInteractionEvent(event: GtcInteractionEvent): boolean;
    /**
     * Attempts to create a new user waypoint with the currently selected parameters and add the new waypoint facility
     * to the facility repository. If this view is in editing mode, then the new facility will replace the edited
     * facility.
     */
    private tryCreateWaypoint;
    /**
     * Clears this dialog's pending request and fulfills the pending request Promise if one exists.
     */
    private cleanupRequest;
    /**
     * Opens a dialog to allow the user to select an ident.
     */
    private selectIdent;
    /**
     * Opens a dialog to allow the user to select a comment.
     */
    private selectComment;
    /**
     * Opens a dialog to allow the user to select a reference facility.
     * @param subject The subject in which to store the selected reference facility.
     */
    private selectReference;
    /**
     * Opens a dialog to allow the user to select a radial.
     * @param reference The radial's reference facility. If `null`, the dialog will not be opened.
     * @param subject The subject in which to store the selected radial.
     */
    private selectRadial;
    /**
     * Opens a dialog to allow the user to select a distance.
     * @param subject The subject in which to store the selected distance.
     */
    private selectDistance;
    /**
     * Opens a dialog to allow the user to select a set of latitude/longitude coordinates.
     * @param subject The subject in which to store the selected coordinates.
     */
    private selectLatLon;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcUserWaypointDialog.d.ts.map