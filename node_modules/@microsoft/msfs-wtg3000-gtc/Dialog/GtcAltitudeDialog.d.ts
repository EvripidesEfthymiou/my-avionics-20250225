import { Unit, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { GtcViewProps } from '../GtcService/GtcView';
import { AbstractGtcNumberDialog, GtcNumberDialogInput, GtcNumberDialogInputDefinition } from './AbstractGtcNumberDialog';
import './GtcAltitudeDialog.css';
/**
 * A request input for {@link GtcAltitudeDialog}.
 */
export interface GtcAltitudeDialogInput extends GtcNumberDialogInput {
    /**
     * The initial altitude unit. If not defined, the initial unit will default to a value based on the units mode.
     */
    initialUnit?: Unit<UnitFamily.Distance>;
    /** Whether the dialog should operate in units of feet or meters. */
    unitsMode: 'feet' | 'meters';
    /** The minimum valid numeric value allowed by the dialog's input. */
    minimumValue: number;
    /** The maximum valid numeric value allowed by the dialog's input. */
    maximumValue: number;
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A request result returned by {@link GtcAltitudeDialog}.
 */
export interface GtcAltitudeDialogOutput {
    /** The selected altitude. */
    value: number;
    /** The unit type of the selected altitude. */
    unit: Unit<UnitFamily.Distance>;
}
/**
 * A definition for a {@link NumberInput} used in a {@link GtcAltitudeDialog}.
 */
interface GtcAltitudeDialogInputDefinition extends GtcNumberDialogInputDefinition {
    /** The unit type associated with this definition's input. */
    readonly unit: Unit<UnitFamily.Distance>;
}
/**
 * A dialog which allows the user to enter an altitude in feet or meters.
 */
export declare class GtcAltitudeDialog extends AbstractGtcNumberDialog<GtcAltitudeDialogInput, GtcAltitudeDialogOutput, GtcAltitudeDialogInputDefinition> {
    private minValue;
    private maxValue;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcAltitudeDialogInput): void;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number, activeInputDef: GtcAltitudeDialogInputDefinition): GtcAltitudeDialogOutput;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Renders this dialog's feet value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's feet value input, as a VNode.
     */
    private renderFeetInput;
    /**
     * Renders this dialog's meters value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's meters value input, as a VNode.
     */
    private renderMetersInput;
}
export {};
//# sourceMappingURL=GtcAltitudeDialog.d.ts.map