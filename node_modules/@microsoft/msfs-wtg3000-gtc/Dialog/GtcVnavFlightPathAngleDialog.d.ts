import { NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../Components/NumberInput/NumberInput';
import { GtcNumberDialogInput } from './AbstractGtcNumberDialog';
import { AbstractSimpleGtcNumberDialog } from './AbstractSimpleGtcNumberDialog';
import '../Components/TouchButton/NumPadTouchButton.css';
import './GtcVnavFlightPathAngleDialog.css';
/** A request input for {@link GtcVnavFlightPathAngleDialog}. */
export interface GtcVnavFlightPathAngleDialogInput extends GtcNumberDialogInput {
    /** Whether to show the remove button. */
    showRemoveButton?: boolean;
}
/** A pop-up dialog which allows the user to select a flight path angle. */
export declare class GtcVnavFlightPathAngleDialog extends AbstractSimpleGtcNumberDialog<GtcVnavFlightPathAngleDialogInput> {
    private readonly removeButtonRef;
    private readonly showRemoveButton;
    private readonly min;
    private readonly max;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    protected onRequest(input: GtcVnavFlightPathAngleDialogInput): number;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string;
    /** @inheritdoc */
    protected getRootCssClassName(): string | undefined;
    /** @inheritDoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected onDecimalPressed(): void;
    /** @inheritdoc */
    protected onBackspacePressed(): void;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, valueToBind: Subject<number>): VNode;
    /** @inheritDoc */
    protected renderOtherContents(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcVnavFlightPathAngleDialog.d.ts.map