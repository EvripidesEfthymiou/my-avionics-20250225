import { SpeedRestrictionType, SpeedUnit, VNode } from '@microsoft/msfs-sdk';
import { FmsSpeedsGeneralLimits } from '@microsoft/msfs-wtg3000-common';
import { GtcView, GtcViewProps } from '../GtcService/GtcView';
import { GtcInteractionEvent } from '../GtcService/GtcInteractionEvent';
import { GtcDialogResult, GtcDialogView } from './GtcDialogView';
import '../Components/TouchButton/NumPadTouchButton.css';
import './GtcSpeedConstraintDialog.css';
/**
 * Component props for GtcSpeedConstraintDialog.
 */
export interface GtcSpeedConstraintDialogProps extends GtcViewProps {
    /** General speed limits for the airplane. */
    generalSpeedLimits: FmsSpeedsGeneralLimits;
}
/** A request input for {@link GtcSpeedConstraintDialog}. */
export interface GtcSpeedConstraintDialogInput {
    /** The initial speed to start with, knots IAS or Mach. */
    initialSpeed: number;
    /** The initial speed restriction type, or undefined.*/
    initialSpeedDesc: SpeedRestrictionType;
    /** The initial speed unit, or undefined.*/
    initialSpeedUnit: SpeedUnit;
    /** The published speed in knots IAS, or undefined.*/
    publishedSpeedIas?: number;
    /** The published speed restriction type, or undefined.*/
    publishedSpeedDesc?: SpeedRestrictionType;
    /** Whether the constraint is different from the published constraint.*/
    isDifferentFromPublished: boolean;
    /** Whether to show the remove button.*/
    allowRemove: boolean;
}
/** A result type for {@link GtcSpeedConstraintDialog}. */
export type GtcSpeedConstraintDialogResult = GtcSpeedConstraintDialogResultSet | GtcSpeedConstraintDialogResultRevert | GtcSpeedConstraintDialogResultRemove;
/** A set result for {@link GtcSpeedConstraintDialog}. */
export interface GtcSpeedConstraintDialogResultSet {
    /** A result to set the constraint. */
    result: 'set';
    /** The speed in knots IAS or Mach. */
    speed: number;
    /** The speed unit. */
    speedUnit: SpeedUnit;
    /** The speed constraint type. */
    speedDesc: SpeedRestrictionType;
}
/** A revert result for {@link GtcSpeedConstraintDialog}. */
export interface GtcSpeedConstraintDialogResultRevert {
    /** A result to revert the constraint to published values. */
    result: 'revert';
}
/** A remove result for {@link GtcSpeedConstraintDialog}. */
export interface GtcSpeedConstraintDialogResultRemove {
    /** A result to remove the constraint. */
    result: 'remove';
}
/** Dialog to set speed constraint. */
export declare class GtcSpeedConstraintDialog extends GtcView<GtcSpeedConstraintDialogProps> implements GtcDialogView<GtcSpeedConstraintDialogInput, GtcSpeedConstraintDialogResult> {
    private readonly iasInputRef;
    private readonly machInputRef;
    private readonly numpadRef;
    private readonly backspaceRef;
    private activeInput;
    private readonly iasInputCssClass;
    private readonly machInputCssClass;
    private readonly valueIAS;
    private readonly valueMach;
    private resolveFunction?;
    private resultObject;
    private readonly isDifferentFromPublished;
    private readonly atEnabled;
    private readonly aboveEnabled;
    private readonly belowEnabled;
    private readonly iasEnabled;
    private readonly machEnabled;
    private readonly speedDesc;
    private readonly speedUnit;
    private readonly allowRemove;
    private readonly minKnots;
    private readonly maxKnots;
    private readonly minMach;
    private readonly maxMach;
    private publishedSpeedIas?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    request(input: GtcSpeedConstraintDialogInput): Promise<GtcDialogResult<GtcSpeedConstraintDialogResult>>;
    /** @inheritDoc */
    onResume(): void;
    /** @inheritDoc */
    onClose(): void;
    /** @inheritdoc */
    onGtcInteractionEvent(event: GtcInteractionEvent): boolean;
    /**
     * Responds to when the editing state of this dialog's number input changes.
     * @param isEditingActive Whether editing is active for this dialog's number input.
     */
    private onEditingActiveChanged;
    /** Clears this dialog's pending request and fulfills the pending request Promise if one exists. */
    private cleanupRequest;
    /** @inheritdoc */
    private isValueValid;
    /** @inheritdoc */
    private getInvalidValueMessage;
    /**
     * Responds to when one of this dialog's number pad buttons is pressed.
     * @param value The value of the button that was pressed.
     */
    private onNumberPressed;
    /** Responds to when this dialog's backspace button is pressed. */
    private onBackspacePressed;
    /**
     * Validates the currently selected value, and if valid sets the value to be returned for the currently pending
     * request and closes this dialog.
     */
    private validateValueAndClose;
    /** @inheritdoc */
    render(): VNode;
    /**
     * Renders this dialog's number pad.
     * @param ref The reference to which to assign the rendered number pad.
     * @param rootCssClassName The CSS class name for this dialog's root element.
     * @returns This dialog's number pad, as a VNode.
     */
    private renderNumberPad;
    /**
     * Renders this dialog's backspace button.
     * @param ref The reference to which to assign the rendered button.
     * @param rootCssClassName The CSS class name for this dialog's root element.
     * @returns This dialog's backspace button, as a VNode, or `null` if this dialog does not have a backspace button.
     */
    private renderBackspaceButton;
    /**
     * Renders the number input for knots IAS.
     * @returns VNode.
     */
    private renderInputIas;
    /**
     * Renders the number input for Mach.
     * @returns VNode.
     */
    private renderInputMach;
    /** Set result object to 'revert' and close dialog. */
    private closeWithRevert;
    /** Set result object to 'remove' and close dialog. */
    private closeWithRemove;
    /**
     * Renders other contents for the dialog.
     * @returns The other contents.
     */
    private renderOtherContents;
}
//# sourceMappingURL=GtcSpeedConstraintDialog.d.ts.map