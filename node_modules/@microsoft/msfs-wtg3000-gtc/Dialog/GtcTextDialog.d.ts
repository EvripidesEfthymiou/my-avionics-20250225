import { VNode } from '@microsoft/msfs-sdk';
import { GtcInteractionEvent } from '../GtcService/GtcInteractionEvent';
import { GtcView } from '../GtcService/GtcView';
import { GtcDialogResult, GtcDialogView } from './GtcDialogView';
import './GtcTextDialog.css';
/**
 * A request input for {@link GtcTextDialog}.
 */
export type GtcTextDialogInput = {
    /** The label text to display next to the dialog's character input. */
    label: string;
    /** Whether to allow spaces to be input. */
    allowSpaces: boolean;
    /** The maximum number of characters to allow. */
    maxLength: number;
    /** The initial text with which to populate the dialog's character input. Defaults to the empty string. */
    initialValue?: string;
};
/**
 * A GTC dialog which allows the user to enter text.
 */
export declare class GtcTextDialog extends GtcView implements GtcDialogView<GtcTextDialogInput, string> {
    private static readonly CHAR_ARRAY;
    private static readonly CHAR_ARRAY_NO_SPACE;
    private thisNode?;
    private readonly inputContainerRef;
    private inputRef?;
    private readonly keyboardRef;
    private readonly inputText;
    private readonly inputTextSub;
    private readonly inputLabelText;
    private readonly isSpaceButtonEnabled;
    private resolveFunction?;
    private resultObject;
    private readonly inputSubscriptions;
    /** @inheritDoc */
    onAfterRender(thisNode: VNode): void;
    /** @inheritDoc */
    request(input: GtcTextDialogInput): Promise<GtcDialogResult<string>>;
    /** @inheritDoc */
    onClose(): void;
    /** @inheritDoc */
    onGtcInteractionEvent(event: GtcInteractionEvent): boolean;
    /**
     * A callback called when the search input box is updated.
     */
    private onInputTextChanged;
    /**
     * Attempts to resolve the current request.
     *
     * If this dialog searches for facilities, then the currently selected facility will be returned if one exists. If
     * there is no selected facility, duplicate matches will attempted to be resolved if they exist. If neither a
     * selected facility or duplicate matches exist, the request will be cancelled.
     *
     * If this dialog does not search for facilities, the current input text is returned.
     */
    private resolve;
    /**
     * Clears this dialog's pending request and fulfills the pending request Promise if one exists.
     */
    private cleanupRequest;
    /**
     * Responds to when one of this dialog's character keys is pressed.
     * @param char The character of the key that was pressed.
     */
    private onKeyPressed;
    /**
     * Responds to when this dialog's backspace button is pressed.
     */
    private onBackspacePressed;
    /** @inheritDoc */
    render(): VNode;
    /**
     * Renders a character input for this dialog.
     * @param charCount The maximum number of characters supported by the input.
     * @param allowSpaces Whether the input should allow spaces.
     * @returns A character input, as a VNode.
     */
    private renderCharInput;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcTextDialog.d.ts.map