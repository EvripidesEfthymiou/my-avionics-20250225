import { Unit, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { GtcViewProps } from '../GtcService/GtcView';
import { AbstractGtcNumberDialog, GtcNumberDialogInput, GtcNumberDialogInputDefinition } from './AbstractGtcNumberDialog';
import './GtcRunwayLengthDialog.css';
/**
 * A request input for {@link GtcRunwayLengthDialog}.
 */
export interface GtcRunwayLengthDialogInput extends GtcNumberDialogInput {
    /**
     * The initial length unit. If not defined, the initial unit will default to the one associated with the dialog's
     * unit mode.
     */
    initialUnit?: Unit<UnitFamily.Distance>;
    /**
     * The unit mode in which the dialog should operate.
     */
    unitsMode: 'feet' | 'meters';
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A request result returned by {@link GtcRunwayLengthDialog}.
 */
export interface GtcRunwayLengthDialogOutput {
    /** The selected length. */
    value: number;
    /** The unit type of the selected length. */
    unit: Unit<UnitFamily.Distance>;
}
/**
 * A definition for a {@link NumberInput} used in a {@link GtcRunwayLengthDialog}.
 */
interface GtcRunwayLengthDialogInputDefinition extends GtcNumberDialogInputDefinition {
    /** The maximum value allowed to be returned from this definition's input. */
    readonly max: number;
    /** The unit type associated with this definition's input. */
    readonly unit: Unit<UnitFamily.Distance>;
}
/**
 * A pop-up dialog which allows the user to select a runway length.
 */
export declare class GtcRunwayLengthDialog extends AbstractGtcNumberDialog<GtcRunwayLengthDialogInput, GtcRunwayLengthDialogOutput, GtcRunwayLengthDialogInputDefinition> {
    private static readonly FEET_MAX;
    private static readonly METERS_MAX;
    private unitsSub?;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcRunwayLengthDialogInput): void;
    /** @inheritdoc */
    protected isValueValid(value: number, activeInputDef: GtcRunwayLengthDialogInputDefinition): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(value: number, activeInputDef: GtcRunwayLengthDialogInputDefinition): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number, activeInputDef: GtcRunwayLengthDialogInputDefinition): GtcRunwayLengthDialogOutput;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Renders this dialog's feet value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's feet value input, as a VNode.
     */
    private renderFeetInput;
    /**
     * Renders this dialog's meters value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's meters value input, as a VNode.
     */
    private renderMetersInput;
    /** @inheritdoc */
    destroy(): void;
}
export {};
//# sourceMappingURL=GtcRunwayLengthDialog.d.ts.map