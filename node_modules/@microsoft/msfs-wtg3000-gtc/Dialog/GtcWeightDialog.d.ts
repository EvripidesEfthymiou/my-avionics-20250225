import { Unit, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { GtcViewProps } from '../GtcService/GtcView';
import { AbstractGtcNumberDialog, GtcNumberDialogInput, GtcNumberDialogInputDefinition } from './AbstractGtcNumberDialog';
import './GtcWeightDialog.css';
/**
 * A request input for {@link GtcWeightDialog}.
 */
export interface GtcWeightDialogInput extends GtcNumberDialogInput {
    /**
     * The initial weight unit. If not defined, the initial unit will default to the dialog's unit type.
     */
    initialUnit?: Unit<UnitFamily.Weight>;
    /** The unit type in which the dialog should operate. */
    unitType: Unit<UnitFamily.Weight>;
    /**
     * The number of digits supported by the dialog's input. If not defined, the number of digits will default to the
     * minimum number of digits required to accommodate the maximum valid value.
     */
    digitCount?: 3 | 4 | 5;
    /** The minimum valid numeric value allowed by the dialog's input, defaults to 0. */
    minimumValue?: number;
    /** The maximum valid numeric value allowed by the dialog's input. */
    maximumValue: number;
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A request result returned by {@link GtcWeightDialog}.
 */
export interface GtcWeightDialogOutput {
    /** The selected weight. */
    value: number;
    /** The unit type of the selected weight. */
    unit: Unit<UnitFamily.Weight>;
}
/**
 * A definition for a {@link NumberInput} used in a {@link GtcWeightDialog}.
 */
interface GtcWeightDialogInputDefinition extends GtcNumberDialogInputDefinition {
    /** The number of digits supported by this definition's input. */
    readonly digitCount: number;
}
/**
 * A dialog which allows the user to enter a weight. The dialog can operate with any arbitrary weight unit type and
 * supports three-, four-, and five-digit inputs.
 */
export declare class GtcWeightDialog extends AbstractGtcNumberDialog<GtcWeightDialogInput, GtcWeightDialogOutput, GtcWeightDialogInputDefinition> {
    private static readonly UNIT_FORMATTER;
    private readonly unitType;
    private readonly unitText;
    private minValue;
    private maxValue;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcWeightDialogInput): void;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number): GtcWeightDialogOutput;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Renders one of this dialog's value inputs.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @param digitCount The number of digits in the input.
     * @returns A value input with the specified number of digits, as a VNode.
     */
    private renderInput;
}
export {};
//# sourceMappingURL=GtcWeightDialog.d.ts.map