import { Facility, VNode } from '@microsoft/msfs-sdk';
import { GtcDialogResult, GtcDialogView } from './GtcDialogView';
import { GtcView, GtcViewProps } from '../GtcService/GtcView';
import { GtcPositionHeadingDataProvider } from '../Navigation/GtcPositionHeadingDataProvider';
import './GtcDuplicateWaypointDialog.css';
/**
 * Component props for GtcDuplicateWaypointDialog.
 */
export interface GtcDuplicateWaypointDialogProps extends GtcViewProps {
    /** A provider of airplane position and heading data. */
    posHeadingDataProvider: GtcPositionHeadingDataProvider;
}
/**
 * A request input for {@link GtcDuplicateWaypointDialog}.
 */
export type GtcDuplicateWaypointDialogInput<T extends Facility = Facility> = {
    /** The ident of the duplicate facilities. */
    ident: string;
    /** The duplicate facilities. */
    duplicates: readonly T[];
};
/**
 * A GTC duplicate waypoint dialog.
 */
export declare class GtcDuplicateWaypointDialog extends GtcView<GtcDuplicateWaypointDialogProps> implements GtcDialogView<GtcDuplicateWaypointDialogInput, Facility> {
    private static readonly BEARING_FORMATTER;
    private static readonly DISTANCE_FORMATTER;
    private static readonly ENTRY_SORT;
    private readonly listRef;
    private readonly rootCssClass;
    private readonly listItemHeight;
    private readonly listItemSpacing;
    private readonly facWaypointCache;
    private readonly unitsSettingManager;
    private readonly ppos;
    private readonly planeHeading;
    private readonly duplicateEntries;
    private readonly identText;
    private resolveFunction?;
    private resultObject;
    private isAlive;
    private pposPipe?;
    private headingPipe?;
    private isGpsDrSub?;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritDoc */
    onClose(): void;
    /** @inheritdoc */
    onResume(): void;
    /** @inheritdoc */
    onPause(): void;
    /** @inheritdoc */
    request<T extends Facility>(input: GtcDuplicateWaypointDialogInput<T>): Promise<GtcDialogResult<T>>;
    /**
     * Clears this dialog's pending request and fulfills the pending request Promise if one exists.
     */
    private cleanupRequest;
    /**
     * Renders a list item for a duplicate waypoint entry.
     * @param entry A duplicate waypoint entry.
     * @returns A list item for the specified duplicate waypoint entry, as a VNode.
     */
    private renderEntry;
    /** @inheritdoc */
    render(): VNode;
    /** @inheritdoc */
    destroy(): void;
}
//# sourceMappingURL=GtcDuplicateWaypointDialog.d.ts.map