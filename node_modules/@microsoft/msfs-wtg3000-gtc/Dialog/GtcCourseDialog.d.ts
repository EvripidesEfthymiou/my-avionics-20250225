import { NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../Components/NumberInput/NumberInput';
import { GtcNumberDialogInput } from './AbstractGtcNumberDialog';
import { AbstractSimpleGtcNumberDialog } from './AbstractSimpleGtcNumberDialog';
import '../Components/TouchButton/NumPadTouchButton.css';
import './GtcCourseDialog.css';
/**
 * A request input for {@link GtcCourseDialog}.
 */
export interface GtcCourseDialogInput extends GtcNumberDialogInput {
    /** The GTC view title to display with the message. */
    title?: string;
}
/** A pop-up dialog which allows the user to select a course. */
export declare class GtcCourseDialog extends AbstractSimpleGtcNumberDialog<GtcCourseDialogInput> {
    private readonly min;
    private readonly max;
    /** @inheritdoc */
    onAfterRender(): void;
    /** @inheritdoc */
    protected onRequest(input: GtcCourseDialogInput): number;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string;
    /** @inheritdoc */
    protected getRootCssClassName(): string | undefined;
    /** @inheritDoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, valueToBind: Subject<number>, rootCssClassName?: string): VNode;
}
//# sourceMappingURL=GtcCourseDialog.d.ts.map