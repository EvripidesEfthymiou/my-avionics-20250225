import { Unit, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { GtcViewProps } from '../GtcService/GtcView';
import { AbstractGtcNumberDialog, GtcNumberDialogInput, GtcNumberDialogInputDefinition } from './AbstractGtcNumberDialog';
import './GtcBaroPressureDialog.css';
/**
 * A request input for {@link GtcBaroPressureDialog}.
 */
export interface GtcBaroPressureDialogInput extends GtcNumberDialogInput {
    /**
     * The initial pressure unit. If not defined, the initial unit will default to a value based on the units mode.
     */
    initialUnit?: Unit<UnitFamily.Pressure>;
    /** Whether the dialog should operate in units of inches of mercury or hectopascals. */
    unitsMode: 'inhg' | 'hpa';
    /** The minimum valid numeric value allowed by the dialog's input. */
    minimumValue: number;
    /** The maximum valid numeric value allowed by the dialog's input. */
    maximumValue: number;
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A request result returned by {@link GtcBaroPressureDialog}.
 */
export interface GtcBaroPressureDialogOutput {
    /** The selected pressure. */
    value: number;
    /** The unit type of the selected pressure. */
    unit: Unit<UnitFamily.Pressure>;
}
/**
 * A definition for a {@link NumberInput} used in a {@link GtcBaroPressureDialog}.
 */
interface GtcBaroPressureDialogInputDefinition extends GtcNumberDialogInputDefinition {
    /** The unit type associated with this definition's input. */
    readonly unit: Unit<UnitFamily.Pressure>;
    /** The scaling factor used by this definition's input to represent the dialog's numeric values. */
    readonly factor: number;
    /** A function which formats minimum/maximum values used by this definition's input. */
    readonly formatter: (value: number) => string;
}
/**
 * A dialog which allows the user to enter a barometric pressure in inches of mercury or hectopascals.
 */
export declare class GtcBaroPressureDialog extends AbstractGtcNumberDialog<GtcBaroPressureDialogInput, GtcBaroPressureDialogOutput, GtcBaroPressureDialogInputDefinition> {
    private minValue;
    private maxValue;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcBaroPressureDialogInput): void;
    /** @inheritdoc */
    protected isValueValid(value: number, activeInputDef: GtcBaroPressureDialogInputDefinition): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(value: number, activeInputDef: GtcBaroPressureDialogInputDefinition): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number, activeInputDef: GtcBaroPressureDialogInputDefinition): GtcBaroPressureDialogOutput;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Renders this dialog's inches of mercury value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's inches of mercury value input, as a VNode.
     */
    private renderInhgInput;
    /**
     * Renders this dialog's hectopascals value input.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @returns This dialog's hectopascals value input, as a VNode.
     */
    private renderHpaInput;
}
export {};
//# sourceMappingURL=GtcBaroPressureDialog.d.ts.map