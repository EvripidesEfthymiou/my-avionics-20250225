import { NodeReference, Subject, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../Components/NumberInput/NumberInput';
import { GtcNumberDialogInput } from './AbstractGtcNumberDialog';
import { AbstractSimpleGtcNumberDialog } from './AbstractSimpleGtcNumberDialog';
import '../Components/TouchButton/NumPadTouchButton.css';
/**
 * A request input for {@link GtcDurationDialog}.
 */
export interface GtcDurationDialogInput extends GtcNumberDialogInput {
    /** The GTC view title to display with the message. */
    title?: string;
    /** The minimum valid value, in seconds. Defaults to `0`. */
    min?: number;
    /** The maximum valid value, in seconds. Defaults to `86399` (23 hours, 59 minutes, 59 seconds). */
    max?: number;
}
/**
 * A pop-up dialog which allows the user to select a duration, in seconds.
 */
export declare class GtcDurationDialog extends AbstractSimpleGtcNumberDialog<GtcDurationDialogInput> {
    private static readonly HR_TO_SEC;
    private static readonly MIN_TO_SEC;
    private static readonly DEFAULT_MIN;
    private static readonly DEFAULT_MAX;
    private static readonly ABSOLUTE_MAX;
    private static readonly FORMATTER;
    private min;
    private max;
    private readonly hourMaxValue;
    /** @inheritdoc */
    protected onRequest(input: GtcDurationDialogInput): number;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string;
    /** @inheritdoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected getRootCssClassName(): string | undefined;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, valueToBind: Subject<number>): VNode;
}
//# sourceMappingURL=GtcDurationDialog.d.ts.map