import { NodeReference, Subject, Subscribable, VNode } from '@microsoft/msfs-sdk';
import { NumberInput } from '../Components/NumberInput/NumberInput';
import { AbstractSimpleGtcNumberDialog } from './AbstractSimpleGtcNumberDialog';
import '../Components/TouchButton/NumPadTouchButton.css';
import './GtcLocalTimeOffsetDialog.css';
/**
 * A pop-up dialog which allows the user to select a local time offset.
 */
export declare class GtcLocalTimeOffsetDialog extends AbstractSimpleGtcNumberDialog {
    private static readonly HR_TO_MS;
    private static readonly MIN_TO_MS;
    /** @inheritdoc */
    readonly title: Subscribable<string | undefined>;
    private readonly signSlotRef;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string;
    /** @inheritdoc */
    protected getPayload(value: number): number;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Responds to when this dialog's sign button is pressed.
     */
    private onSignButtonPressed;
    /** @inheritdoc */
    protected renderInput(ref: NodeReference<NumberInput>, valueToBind: Subject<number>, rootCssClassName: string | undefined): VNode;
    /** @inheritdoc */
    protected renderOtherNumberPadContents(rootCssClassName: string | undefined): VNode | null;
}
//# sourceMappingURL=GtcLocalTimeOffsetDialog.d.ts.map