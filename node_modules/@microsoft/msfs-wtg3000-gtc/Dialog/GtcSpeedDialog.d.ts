import { Unit, UnitFamily, VNode } from '@microsoft/msfs-sdk';
import { GtcViewProps } from '../GtcService/GtcView';
import { AbstractGtcNumberDialog, GtcNumberDialogInput, GtcNumberDialogInputDefinition } from './AbstractGtcNumberDialog';
import './GtcSpeedDialog.css';
/**
 * A request input for {@link GtcSpeedDialog}.
 */
export interface GtcSpeedDialogInput extends GtcNumberDialogInput {
    /**
     * The initial speed unit. If not defined, the initial unit will default to the dialog's unit type.
     */
    initialUnit?: Unit<UnitFamily.Speed>;
    /** The unit type in which the dialog should operate. */
    unitType: Unit<UnitFamily.Speed>;
    /**
     * The number of digits to the left of the decimal point supported by the dialog's input. If not defined, the number
     * of digits will default to the minimum number of digits required to accommodate the maximum valid value.
     */
    digitCount?: 2 | 3 | 4;
    /** The minimum valid numeric value allowed by the dialog's input. */
    minimumValue: number;
    /** The maximum valid numeric value allowed by the dialog's input. */
    maximumValue: number;
    /** The GTC view title to display with the message. */
    title?: string;
}
/**
 * A request result returned by {@link GtcSpeedDialog}.
 */
export interface GtcSpeedDialogOutput {
    /** The selected speed. */
    value: number;
    /** The unit type of the selected speed. */
    unit: Unit<UnitFamily.Speed>;
}
/**
 * A definition for a {@link NumberInput} used in a {@link GtcSpeedDialog}.
 */
interface GtcSpeedDialogInputDefinition extends GtcNumberDialogInputDefinition {
    /** The number of digits to the left of the decimal point supported by this definition's input. */
    readonly digitCount: number;
}
/**
 * A dialog which allows the user to enter a speed. The dialog can operate with any arbitrary speed unit type and
 * supports inputs with two, three, or four digits.
 */
export declare class GtcSpeedDialog extends AbstractGtcNumberDialog<GtcSpeedDialogInput, GtcSpeedDialogOutput, GtcSpeedDialogInputDefinition> {
    private static readonly UNIT_FORMATTER;
    private readonly unitType;
    private readonly unitText;
    private minValue;
    private maxValue;
    /** @inheritdoc */
    constructor(props: GtcViewProps);
    /** @inheritdoc */
    protected onRequest(input: GtcSpeedDialogInput): void;
    /** @inheritdoc */
    protected isValueValid(value: number): boolean;
    /** @inheritdoc */
    protected getInvalidValueMessage(): string | VNode;
    /** @inheritdoc */
    protected getPayload(value: number): GtcSpeedDialogOutput;
    /** @inheritdoc */
    protected getRootCssClassName(): string;
    /**
     * Renders one of this dialog's value inputs.
     * @param ref The reference to which to assign the rendered input.
     * @param value The value to bind to the rendered input.
     * @param isVisible A subscribable to which to bind the visibility of the rendered input.
     * @param digitCount The number of digits in the input.
     * @returns A value input with the specified number of digits, as a VNode.
     */
    private renderInput;
}
export {};
//# sourceMappingURL=GtcSpeedDialog.d.ts.map